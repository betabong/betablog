<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/4.0.1" created="2014-12-08 10:09" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>blog.betabong.com</title>
	<link>http://blog.betabong.com</link>
	<description></description>
	<pubDate>Mon, 08 Dec 2014 10:09:44 +0000</pubDate>
	<language>en-US</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://blog.betabong.com</wp:base_site_url>
	<wp:base_blog_url>http://blog.betabong.com</wp:base_blog_url>

	<wp:author><wp:author_id>1</wp:author_id><wp:author_login>admin</wp:author_login><wp:author_email>sklaus@betabong.com</wp:author_email><wp:author_display_name><![CDATA[admin]]></wp:author_display_name><wp:author_first_name><![CDATA[Severin]]></wp:author_first_name><wp:author_last_name><![CDATA[Klaus]]></wp:author_last_name></wp:author>
	<wp:author><wp:author_id>3</wp:author_id><wp:author_login>betabong</wp:author_login><wp:author_email>sklaus@betabong.com</wp:author_email><wp:author_display_name><![CDATA[betabong]]></wp:author_display_name><wp:author_first_name><![CDATA[Severin]]></wp:author_first_name><wp:author_last_name><![CDATA[Klaus]]></wp:author_last_name></wp:author>
	<wp:author><wp:author_id>2</wp:author_id><wp:author_login>delicious</wp:author_login><wp:author_email>sklaus@betabong.com</wp:author_email><wp:author_display_name><![CDATA[delicious]]></wp:author_display_name><wp:author_first_name><![CDATA[Severin]]></wp:author_first_name><wp:author_last_name><![CDATA[Klaus]]></wp:author_last_name></wp:author>

	<wp:category><wp:term_id>1</wp:term_id><wp:category_nicename></wp:category_nicename><wp:category_parent></wp:category_parent></wp:category>
	<wp:category><wp:term_id>4</wp:term_id><wp:category_nicename>tech</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Frontend]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>7</wp:term_id><wp:category_nicename>javascript-tech</wp:category_nicename><wp:category_parent>tech</wp:category_parent><wp:cat_name><![CDATA[Javascript]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>64</wp:term_id><wp:category_nicename>mac</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Mac]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>8</wp:term_id><wp:category_nicename>php</wp:category_nicename><wp:category_parent>tech</wp:category_parent><wp:cat_name><![CDATA[PHP]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>3</wp:term_id><wp:category_nicename>random</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Random]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>6</wp:term_id><wp:category_nicename>actionscript</wp:category_nicename><wp:category_parent>tech</wp:category_parent><wp:cat_name><![CDATA[Actionscript]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>87</wp:term_id><wp:category_nicename>css-tech</wp:category_nicename><wp:category_parent>tech</wp:category_parent><wp:cat_name><![CDATA[CSS]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>30</wp:term_id><wp:category_nicename>design-random</wp:category_nicename><wp:category_parent>random</wp:category_parent><wp:cat_name><![CDATA[Design]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>5</wp:term_id><wp:category_nicename>flex</wp:category_nicename><wp:category_parent>tech</wp:category_parent><wp:cat_name><![CDATA[Flex]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>13</wp:term_id><wp:category_nicename>music</wp:category_nicename><wp:category_parent>random</wp:category_parent><wp:cat_name><![CDATA[Music]]></wp:cat_name></wp:category>
	<wp:tag><wp:term_id>23</wp:term_id><wp:tag_slug>mt_keywords</wp:tag_slug><wp:tag_name><![CDATA[!$mt_keywords$!]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>16</wp:term_id><wp:tag_slug>3d</wp:tag_slug><wp:tag_name><![CDATA[3d]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>6</wp:term_id><wp:tag_slug>actionscript</wp:tag_slug><wp:tag_name><![CDATA[Actionscript]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>35</wp:term_id><wp:tag_slug>advertising</wp:tag_slug><wp:tag_name><![CDATA[advertising]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>52</wp:term_id><wp:tag_slug>animation</wp:tag_slug><wp:tag_name><![CDATA[animation]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>60</wp:term_id><wp:tag_slug>ant</wp:tag_slug><wp:tag_name><![CDATA[Ant]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>24</wp:term_id><wp:tag_slug>apple</wp:tag_slug><wp:tag_name><![CDATA[apple]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>62</wp:term_id><wp:tag_slug>as3</wp:tag_slug><wp:tag_name><![CDATA[AS3]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>77</wp:term_id><wp:tag_slug>bbml</wp:tag_slug><wp:tag_name><![CDATA[bbml]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>58</wp:term_id><wp:tag_slug>browser</wp:tag_slug><wp:tag_name><![CDATA[Browser]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>67</wp:term_id><wp:tag_slug>bug</wp:tag_slug><wp:tag_name><![CDATA[Bug]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>54</wp:term_id><wp:tag_slug>c</wp:tag_slug><wp:tag_name><![CDATA[C++]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>72</wp:term_id><wp:tag_slug>canvas</wp:tag_slug><wp:tag_name><![CDATA[canvas]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>63</wp:term_id><wp:tag_slug>car</wp:tag_slug><wp:tag_name><![CDATA[car]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>46</wp:term_id><wp:tag_slug>closure</wp:tag_slug><wp:tag_name><![CDATA[closure]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>82</wp:term_id><wp:tag_slug>compression</wp:tag_slug><wp:tag_name><![CDATA[Compression]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>55</wp:term_id><wp:tag_slug>cs4</wp:tag_slug><wp:tag_name><![CDATA[CS4]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>49</wp:term_id><wp:tag_slug>css</wp:tag_slug><wp:tag_name><![CDATA[css]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>12</wp:term_id><wp:tag_slug>cyrillic</wp:tag_slug><wp:tag_name><![CDATA[cyrillic]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>50</wp:term_id><wp:tag_slug>dance</wp:tag_slug><wp:tag_name><![CDATA[dance]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>59</wp:term_id><wp:tag_slug>debug</wp:tag_slug><wp:tag_name><![CDATA[Debug]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>25</wp:term_id><wp:tag_slug>design</wp:tag_slug><wp:tag_name><![CDATA[design]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>40</wp:term_id><wp:tag_slug>e4x</wp:tag_slug><wp:tag_name><![CDATA[e4x]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>18</wp:term_id><wp:tag_slug>eclipse</wp:tag_slug><wp:tag_name><![CDATA[eclipse]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>39</wp:term_id><wp:tag_slug>event</wp:tag_slug><wp:tag_name><![CDATA[event]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>21</wp:term_id><wp:tag_slug>eventdispatcher</wp:tag_slug><wp:tag_name><![CDATA[EventDispatcher]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>14</wp:term_id><wp:tag_slug>flash</wp:tag_slug><wp:tag_name><![CDATA[flash]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>61</wp:term_id><wp:tag_slug>flash-10</wp:tag_slug><wp:tag_name><![CDATA[Flash 10]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>65</wp:term_id><wp:tag_slug>flash-ide</wp:tag_slug><wp:tag_name><![CDATA[Flash IDE]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>68</wp:term_id><wp:tag_slug>flash-player</wp:tag_slug><wp:tag_name><![CDATA[Flash Player]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>5</wp:term_id><wp:tag_slug>flex</wp:tag_slug><wp:tag_name><![CDATA[Flex]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>57</wp:term_id><wp:tag_slug>flex-builder</wp:tag_slug><wp:tag_name><![CDATA[Flex Builder]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>78</wp:term_id><wp:tag_slug>framework</wp:tag_slug><wp:tag_name><![CDATA[framework]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>37</wp:term_id><wp:tag_slug>freitag</wp:tag_slug><wp:tag_name><![CDATA[freitag]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>33</wp:term_id><wp:tag_slug>gui</wp:tag_slug><wp:tag_name><![CDATA[gui]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>66</wp:term_id><wp:tag_slug>html</wp:tag_slug><wp:tag_name><![CDATA[html]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>56</wp:term_id><wp:tag_slug>install</wp:tag_slug><wp:tag_name><![CDATA[Install]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>32</wp:term_id><wp:tag_slug>interface</wp:tag_slug><wp:tag_name><![CDATA[interface]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>19</wp:term_id><wp:tag_slug>iphone</wp:tag_slug><wp:tag_name><![CDATA[iPhone]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>48</wp:term_id><wp:tag_slug>javascript</wp:tag_slug><wp:tag_name><![CDATA[javascript]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>83</wp:term_id><wp:tag_slug>jquery</wp:tag_slug><wp:tag_name><![CDATA[jquery]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>74</wp:term_id><wp:tag_slug>labs</wp:tag_slug><wp:tag_name><![CDATA[Labs]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>42</wp:term_id><wp:tag_slug>library</wp:tag_slug><wp:tag_name><![CDATA[library]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>64</wp:term_id><wp:tag_slug>mac</wp:tag_slug><wp:tag_name><![CDATA[Mac]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>45</wp:term_id><wp:tag_slug>method</wp:tag_slug><wp:tag_name><![CDATA[method]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>51</wp:term_id><wp:tag_slug>movie</wp:tag_slug><wp:tag_name><![CDATA[movie]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>31</wp:term_id><wp:tag_slug>multitouch</wp:tag_slug><wp:tag_name><![CDATA[multitouch]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>13</wp:term_id><wp:tag_slug>music</wp:tag_slug><wp:tag_name><![CDATA[Music]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>44</wp:term_id><wp:tag_slug>open-source</wp:tag_slug><wp:tag_name><![CDATA[open source]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>43</wp:term_id><wp:tag_slug>os</wp:tag_slug><wp:tag_name><![CDATA[os]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>36</wp:term_id><wp:tag_slug>parsing</wp:tag_slug><wp:tag_name><![CDATA[parsing]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>38</wp:term_id><wp:tag_slug>party</wp:tag_slug><wp:tag_name><![CDATA[party]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>73</wp:term_id><wp:tag_slug>pixel-bender</wp:tag_slug><wp:tag_name><![CDATA[Pixel Bender]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>76</wp:term_id><wp:tag_slug>presentation</wp:tag_slug><wp:tag_name><![CDATA[presentation]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>10</wp:term_id><wp:tag_slug>project</wp:tag_slug><wp:tag_name><![CDATA[project]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>81</wp:term_id><wp:tag_slug>proxy</wp:tag_slug><wp:tag_name><![CDATA[proxy]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>26</wp:term_id><wp:tag_slug>quote</wp:tag_slug><wp:tag_name><![CDATA[quote]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>17</wp:term_id><wp:tag_slug>radiohead</wp:tag_slug><wp:tag_name><![CDATA[radiohead]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>3</wp:term_id><wp:tag_slug>random</wp:tag_slug><wp:tag_name><![CDATA[Random]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>71</wp:term_id><wp:tag_slug>rendering</wp:tag_slug><wp:tag_name><![CDATA[Rendering]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>86</wp:term_id><wp:tag_slug>rotate</wp:tag_slug><wp:tag_name><![CDATA[rotate]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>11</wp:term_id><wp:tag_slug>russian</wp:tag_slug><wp:tag_name><![CDATA[russian]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>75</wp:term_id><wp:tag_slug>sfug</wp:tag_slug><wp:tag_name><![CDATA[sfug]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>53</wp:term_id><wp:tag_slug>sound</wp:tag_slug><wp:tag_name><![CDATA[sound]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>29</wp:term_id><wp:tag_slug>speed</wp:tag_slug><wp:tag_name><![CDATA[speed]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>9</wp:term_id><wp:tag_slug>svn</wp:tag_slug><wp:tag_name><![CDATA[svn]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>34</wp:term_id><wp:tag_slug>svp</wp:tag_slug><wp:tag_name><![CDATA[svp]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>69</wp:term_id><wp:tag_slug>testing</wp:tag_slug><wp:tag_name><![CDATA[Testing]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>70</wp:term_id><wp:tag_slug>text</wp:tag_slug><wp:tag_name><![CDATA[Text]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>85</wp:term_id><wp:tag_slug>transform</wp:tag_slug><wp:tag_name><![CDATA[transform]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>80</wp:term_id><wp:tag_slug>tv</wp:tag_slug><wp:tag_name><![CDATA[tv]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>79</wp:term_id><wp:tag_slug>utility</wp:tag_slug><wp:tag_name><![CDATA[Utility]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>28</wp:term_id><wp:tag_slug>vector</wp:tag_slug><wp:tag_name><![CDATA[vector]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>15</wp:term_id><wp:tag_slug>video</wp:tag_slug><wp:tag_name><![CDATA[video]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>47</wp:term_id><wp:tag_slug>weak</wp:tag_slug><wp:tag_name><![CDATA[weak]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>84</wp:term_id><wp:tag_slug>webkit</wp:tag_slug><wp:tag_name><![CDATA[webkit]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>20</wp:term_id><wp:tag_slug>wordpress</wp:tag_slug><wp:tag_name><![CDATA[Wordpress]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>41</wp:term_id><wp:tag_slug>xml</wp:tag_slug><wp:tag_name><![CDATA[xml]]></wp:tag_name></wp:tag>

	<generator>http://wordpress.org/?v=4.0.1</generator>

	<item>
				<title>astro</title>
		<link>http://blog.betabong.com/2008/08/22/flash-player-10-i-love-speed/astro/</link>
		<pubDate>Fri, 22 Aug 2008 08:53:40 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/wp-content/uploads/2008/08/astro.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>84</wp:post_id>
		<wp:post_date>2008-08-22 09:53:40</wp:post_date>
		<wp:post_date_gmt>2008-08-22 08:53:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>astro</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>77</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.betabong.com/wp-content/uploads/2008/08/astro.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/httpd/vhosts/betabong.com/subdomains/blog/httpdocs/wp-content/uploads/2008/08/astro.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:150;s:6:"height";i:164;s:14:"hwstring_small";s:22:"height='96' width='87'";s:4:"file";s:93:"/home/httpd/vhosts/betabong.com/subdomains/blog/httpdocs/wp-content/uploads/2008/08/astro.jpg";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"astro-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>ipod-doubleclick</title>
		<link>http://blog.betabong.com/2008/08/25/iphone-os-20-great-new-feature/ipod-doubleclick/</link>
		<pubDate>Mon, 25 Aug 2008 20:14:55 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/wp-content/uploads/2008/08/ipod-doubleclick.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>90</wp:post_id>
		<wp:post_date>2008-08-25 21:14:55</wp:post_date>
		<wp:post_date_gmt>2008-08-25 20:14:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ipod-doubleclick</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>89</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.betabong.com/wp-content/uploads/2008/08/ipod-doubleclick.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/httpd/vhosts/betabong.com/subdomains/blog/httpdocs/wp-content/uploads/2008/08/ipod-doubleclick.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:200;s:6:"height";i:186;s:14:"hwstring_small";s:23:"height='96' width='103'";s:4:"file";s:104:"/home/httpd/vhosts/betabong.com/subdomains/blog/httpdocs/wp-content/uploads/2008/08/ipod-doubleclick.jpg";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:28:"ipod-doubleclick-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>sheeps</title>
		<link>http://blog.betabong.com/2008/08/28/sheeps/sheeps/</link>
		<pubDate>Wed, 27 Aug 2008 23:29:34 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/wp-content/uploads/2008/08/sheeps.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>98</wp:post_id>
		<wp:post_date>2008-08-28 00:29:34</wp:post_date>
		<wp:post_date_gmt>2008-08-27 23:29:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sheeps</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>97</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.betabong.com/wp-content/uploads/2008/08/sheeps.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/httpd/vhosts/betabong.com/subdomains/blog/httpdocs/wp-content/uploads/2008/08/sheeps.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:400;s:6:"height";i:202;s:14:"hwstring_small";s:23:"height='64' width='128'";s:4:"file";s:94:"/home/httpd/vhosts/betabong.com/subdomains/blog/httpdocs/wp-content/uploads/2008/08/sheeps.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"sheeps-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:18:"sheeps-300x151.jpg";s:5:"width";i:300;s:6:"height";i:151;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>sheeps1</title>
		<link>http://blog.betabong.com/2008/08/28/sheeps/sheeps1/</link>
		<pubDate>Wed, 27 Aug 2008 23:32:10 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/wp-content/uploads/2008/08/sheeps1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>99</wp:post_id>
		<wp:post_date>2008-08-28 00:32:10</wp:post_date>
		<wp:post_date_gmt>2008-08-27 23:32:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sheeps1</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>97</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.betabong.com/wp-content/uploads/2008/08/sheeps1.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/httpd/vhosts/betabong.com/subdomains/blog/httpdocs/wp-content/uploads/2008/08/sheeps1.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:400;s:6:"height";i:202;s:14:"hwstring_small";s:23:"height='64' width='128'";s:4:"file";s:95:"/home/httpd/vhosts/betabong.com/subdomains/blog/httpdocs/wp-content/uploads/2008/08/sheeps1.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:19:"sheeps1-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:19:"sheeps1-300x151.jpg";s:5:"width";i:300;s:6:"height";i:151;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>F15-a</title>
		<link>http://blog.betabong.com/?attachment_id=104</link>
		<pubDate>Fri, 19 Sep 2008 15:32:36 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/wp-content/uploads/2008/09/20080919-img_8798.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>104</wp:post_id>
		<wp:post_date>2008-09-19 16:32:36</wp:post_date>
		<wp:post_date_gmt>2008-09-19 15:32:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>20080919-img_8798</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>103</wp:post_parent>
		<wp:menu_order>3</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.betabong.com/wp-content/uploads/2008/09/20080919-img_8798.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/httpd/vhosts/betabong.com/subdomains/blog/httpdocs/wp-content/uploads/2008/09/20080919-img_8798.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1000;s:6:"height";i:1000;s:14:"hwstring_small";s:22:"height='96' width='96'";s:4:"file";s:105:"/home/httpd/vhosts/betabong.com/subdomains/blog/httpdocs/wp-content/uploads/2008/09/20080919-img_8798.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:29:"20080919-img_8798-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:29:"20080919-img_8798-300x300.jpg";s:5:"width";i:300;s:6:"height";i:300;}}s:10:"image_meta";a:10:{s:8:"aperture";d:1.399999999999999911182158029987476766109466552734375;s:6:"credit";s:0:"";s:6:"camera";s:13:"Canon EOS 40D";s:7:"caption";s:0:"";s:17:"created_timestamp";i:1221833798;s:9:"copyright";s:0:"";s:12:"focal_length";i:50;s:3:"iso";i:320;s:13:"shutter_speed";d:0.0166666666666666664353702032030923874117434024810791015625;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>F15-b</title>
		<link>http://blog.betabong.com/?attachment_id=105</link>
		<pubDate>Fri, 19 Sep 2008 15:32:57 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/wp-content/uploads/2008/09/20080919-img_8799.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>105</wp:post_id>
		<wp:post_date>2008-09-19 16:32:57</wp:post_date>
		<wp:post_date_gmt>2008-09-19 15:32:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>20080919-img_8799</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>103</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.betabong.com/wp-content/uploads/2008/09/20080919-img_8799.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/httpd/vhosts/betabong.com/subdomains/blog/httpdocs/wp-content/uploads/2008/09/20080919-img_8799.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1000;s:6:"height";i:1000;s:14:"hwstring_small";s:22:"height='96' width='96'";s:4:"file";s:105:"/home/httpd/vhosts/betabong.com/subdomains/blog/httpdocs/wp-content/uploads/2008/09/20080919-img_8799.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:29:"20080919-img_8799-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:29:"20080919-img_8799-300x300.jpg";s:5:"width";i:300;s:6:"height";i:300;}}s:10:"image_meta";a:10:{s:8:"aperture";d:1.399999999999999911182158029987476766109466552734375;s:6:"credit";s:0:"";s:6:"camera";s:13:"Canon EOS 40D";s:7:"caption";s:0:"";s:17:"created_timestamp";i:1221833821;s:9:"copyright";s:0:"";s:12:"focal_length";i:50;s:3:"iso";i:320;s:13:"shutter_speed";d:0.0200000000000000004163336342344337026588618755340576171875;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>20080919-img_8803</title>
		<link>http://blog.betabong.com/?attachment_id=106</link>
		<pubDate>Fri, 19 Sep 2008 15:33:36 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/wp-content/uploads/2008/09/20080919-img_8803.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>106</wp:post_id>
		<wp:post_date>2008-09-19 16:33:36</wp:post_date>
		<wp:post_date_gmt>2008-09-19 15:33:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>20080919-img_8803</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>103</wp:post_parent>
		<wp:menu_order>2</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.betabong.com/wp-content/uploads/2008/09/20080919-img_8803.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/httpd/vhosts/betabong.com/subdomains/blog/httpdocs/wp-content/uploads/2008/09/20080919-img_8803.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1000;s:6:"height";i:1000;s:14:"hwstring_small";s:22:"height='96' width='96'";s:4:"file";s:105:"/home/httpd/vhosts/betabong.com/subdomains/blog/httpdocs/wp-content/uploads/2008/09/20080919-img_8803.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:29:"20080919-img_8803-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:29:"20080919-img_8803-300x300.jpg";s:5:"width";i:300;s:6:"height";i:300;}}s:10:"image_meta";a:10:{s:8:"aperture";d:1.399999999999999911182158029987476766109466552734375;s:6:"credit";s:0:"";s:6:"camera";s:13:"Canon EOS 40D";s:7:"caption";s:0:"";s:17:"created_timestamp";i:1221833890;s:9:"copyright";s:0:"";s:12:"focal_length";i:50;s:3:"iso";i:320;s:13:"shutter_speed";d:0.0166666666666666664353702032030923874117434024810791015625;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>20080919-img_87981</title>
		<link>http://blog.betabong.com/2008/09/19/freitag-rolling-for-15-years/20080919-img_87981/</link>
		<pubDate>Fri, 19 Sep 2008 15:49:51 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/wp-content/uploads/2008/09/20080919-img_87981.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>108</wp:post_id>
		<wp:post_date>2008-09-19 16:49:51</wp:post_date>
		<wp:post_date_gmt>2008-09-19 15:49:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>20080919-img_87981</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>107</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.betabong.com/wp-content/uploads/2008/09/20080919-img_87981.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/httpd/vhosts/betabong.com/subdomains/blog/httpdocs/wp-content/uploads/2008/09/20080919-img_87981.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1000;s:6:"height";i:1000;s:14:"hwstring_small";s:22:"height='96' width='96'";s:4:"file";s:106:"/home/httpd/vhosts/betabong.com/subdomains/blog/httpdocs/wp-content/uploads/2008/09/20080919-img_87981.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:30:"20080919-img_87981-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:30:"20080919-img_87981-300x300.jpg";s:5:"width";i:300;s:6:"height";i:300;}}s:10:"image_meta";a:10:{s:8:"aperture";d:1.399999999999999911182158029987476766109466552734375;s:6:"credit";s:0:"";s:6:"camera";s:13:"Canon EOS 40D";s:7:"caption";s:0:"";s:17:"created_timestamp";i:1221833798;s:9:"copyright";s:0:"";s:12:"focal_length";i:50;s:3:"iso";i:320;s:13:"shutter_speed";d:0.0166666666666666664353702032030923874117434024810791015625;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>20080919-img_87991</title>
		<link>http://blog.betabong.com/2008/09/19/freitag-rolling-for-15-years/20080919-img_87991/</link>
		<pubDate>Fri, 19 Sep 2008 15:51:02 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/wp-content/uploads/2008/09/20080919-img_87991.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>109</wp:post_id>
		<wp:post_date>2008-09-19 16:51:02</wp:post_date>
		<wp:post_date_gmt>2008-09-19 15:51:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>20080919-img_87991</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>107</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.betabong.com/wp-content/uploads/2008/09/20080919-img_87991.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/httpd/vhosts/betabong.com/subdomains/blog/httpdocs/wp-content/uploads/2008/09/20080919-img_87991.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1000;s:6:"height";i:1000;s:14:"hwstring_small";s:22:"height='96' width='96'";s:4:"file";s:106:"/home/httpd/vhosts/betabong.com/subdomains/blog/httpdocs/wp-content/uploads/2008/09/20080919-img_87991.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:30:"20080919-img_87991-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:30:"20080919-img_87991-300x300.jpg";s:5:"width";i:300;s:6:"height";i:300;}}s:10:"image_meta";a:10:{s:8:"aperture";d:1.399999999999999911182158029987476766109466552734375;s:6:"credit";s:0:"";s:6:"camera";s:13:"Canon EOS 40D";s:7:"caption";s:0:"";s:17:"created_timestamp";i:1221833821;s:9:"copyright";s:0:"";s:12:"focal_length";i:50;s:3:"iso";i:320;s:13:"shutter_speed";d:0.0200000000000000004163336342344337026588618755340576171875;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>e4x</title>
		<link>http://blog.betabong.com/2008/09/23/e4x-string-parser/e4x/</link>
		<pubDate>Tue, 23 Sep 2008 11:06:12 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/wp-content/uploads/2008/09/e4x.png</guid>
		<description></description>
		<content:encoded><![CDATA[E4X Parser Test]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>113</wp:post_id>
		<wp:post_date>2008-09-23 12:06:12</wp:post_date>
		<wp:post_date_gmt>2008-09-23 11:06:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>e4x</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>111</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.betabong.com/wp-content/uploads/2008/09/e4x.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/httpd/vhosts/betabong.com/subdomains/blog/httpdocs/wp-content/uploads/2008/09/e4x.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:599;s:6:"height";i:474;s:14:"hwstring_small";s:23:"height='96' width='121'";s:4:"file";s:91:"/home/httpd/vhosts/betabong.com/subdomains/blog/httpdocs/wp-content/uploads/2008/09/e4x.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:15:"e4x-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:15:"e4x-300x237.png";s:5:"width";i:300;s:6:"height";i:237;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Canvas Demo</title>
		<link>http://blog.betabong.com/2008/10/09/how-about-we-go-fuck-instead/picture-6/</link>
		<pubDate>Wed, 08 Oct 2008 23:43:56 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/wp-content/uploads/2008/10/picture-6.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>136</wp:post_id>
		<wp:post_date>2008-10-09 00:43:56</wp:post_date>
		<wp:post_date_gmt>2008-10-08 23:43:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>picture-6</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>135</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.betabong.com/wp-content/uploads/2008/10/picture-6.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/httpd/vhosts/betabong.com/subdomains/blog/httpdocs/wp-content/uploads/2008/10/picture-6.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:792;s:6:"height";i:477;s:14:"hwstring_small";s:23:"height='77' width='128'";s:4:"file";s:97:"/home/httpd/vhosts/betabong.com/subdomains/blog/httpdocs/wp-content/uploads/2008/10/picture-6.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:21:"picture-6-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:21:"picture-6-300x180.png";s:5:"width";i:300;s:6:"height";i:180;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>edelflash_logo</title>
		<link>http://blog.betabong.com/2008/10/30/edelflash-v2/edelflash_logo/</link>
		<pubDate>Thu, 30 Oct 2008 09:24:14 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/wp-content/uploads/2008/10/edelflash_logo.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Edel*flash]]></excerpt:encoded>
		<wp:post_id>140</wp:post_id>
		<wp:post_date>2008-10-30 10:24:14</wp:post_date>
		<wp:post_date_gmt>2008-10-30 09:24:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>edelflash_logo</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>139</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.betabong.com/wp-content/uploads/2008/10/edelflash_logo.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/httpd/vhosts/betabong.com/subdomains/blog/httpdocs/wp-content/uploads/2008/10/edelflash_logo.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:200;s:6:"height";i:80;s:14:"hwstring_small";s:23:"height='51' width='128'";s:4:"file";s:102:"/home/httpd/vhosts/betabong.com/subdomains/blog/httpdocs/wp-content/uploads/2008/10/edelflash_logo.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:25:"edelflash_logo-150x80.png";s:5:"width";i:150;s:6:"height";i:80;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>flashcommand</title>
		<link>http://blog.betabong.com/2008/11/29/flex-builder-t-flash-ide/flashcommand/</link>
		<pubDate>Tue, 02 Dec 2008 01:40:20 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/wp-content/uploads/2008/12/flashcommand</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Modified FlashCommand]]></excerpt:encoded>
		<wp:post_id>149</wp:post_id>
		<wp:post_date>2008-12-02 02:40:20</wp:post_date>
		<wp:post_date_gmt>2008-12-02 01:40:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>flashcommand</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>144</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.betabong.com/wp-content/uploads/2008/12/flashcommand</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/httpd/vhosts/betabong.com/subdomains/blog/httpdocs/wp-content/uploads/2008/12/flashcommand]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>flashcommand</title>
		<link>http://blog.betabong.com/2008/11/29/flex-builder-t-flash-ide/flashcommand-2/</link>
		<pubDate>Tue, 02 Dec 2008 01:52:59 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/wp-content/uploads/2008/12/flashcommand.zip</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>150</wp:post_id>
		<wp:post_date>2008-12-02 02:52:59</wp:post_date>
		<wp:post_date_gmt>2008-12-02 01:52:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>flashcommand-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>144</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.betabong.com/wp-content/uploads/2008/12/flashcommand.zip</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/httpd/vhosts/betabong.com/subdomains/blog/httpdocs/wp-content/uploads/2008/12/flashcommand.zip]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>flaproject</title>
		<link>http://blog.betabong.com/2008/12/03/test-movie-from-flex-to-flash-easy-way/flaproject/</link>
		<pubDate>Wed, 03 Dec 2008 11:19:41 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/wp-content/uploads/2008/12/flaproject.zip</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>155</wp:post_id>
		<wp:post_date>2008-12-03 12:19:41</wp:post_date>
		<wp:post_date_gmt>2008-12-03 11:19:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>flaproject</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>154</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.betabong.com/wp-content/uploads/2008/12/flaproject.zip</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/httpd/vhosts/betabong.com/subdomains/blog/httpdocs/wp-content/uploads/2008/12/flaproject.zip]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>picture-10</title>
		<link>http://blog.betabong.com/2008/12/06/test-flex-throttled-simulate-download/picture-10/</link>
		<pubDate>Sat, 06 Dec 2008 15:21:29 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/wp-content/uploads/2008/12/picture-10.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>162</wp:post_id>
		<wp:post_date>2008-12-06 16:21:29</wp:post_date>
		<wp:post_date_gmt>2008-12-06 15:21:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>picture-10</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>161</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.betabong.com/wp-content/uploads/2008/12/picture-10.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/httpd/vhosts/betabong.com/subdomains/blog/httpdocs/wp-content/uploads/2008/12/picture-10.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:233;s:6:"height";i:41;s:14:"hwstring_small";s:23:"height='22' width='128'";s:4:"file";s:98:"/home/httpd/vhosts/betabong.com/subdomains/blog/httpdocs/wp-content/uploads/2008/12/picture-10.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:21:"picture-10-150x41.png";s:5:"width";i:150;s:6:"height";i:41;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>picture-11</title>
		<link>http://blog.betabong.com/2008/12/06/test-flex-throttled-simulate-download/picture-11/</link>
		<pubDate>Sat, 06 Dec 2008 15:28:17 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/wp-content/uploads/2008/12/picture-11.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>163</wp:post_id>
		<wp:post_date>2008-12-06 16:28:17</wp:post_date>
		<wp:post_date_gmt>2008-12-06 15:28:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>picture-11</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>161</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.betabong.com/wp-content/uploads/2008/12/picture-11.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/httpd/vhosts/betabong.com/subdomains/blog/httpdocs/wp-content/uploads/2008/12/picture-11.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:501;s:6:"height";i:453;s:14:"hwstring_small";s:23:"height='96' width='106'";s:4:"file";s:98:"/home/httpd/vhosts/betabong.com/subdomains/blog/httpdocs/wp-content/uploads/2008/12/picture-11.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:22:"picture-11-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:22:"picture-11-300x271.png";s:5:"width";i:300;s:6:"height";i:271;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>picture-12</title>
		<link>http://blog.betabong.com/2008/12/06/test-flex-throttled-simulate-download/picture-12/</link>
		<pubDate>Sat, 06 Dec 2008 15:32:07 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/wp-content/uploads/2008/12/picture-12.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>164</wp:post_id>
		<wp:post_date>2008-12-06 16:32:07</wp:post_date>
		<wp:post_date_gmt>2008-12-06 15:32:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>picture-12</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>161</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.betabong.com/wp-content/uploads/2008/12/picture-12.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/httpd/vhosts/betabong.com/subdomains/blog/httpdocs/wp-content/uploads/2008/12/picture-12.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:375;s:6:"height";i:34;s:14:"hwstring_small";s:23:"height='11' width='128'";s:4:"file";s:98:"/home/httpd/vhosts/betabong.com/subdomains/blog/httpdocs/wp-content/uploads/2008/12/picture-12.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:21:"picture-12-150x34.png";s:5:"width";i:150;s:6:"height";i:34;}s:6:"medium";a:3:{s:4:"file";s:21:"picture-12-300x27.png";s:5:"width";i:300;s:6:"height";i:27;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>picture-14</title>
		<link>http://blog.betabong.com/2008/12/06/test-flex-throttled-simulate-download/picture-14/</link>
		<pubDate>Sat, 06 Dec 2008 15:35:06 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/wp-content/uploads/2008/12/picture-14.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>165</wp:post_id>
		<wp:post_date>2008-12-06 16:35:06</wp:post_date>
		<wp:post_date_gmt>2008-12-06 15:35:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>picture-14</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>161</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.betabong.com/wp-content/uploads/2008/12/picture-14.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/httpd/vhosts/betabong.com/subdomains/blog/httpdocs/wp-content/uploads/2008/12/picture-14.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:790;s:6:"height";i:762;s:14:"hwstring_small";s:22:"height='96' width='99'";s:4:"file";s:98:"/home/httpd/vhosts/betabong.com/subdomains/blog/httpdocs/wp-content/uploads/2008/12/picture-14.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:22:"picture-14-150x150.png";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:22:"picture-14-300x289.png";s:5:"width";i:300;s:6:"height";i:289;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>picture-15</title>
		<link>http://blog.betabong.com/2008/12/06/test-flex-throttled-simulate-download/picture-15/</link>
		<pubDate>Sat, 06 Dec 2008 15:39:41 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/wp-content/uploads/2008/12/picture-15.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>166</wp:post_id>
		<wp:post_date>2008-12-06 16:39:41</wp:post_date>
		<wp:post_date_gmt>2008-12-06 15:39:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>picture-15</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>161</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.betabong.com/wp-content/uploads/2008/12/picture-15.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/httpd/vhosts/betabong.com/subdomains/blog/httpdocs/wp-content/uploads/2008/12/picture-15.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:423;s:6:"height";i:40;s:14:"hwstring_small";s:23:"height='12' width='128'";s:4:"file";s:98:"/home/httpd/vhosts/betabong.com/subdomains/blog/httpdocs/wp-content/uploads/2008/12/picture-15.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:21:"picture-15-150x40.png";s:5:"width";i:150;s:6:"height";i:40;}s:6:"medium";a:3:{s:4:"file";s:21:"picture-15-300x28.png";s:5:"width";i:300;s:6:"height";i:28;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>helloworld</title>
		<link>http://blog.betabong.com/2008/12/03/test-movie-from-flex-to-flash-easy-way/helloworld/</link>
		<pubDate>Sat, 06 Dec 2008 20:26:06 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/wp-content/uploads/2008/12/helloworld.zip</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>169</wp:post_id>
		<wp:post_date>2008-12-06 21:26:06</wp:post_date>
		<wp:post_date_gmt>2008-12-06 20:26:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>helloworld</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>154</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.betabong.com/wp-content/uploads/2008/12/helloworld.zip</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/httpd/vhosts/betabong.com/subdomains/blog/httpdocs/wp-content/uploads/2008/12/helloworld.zip]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>coverflow</title>
		<link>http://blog.betabong.com/2008/12/08/coverflow-3d-with-flash-player-10/coverflow/</link>
		<pubDate>Mon, 08 Dec 2008 21:48:40 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/wp-content/uploads/2008/12/coverflow.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>173</wp:post_id>
		<wp:post_date>2008-12-08 22:48:40</wp:post_date>
		<wp:post_date_gmt>2008-12-08 21:48:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>coverflow</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>172</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.betabong.com/wp-content/uploads/2008/12/coverflow.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/httpd/vhosts/betabong.com/subdomains/blog/httpdocs/wp-content/uploads/2008/12/coverflow.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:750;s:6:"height";i:299;s:14:"hwstring_small";s:23:"height='51' width='128'";s:4:"file";s:97:"/home/httpd/vhosts/betabong.com/subdomains/blog/httpdocs/wp-content/uploads/2008/12/coverflow.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:21:"coverflow-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:21:"coverflow-300x119.jpg";s:5:"width";i:300;s:6:"height";i:119;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>2001-vw-microbus-concept-side-1280x960</title>
		<link>http://blog.betabong.com/2008/12/09/vw-microbus-concept-why-not/2001-vw-microbus-concept-side-1280x960/</link>
		<pubDate>Tue, 09 Dec 2008 12:55:01 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/wp-content/uploads/2008/12/2001-vw-microbus-concept-side-1280x960.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>176</wp:post_id>
		<wp:post_date>2008-12-09 13:55:01</wp:post_date>
		<wp:post_date_gmt>2008-12-09 12:55:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>2001-vw-microbus-concept-side-1280x960</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>175</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.betabong.com/wp-content/uploads/2008/12/2001-vw-microbus-concept-side-1280x960.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/httpd/vhosts/betabong.com/subdomains/blog/httpdocs/wp-content/uploads/2008/12/2001-vw-microbus-concept-side-1280x960.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1280;s:6:"height";i:960;s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:126:"/home/httpd/vhosts/betabong.com/subdomains/blog/httpdocs/wp-content/uploads/2008/12/2001-vw-microbus-concept-side-1280x960.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:50:"2001-vw-microbus-concept-side-1280x960-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:50:"2001-vw-microbus-concept-side-1280x960-300x225.jpg";s:5:"width";i:300;s:6:"height";i:225;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>torqueomata2916</title>
		<link>http://blog.betabong.com/2008/12/09/vw-microbus-concept-why-not/torqueomata2916/</link>
		<pubDate>Tue, 09 Dec 2008 12:56:18 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/wp-content/uploads/2008/12/torqueomata2916.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>177</wp:post_id>
		<wp:post_date>2008-12-09 13:56:18</wp:post_date>
		<wp:post_date_gmt>2008-12-09 12:56:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>torqueomata2916</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>175</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.betabong.com/wp-content/uploads/2008/12/torqueomata2916.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/httpd/vhosts/betabong.com/subdomains/blog/httpdocs/wp-content/uploads/2008/12/torqueomata2916.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:800;s:6:"height";i:600;s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:103:"/home/httpd/vhosts/betabong.com/subdomains/blog/httpdocs/wp-content/uploads/2008/12/torqueomata2916.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:27:"torqueomata2916-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:27:"torqueomata2916-300x225.jpg";s:5:"width";i:300;s:6:"height";i:225;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>torqueomata2912</title>
		<link>http://blog.betabong.com/2008/12/09/vw-microbus-concept-why-not/torqueomata2912/</link>
		<pubDate>Tue, 09 Dec 2008 12:56:50 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/wp-content/uploads/2008/12/torqueomata2912.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>178</wp:post_id>
		<wp:post_date>2008-12-09 13:56:50</wp:post_date>
		<wp:post_date_gmt>2008-12-09 12:56:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>torqueomata2912</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>175</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.betabong.com/wp-content/uploads/2008/12/torqueomata2912.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/httpd/vhosts/betabong.com/subdomains/blog/httpdocs/wp-content/uploads/2008/12/torqueomata2912.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:800;s:6:"height";i:600;s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:103:"/home/httpd/vhosts/betabong.com/subdomains/blog/httpdocs/wp-content/uploads/2008/12/torqueomata2912.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:27:"torqueomata2912-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:27:"torqueomata2912-300x225.jpg";s:5:"width";i:300;s:6:"height";i:225;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>example-inlineblock</title>
		<link>http://blog.betabong.com/2009/02/25/css-alternative-to-left-float/example-inlineblock/</link>
		<pubDate>Wed, 25 Feb 2009 21:15:10 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/wp-content/uploads/2009/02/example-inlineblock.html</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>200</wp:post_id>
		<wp:post_date>2009-02-25 22:15:10</wp:post_date>
		<wp:post_date_gmt>2009-02-25 21:15:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>example-inlineblock</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>196</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.betabong.com/wp-content/uploads/2009/02/example-inlineblock.html</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2009/02/example-inlineblock.html]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>bug-3d-shadow</title>
		<link>http://blog.betabong.com/2009/04/01/bug-hunting-shadowed-3d-and-scrollrect/bug-3d-shadow/</link>
		<pubDate>Wed, 01 Apr 2009 15:35:10 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/wp-content/uploads/2009/04/bug-3d-shadow.swf</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>218</wp:post_id>
		<wp:post_date>2009-04-01 16:35:10</wp:post_date>
		<wp:post_date_gmt>2009-04-01 15:35:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bug-3d-shadow</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>217</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.betabong.com/wp-content/uploads/2009/04/bug-3d-shadow.swf</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2009/04/bug-3d-shadow.swf]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Flash Debug in Debug</title>
		<link>http://blog.betabong.com/2009/04/05/flash-debug-speed/picture-11-2/</link>
		<pubDate>Sun, 05 Apr 2009 00:23:47 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/wp-content/uploads/2009/04/picture-11.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>226</wp:post_id>
		<wp:post_date>2009-04-05 01:23:47</wp:post_date>
		<wp:post_date_gmt>2009-04-05 00:23:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>picture-11-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>225</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.betabong.com/wp-content/uploads/2009/04/picture-11.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2009/04/picture-11.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"428";s:6:"height";s:3:"185";s:14:"hwstring_small";s:23:"height='55' width='127'";s:4:"file";s:22:"2009/04/picture-11.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:22:"picture-11-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:22:"picture-11-300x129.png";s:5:"width";s:3:"300";s:6:"height";s:3:"129";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Release in Debug</title>
		<link>http://blog.betabong.com/2009/04/05/flash-debug-speed/picture-9/</link>
		<pubDate>Sun, 05 Apr 2009 00:24:41 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/wp-content/uploads/2009/04/picture-9.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>227</wp:post_id>
		<wp:post_date>2009-04-05 01:24:41</wp:post_date>
		<wp:post_date_gmt>2009-04-05 00:24:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>picture-9</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>225</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.betabong.com/wp-content/uploads/2009/04/picture-9.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2009/04/picture-9.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"428";s:6:"height";s:3:"185";s:14:"hwstring_small";s:23:"height='55' width='127'";s:4:"file";s:21:"2009/04/picture-9.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:21:"picture-9-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:21:"picture-9-300x129.png";s:5:"width";s:3:"300";s:6:"height";s:3:"129";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Debug in Release</title>
		<link>http://blog.betabong.com/2009/04/05/flash-debug-speed/picture-12-2/</link>
		<pubDate>Sun, 05 Apr 2009 00:25:59 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/wp-content/uploads/2009/04/picture-12.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>228</wp:post_id>
		<wp:post_date>2009-04-05 01:25:59</wp:post_date>
		<wp:post_date_gmt>2009-04-05 00:25:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>picture-12-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>225</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.betabong.com/wp-content/uploads/2009/04/picture-12.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2009/04/picture-12.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"427";s:6:"height";s:3:"181";s:14:"hwstring_small";s:23:"height='54' width='128'";s:4:"file";s:22:"2009/04/picture-12.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:22:"picture-12-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:22:"picture-12-300x127.png";s:5:"width";s:3:"300";s:6:"height";s:3:"127";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Release in Release</title>
		<link>http://blog.betabong.com/2009/04/05/flash-debug-speed/picture-13/</link>
		<pubDate>Sun, 05 Apr 2009 00:26:44 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/wp-content/uploads/2009/04/picture-13.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>229</wp:post_id>
		<wp:post_date>2009-04-05 01:26:44</wp:post_date>
		<wp:post_date_gmt>2009-04-05 00:26:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>picture-13</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>225</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.betabong.com/wp-content/uploads/2009/04/picture-13.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2009/04/picture-13.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"427";s:6:"height";s:3:"185";s:14:"hwstring_small";s:23:"height='55' width='128'";s:4:"file";s:22:"2009/04/picture-13.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:22:"picture-13-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:22:"picture-13-300x129.png";s:5:"width";s:3:"300";s:6:"height";s:3:"129";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>metatunnel-pixelbender</title>
		<link>http://blog.betabong.com/2009/04/17/metatunnel-with-pixel-bender/metatunnel-pixelbender/</link>
		<pubDate>Fri, 17 Apr 2009 21:32:02 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/wp-content/uploads/2009/04/metatunnel-pixelbender.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>254</wp:post_id>
		<wp:post_date>2009-04-17 22:32:02</wp:post_date>
		<wp:post_date_gmt>2009-04-17 21:32:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>metatunnel-pixelbender</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>252</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.betabong.com/wp-content/uploads/2009/04/metatunnel-pixelbender.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2009/04/metatunnel-pixelbender.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"512";s:6:"height";s:3:"512";s:14:"hwstring_small";s:22:"height='96' width='96'";s:4:"file";s:34:"2009/04/metatunnel-pixelbender.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:34:"metatunnel-pixelbender-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:34:"metatunnel-pixelbender-300x300.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>sfug-presentation-bbml-hq</title>
		<link>http://blog.betabong.com/2009/04/22/bbml-presentation/sfug-presentation-bbml-hq/</link>
		<pubDate>Wed, 22 Apr 2009 07:06:37 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/wp-content/uploads/2009/04/sfug-presentation-bbml-hq.mov</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>263</wp:post_id>
		<wp:post_date>2009-04-22 08:06:37</wp:post_date>
		<wp:post_date_gmt>2009-04-22 07:06:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sfug-presentation-bbml-hq</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>262</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.betabong.com/wp-content/uploads/2009/04/sfug-presentation-bbml-hq.mov</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2009/04/sfug-presentation-bbml-hq.mov]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Sev presenting...</title>
		<link>http://blog.betabong.com/2009/04/22/bbml-presentation/sfug-pres/</link>
		<pubDate>Wed, 22 Apr 2009 07:45:49 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/wp-content/uploads/2009/04/sfug-pres.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>266</wp:post_id>
		<wp:post_date>2009-04-22 08:45:49</wp:post_date>
		<wp:post_date_gmt>2009-04-22 07:45:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sfug-pres</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>262</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.betabong.com/wp-content/uploads/2009/04/sfug-pres.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2009/04/sfug-pres.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"520";s:6:"height";s:3:"390";s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:21:"2009/04/sfug-pres.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:21:"sfug-pres-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:21:"sfug-pres-300x224.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"224";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>wspluginswitcher-icon</title>
		<link>http://blog.betabong.com/2009/04/27/switch-flash-browser-plugin-mac/wspluginswitcher-icon/</link>
		<pubDate>Mon, 27 Apr 2009 12:55:18 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/wp-content/uploads/2009/04/wspluginswitcher-icon.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>274</wp:post_id>
		<wp:post_date>2009-04-27 13:55:18</wp:post_date>
		<wp:post_date_gmt>2009-04-27 12:55:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>wspluginswitcher-icon</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>273</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.betabong.com/wp-content/uploads/2009/04/wspluginswitcher-icon.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2009/04/wspluginswitcher-icon.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";s:3:"128";s:6:"height";s:3:"128";s:14:"hwstring_small";s:22:"height='96' width='96'";s:4:"file";s:33:"2009/04/wspluginswitcher-icon.jpg";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>031609_garbage_can</title>
		<link>http://blog.betabong.com/2009/09/09/garbage-collection-dictionary-listener/031609_garbage_can/</link>
		<pubDate>Wed, 09 Sep 2009 17:03:01 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/wp-content/uploads/2009/09/031609_garbage_can.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>290</wp:post_id>
		<wp:post_date>2009-09-09 18:03:01</wp:post_date>
		<wp:post_date_gmt>2009-09-09 17:03:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>031609_garbage_can</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>286</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.betabong.com/wp-content/uploads/2009/09/031609_garbage_can.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2009/09/031609_garbage_can.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"288";s:6:"height";s:3:"409";s:14:"hwstring_small";s:22:"height='96' width='67'";s:4:"file";s:30:"2009/09/031609_garbage_can.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:30:"031609_garbage_can-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:30:"031609_garbage_can-211x300.jpg";s:5:"width";s:3:"211";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>betabits</title>
		<link>http://blog.betabong.com/2009/09/22/binary-fun-bits-in-bed-with-actionscript/betabits/</link>
		<pubDate>Mon, 21 Sep 2009 23:03:12 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/wp-content/uploads/2009/09/betabits.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>299</wp:post_id>
		<wp:post_date>2009-09-22 00:03:12</wp:post_date>
		<wp:post_date_gmt>2009-09-21 23:03:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>betabits</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>297</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.betabong.com/wp-content/uploads/2009/09/betabits.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2009/09/betabits.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"503";s:6:"height";s:3:"191";s:14:"hwstring_small";s:23:"height='48' width='127'";s:4:"file";s:20:"2009/09/betabits.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:20:"betabits-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:20:"betabits-300x113.png";s:5:"width";s:3:"300";s:6:"height";s:3:"113";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Screen shot 2009-11-30 at 15.41.17</title>
		<link>http://blog.betabong.com/2009/11/30/how-to-watch-tv-from-abroad/screen-shot-2009-11-30-at-15-41-17/</link>
		<pubDate>Mon, 30 Nov 2009 14:55:48 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/wp-content/uploads/2009/11/Screen-shot-2009-11-30-at-15.41.17.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>305</wp:post_id>
		<wp:post_date>2009-11-30 15:55:48</wp:post_date>
		<wp:post_date_gmt>2009-11-30 14:55:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screen-shot-2009-11-30-at-15-41-17</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>304</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.betabong.com/wp-content/uploads/2009/11/Screen-shot-2009-11-30-at-15.41.17.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2009/11/Screen-shot-2009-11-30-at-15.41.17.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"665";s:6:"height";s:3:"520";s:14:"hwstring_small";s:23:"height='96' width='122'";s:4:"file";s:46:"2009/11/Screen-shot-2009-11-30-at-15.41.17.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:46:"Screen-shot-2009-11-30-at-15.41.17-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:46:"Screen-shot-2009-11-30-at-15.41.17-300x234.png";s:5:"width";s:3:"300";s:6:"height";s:3:"234";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Screen shot 2009-11-30 at Mo. 30.11  16.15.53</title>
		<link>http://blog.betabong.com/2009/11/30/how-to-watch-tv-from-abroad/screen-shot-2009-11-30-at-mo-30-11-16-15-53/</link>
		<pubDate>Mon, 30 Nov 2009 15:18:51 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/wp-content/uploads/2009/11/Screen-shot-2009-11-30-at-Mo.-30.11-16.15.53.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>310</wp:post_id>
		<wp:post_date>2009-11-30 16:18:51</wp:post_date>
		<wp:post_date_gmt>2009-11-30 15:18:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screen-shot-2009-11-30-at-mo-30-11-16-15-53</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>304</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.betabong.com/wp-content/uploads/2009/11/Screen-shot-2009-11-30-at-Mo.-30.11-16.15.53.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2009/11/Screen-shot-2009-11-30-at-Mo.-30.11-16.15.53.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"878";s:6:"height";s:3:"559";s:14:"hwstring_small";s:23:"height='81' width='128'";s:4:"file";s:56:"2009/11/Screen-shot-2009-11-30-at-Mo.-30.11-16.15.53.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:56:"Screen-shot-2009-11-30-at-Mo.-30.11-16.15.53-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:56:"Screen-shot-2009-11-30-at-Mo.-30.11-16.15.53-300x191.png";s:5:"width";s:3:"300";s:6:"height";s:3:"191";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Screen shot 2009-11-30 at Mo. 30.11  16.24.56</title>
		<link>http://blog.betabong.com/2009/11/30/how-to-watch-tv-from-abroad/screen-shot-2009-11-30-at-mo-30-11-16-24-56/</link>
		<pubDate>Mon, 30 Nov 2009 15:25:26 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/wp-content/uploads/2009/11/Screen-shot-2009-11-30-at-Mo.-30.11-16.24.56.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>313</wp:post_id>
		<wp:post_date>2009-11-30 16:25:26</wp:post_date>
		<wp:post_date_gmt>2009-11-30 15:25:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screen-shot-2009-11-30-at-mo-30-11-16-24-56</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>304</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.betabong.com/wp-content/uploads/2009/11/Screen-shot-2009-11-30-at-Mo.-30.11-16.24.56.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2009/11/Screen-shot-2009-11-30-at-Mo.-30.11-16.24.56.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"922";s:6:"height";s:3:"577";s:14:"hwstring_small";s:23:"height='80' width='128'";s:4:"file";s:56:"2009/11/Screen-shot-2009-11-30-at-Mo.-30.11-16.24.56.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:56:"Screen-shot-2009-11-30-at-Mo.-30.11-16.24.56-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:56:"Screen-shot-2009-11-30-at-Mo.-30.11-16.24.56-300x187.png";s:5:"width";s:3:"300";s:6:"height";s:3:"187";}s:5:"large";a:3:{s:4:"file";s:56:"Screen-shot-2009-11-30-at-Mo.-30.11-16.24.56-520x325.png";s:5:"width";s:3:"520";s:6:"height";s:3:"325";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>About</title>
		<link>http://blog.betabong.com/about/</link>
		<pubDate>Thu, 05 Apr 2007 14:19:09 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false"></guid>
		<description></description>
		<content:encoded><![CDATA[Severin Klaus, Betabong Klaus Kreation]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2</wp:post_id>
		<wp:post_date>2007-04-05 17:19:09</wp:post_date>
		<wp:post_date_gmt>2007-04-05 14:19:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>about</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Flex Project - SVN Strategy</title>
		<link>http://blog.betabong.com/2008/07/16/flex-project-svn-strategy/</link>
		<pubDate>Wed, 16 Jul 2008 10:35:54 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?p=13</guid>
		<description></description>
		<content:encoded><![CDATA[I like to keep all my projects on a svn server. So far this was just for myself and I didn't care much about the simplicity of checking out and in – a little chaos is acceptable if you're up to handle it ;)

Finally I was forced to rethink this strategy because I wanted to let other people work on a project. As many actionscript projects, this one also heavily relies on external libraries, most of them hosted by Google Code, another one being my own (closed) lib. So should I tell people: «hey, just svn checkout from here and there and then relink the libs in the project properties but don't check in the updated settings for christ's sake!»No. Too shaky, really.

Fortunately, SVN provides a fucking cool way to solve this issue: svn:externals. <!--more-->Ha! This is so awesome, you won't believe it ;-) Okay, here are the steps to follow (on a mac at least):

Create a flex project:
<ul>
	<li>project
<ul>
	<li>html-template</li>
	<li>src</li>
</ul>
</li>
</ul>
Add a new directory:
<ul>
	<li>project
<ul>
	<li>html-template</li>
	<li>src</li>
	<li>externals</li>
</ul>
</li>
</ul>
Now put this on your svn, either by svn add or by putting in the repos and checking out again (well.. just as you did). If you've already got bin-debug or bin-release directories, just remove them on the repos and svn update (they are created with each publish in flex).

Now let's say our project resides in ~/Documents/projects/project (path to project). Do the following in Terminal:
<pre>cd ~/Documents/projects/project/externals
svn svn propedit svn:externals .</pre>
This should open an editor (in my case I've defined textmate as my editor by doing:)
<pre>export EDITOR='mate -w'</pre>
Enter the following (example libraries):
<pre>caurinatweener http://tweener.googlecode.com/svn/trunk/as3/
as3corelib http://as3corelib.googlecode.com/svn/</pre>
You can also add a specific release:
<pre>caurinatweener -r23 http://tweener.googlecode.com/svn/trunk/as3/</pre>
(in TextMate save and close, if you use vim you know what to do anyway)

Now comes the magic part:
<pre>svn up</pre>
This will checkout all defined libraries into externals/xyz!! you do <code>svn commit</code> and now every time somebody checks out your project (or your externals directory) all the libs will be checked out automatically! I think this is just fucking awesome! :-)

Now in Eclipse all paths to your external libraries will be relative to the project (of course you have to add the libs there or change the paths – you should know how to do that ;))

Now all we need to is ignoring bin-release and bin-debug. We don't want these directories to be in our svn repos:
<pre>cd ~/Documents/projects/project
svn svn propedit svn:ignore .</pre>
enter a list of directories or files to be ignored. in our case:
<pre>bin-debug
bin-release</pre>
That's it! Thanks, svn!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>13</wp:post_id>
		<wp:post_date>2008-07-16 11:35:54</wp:post_date>
		<wp:post_date_gmt>2008-07-16 10:35:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>flex-project-svn-strategy</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="actionscript"><![CDATA[Actionscript]]></category>
		<category domain="post_tag" nicename="eclipse"><![CDATA[eclipse]]></category>
		<category domain="category" nicename="flex"><![CDATA[Flex]]></category>
		<category domain="post_tag" nicename="flex"><![CDATA[Flex]]></category>
		<category domain="category" nicename="tech"><![CDATA[Frontend]]></category>
		<category domain="post_tag" nicename="project"><![CDATA[project]]></category>
		<category domain="post_tag" nicename="svn"><![CDATA[svn]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>????????</title>
		<link>http://blog.betabong.com/?page_id=18</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?page_id=18</guid>
		<description></description>
		<content:encoded><![CDATA[<div style="font-size:30px; line-height: 40px;">???????? ????? ????????
??????? ?????</div>
Yeah, i'm learning the cyrillic alphabet!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>18</wp:post_id>
		<wp:post_date>2008-07-16 11:44:12</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Projects</title>
		<link>http://blog.betabong.com/?page_id=54</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?page_id=54</guid>
		<description></description>
		<content:encoded><![CDATA[Find here a list of projects Betabong has been involved with:]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>54</wp:post_id>
		<wp:post_date>2008-08-14 19:41:20</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Alexander Sauer Photographer</title>
		<link>http://blog.betabong.com/alexander-sauer-photographer/</link>
		<pubDate>Sat, 14 Feb 2004 18:52:36 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?page_id=61</guid>
		<description></description>
		<content:encoded><![CDATA[<div>
<img class="alignnone" title="Screenshot" src="http://www.betabong.com/media/screens/alexsauer-1/crop4.jpg" alt="" width="520" height="358" />

 
 

<img class="alignnone" title="Screenshot" src="http://www.betabong.com/media/screens/alexsauer-2/crop4.jpg" alt="" width="520" height="358" />

 

<img class="alignnone" title="Screenshot" src="http://www.betabong.com/media/screens/alexsauer-3/crop4.jpg" alt="" width="520" height="358" /></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>61</wp:post_id>
		<wp:post_date>2004-02-14 19:52:36</wp:post_date>
		<wp:post_date_gmt>2004-02-14 18:52:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>alexander-sauer-photographer</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Bambi</title>
		<link>http://blog.betabong.com/bambi/</link>
		<pubDate>Thu, 14 Aug 2008 18:59:41 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?page_id=68</guid>
		<description></description>
		<content:encoded><![CDATA[<div>
<img alt="" src="http://www.betabong.com/media/screens/bambi-1/crop4.jpg" title="Bambi" class="alignnone" width="520" height="378" />



<img alt="" src="http://www.betabong.com/media/screens/bambi-2/crop4.jpg" title="Bambi" class="alignnone" width="520" height="378" />



<img alt="" src="http://www.betabong.com/media/screens/bambi-3/crop4.jpg" title="Bambi" class="alignnone" width="520" height="378" />
</div>



]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>68</wp:post_id>
		<wp:post_date>2008-08-14 19:59:41</wp:post_date>
		<wp:post_date_gmt>2008-08-14 18:59:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bambi</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Benetton</title>
		<link>http://blog.betabong.com/benetton/</link>
		<pubDate>Thu, 14 Aug 2008 19:02:37 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?page_id=70</guid>
		<description></description>
		<content:encoded><![CDATA[<div>
<img title="Benetton for Razorfish" src="http://www.betabong.com/media/screens/benetton-1/crop4.jpg" alt="Screenshot" width="520" height="333" /></div>
<div>


 

<img title="Benetton for Razorfish" src="http://www.betabong.com/media/screens/benetton-2/crop4.jpg" alt="Screenshot" width="520" height="333" />
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>70</wp:post_id>
		<wp:post_date>2008-08-14 20:02:37</wp:post_date>
		<wp:post_date_gmt>2008-08-14 19:02:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>benetton</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>British Film Institute</title>
		<link>http://blog.betabong.com/british-film-institute/</link>
		<pubDate>Thu, 14 Aug 2008 19:05:17 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?page_id=72</guid>
		<description></description>
		<content:encoded><![CDATA[<img title="BFI" src="http://www.betabong.com/media/screens/bfi-1/crop4.jpg" alt="Screenshot" width="520" height="333" />

 
<img title="BFI" src="http://www.betabong.com/media/screens/bfi-2/crop4.jpg" alt="Screenshot" width="520" height="333" />]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>72</wp:post_id>
		<wp:post_date>2008-08-14 20:05:17</wp:post_date>
		<wp:post_date_gmt>2008-08-14 19:05:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>british-film-institute</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>BMW/Mini ICS/OCS</title>
		<link>http://blog.betabong.com/bmwmini-icsocs/</link>
		<pubDate>Thu, 14 Aug 2008 19:08:14 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?page_id=74</guid>
		<description></description>
		<content:encoded><![CDATA[<img title="BMWMini-Ics/Ocs" src="http://www.betabong.com/media/screens/bmwmini-icsocs-3/crop4.jpg" alt="Screenshot" width="520" height="333" />


<img title="BMWMini-Ics/Ocs" src="http://www.betabong.com/media/screens/bmwmini-icsocs-1/crop4.jpg" alt="Screenshot" width="520" height="333" />

 
<img title="BMWMini-Ics/Ocs" src="http://www.betabong.com/media/screens/bmwmini-icsocs-2/crop4.jpg" alt="Screenshot" width="520" height="333" />

 

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>74</wp:post_id>
		<wp:post_date>2008-08-14 20:08:14</wp:post_date>
		<wp:post_date_gmt>2008-08-14 19:08:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bmwmini-icsocs</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Multitouch Finger Fun</title>
		<link>http://blog.betabong.com/?p=93</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?p=93</guid>
		<description></description>
		<content:encoded><![CDATA[<object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="425" height="344" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="wmode" value="transparent" /><param name="src" value="http://www.youtube.com/v/9zGDNFpOMcA&amp;hl=en&amp;fs=0&amp;color1=0xeeeeee&amp;color2=0xeeeeee&amp;border=1" /><embed type="application/x-shockwave-flash" width="425" height="344" src="http://www.youtube.com/v/9zGDNFpOMcA&amp;hl=en&amp;fs=0&amp;color1=0xeeeeee&amp;color2=0xeeeeee&amp;border=1" wmode="transparent"></embed></object>

It's very cool and interesting to see that kind of things. Much progress has been made with this kind of multitouch interface, both from a technical and a user interface view. Things got much more responsive and start to make sense.. <strong>with that kind of data</strong> (especially data that's hard to manage with keyboard). So, in my opinion, it's a great replacement for most things that we do with the mouse... but hey, in a productive environement, we deal a lot with language input, don't we?

And while a virtual keyboard on an iPhone makes sense (switching languages, improving functionality via sw update, not taking any space where not much space is), i'm less than sure that this would work on a desktop device. Sure, writing on a keyboard is nothing easy to learn, but once you have it, you can write much faster than by hand, and everybody who has to write a lot knows about the importance of <strong>some good tactile feedback</strong>.

Anyway, I'm more than interested where this will lead to. I'm pretty sure we'll first see this kind of things in (productive) environments that have to deal with (3D) imagery (like in medicine). Hmm hmm.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>93</wp:post_id>
		<wp:post_date>2008-08-27 22:21:43</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="design-random"><![CDATA[Design]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Freitag rolling for 15 years</title>
		<link>http://blog.betabong.com/?p=103</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?p=103</guid>
		<description></description>
		<content:encoded><![CDATA[15 years ago Markus and Daniel Freitag created their first Freitag bag, made of used truck tarpaulins and some other recycled stuff. So today's the big party, and I'll be there of course. The party will be public starting from 11 pm, I sure will be in quite a good shape at that time ;-) Give me a hoorraaaa!!

<a href="http://blog.betabong.com/wp-content/uploads/2008/09/20080919-img_8799.jpg"></a><a href="http://blog.betabong.com/wp-content/uploads/2008/09/20080919-img_8798.jpg"><img class="alignnone size-medium wp-image-104" title="F15" src="http://blog.betabong.com/wp-content/uploads/2008/09/20080919-img_8798-300x300.jpg" alt="" width="180" height="180" /></a><a href="http://blog.betabong.com/wp-content/uploads/2008/09/20080919-img_8803.jpg"><img class="alignnone size-medium wp-image-106" title="20080919-img_8803" src="http://blog.betabong.com/wp-content/uploads/2008/09/20080919-img_8803-300x300.jpg" alt="" width="180" height="180" /></a><img class="size-medium wp-image-105 alignleft" title="F15-b" src="http://blog.betabong.com/wp-content/uploads/2008/09/20080919-img_8799-300x300.jpg" alt="" width="300" height="300" />]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>103</wp:post_id>
		<wp:post_date>2008-09-19 16:38:34</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="random"><![CDATA[Random]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>456456156</title>
		<link>http://blog.betabong.com/?p=126</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?p=126</guid>
		<description></description>
		<content:encoded><![CDATA[1561651]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>126</wp:post_id>
		<wp:post_date>2008-09-30 22:01:42</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Screen shot 2011-05-12 at Do. 12.5  18.39.08</title>
		<link>http://blog.betabong.com/?attachment_id=335</link>
		<pubDate>Thu, 12 May 2011 16:40:27 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/wp-content/uploads/2011/05/Screen-shot-2011-05-12-at-Do.-12.5-18.39.08.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>335</wp:post_id>
		<wp:post_date>2011-05-12 17:40:27</wp:post_date>
		<wp:post_date_gmt>2011-05-12 16:40:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screen-shot-2011-05-12-at-do-12-5-18-39-08</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.betabong.com/wp-content/uploads/2011/05/Screen-shot-2011-05-12-at-Do.-12.5-18.39.08.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/05/Screen-shot-2011-05-12-at-Do.-12.5-18.39.08.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"223";s:6:"height";s:3:"229";s:14:"hwstring_small";s:22:"height='96' width='93'";s:4:"file";s:55:"2011/05/Screen-shot-2011-05-12-at-Do.-12.5-18.39.08.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:55:"Screen-shot-2011-05-12-at-Do.-12.5-18.39.08-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Screen shot 2011-05-12 at Do. 12.5  18.39.39</title>
		<link>http://blog.betabong.com/?attachment_id=336</link>
		<pubDate>Thu, 12 May 2011 16:41:15 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/wp-content/uploads/2011/05/Screen-shot-2011-05-12-at-Do.-12.5-18.39.39.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>336</wp:post_id>
		<wp:post_date>2011-05-12 17:41:15</wp:post_date>
		<wp:post_date_gmt>2011-05-12 16:41:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screen-shot-2011-05-12-at-do-12-5-18-39-39</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.betabong.com/wp-content/uploads/2011/05/Screen-shot-2011-05-12-at-Do.-12.5-18.39.39.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/05/Screen-shot-2011-05-12-at-Do.-12.5-18.39.39.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"308";s:6:"height";s:3:"253";s:14:"hwstring_small";s:23:"height='96' width='116'";s:4:"file";s:55:"2011/05/Screen-shot-2011-05-12-at-Do.-12.5-18.39.39.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:55:"Screen-shot-2011-05-12-at-Do.-12.5-18.39.39-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:55:"Screen-shot-2011-05-12-at-Do.-12.5-18.39.39-300x246.png";s:5:"width";s:3:"300";s:6:"height";s:3:"246";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Screen shot 2011-05-12 at Do. 12.5  18.44.40</title>
		<link>http://blog.betabong.com/?attachment_id=337</link>
		<pubDate>Thu, 12 May 2011 16:45:19 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/wp-content/uploads/2011/05/Screen-shot-2011-05-12-at-Do.-12.5-18.44.40.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>337</wp:post_id>
		<wp:post_date>2011-05-12 17:45:19</wp:post_date>
		<wp:post_date_gmt>2011-05-12 16:45:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screen-shot-2011-05-12-at-do-12-5-18-44-40</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.betabong.com/wp-content/uploads/2011/05/Screen-shot-2011-05-12-at-Do.-12.5-18.44.40.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/05/Screen-shot-2011-05-12-at-Do.-12.5-18.44.40.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"269";s:6:"height";s:3:"472";s:14:"hwstring_small";s:22:"height='96' width='54'";s:4:"file";s:55:"2011/05/Screen-shot-2011-05-12-at-Do.-12.5-18.44.40.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:55:"Screen-shot-2011-05-12-at-Do.-12.5-18.44.40-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:55:"Screen-shot-2011-05-12-at-Do.-12.5-18.44.40-170x300.png";s:5:"width";s:3:"170";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>plus-small</title>
		<link>http://blog.betabong.com/?attachment_id=338</link>
		<pubDate>Thu, 12 May 2011 16:51:18 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/wp-content/uploads/2011/05/plus-small.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>338</wp:post_id>
		<wp:post_date>2011-05-12 17:51:18</wp:post_date>
		<wp:post_date_gmt>2011-05-12 16:51:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>plus-small</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.betabong.com/wp-content/uploads/2011/05/plus-small.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/05/plus-small.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";s:3:"128";s:6:"height";s:2:"32";s:14:"hwstring_small";s:23:"height='32' width='128'";s:4:"file";s:22:"2011/05/plus-small.png";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Screen shot 2011-05-12 at Do. 12.5  18.54.42</title>
		<link>http://blog.betabong.com/?attachment_id=339</link>
		<pubDate>Thu, 12 May 2011 16:56:00 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/wp-content/uploads/2011/05/Screen-shot-2011-05-12-at-Do.-12.5-18.54.42.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>339</wp:post_id>
		<wp:post_date>2011-05-12 17:56:00</wp:post_date>
		<wp:post_date_gmt>2011-05-12 16:56:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screen-shot-2011-05-12-at-do-12-5-18-54-42</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.betabong.com/wp-content/uploads/2011/05/Screen-shot-2011-05-12-at-Do.-12.5-18.54.42.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/05/Screen-shot-2011-05-12-at-Do.-12.5-18.54.42.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"650";s:6:"height";s:3:"252";s:14:"hwstring_small";s:23:"height='49' width='128'";s:4:"file";s:55:"2011/05/Screen-shot-2011-05-12-at-Do.-12.5-18.54.42.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:55:"Screen-shot-2011-05-12-at-Do.-12.5-18.54.42-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:55:"Screen-shot-2011-05-12-at-Do.-12.5-18.54.42-300x116.png";s:5:"width";s:3:"300";s:6:"height";s:3:"116";}s:5:"large";a:3:{s:4:"file";s:55:"Screen-shot-2011-05-12-at-Do.-12.5-18.54.42-520x201.png";s:5:"width";s:3:"520";s:6:"height";s:3:"201";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Using CSSEdit with LESS</title>
		<link>http://blog.betabong.com/?page_id=344</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/</guid>
		<description></description>
		<content:encoded><![CDATA[<img src="http://blog.betabong.com/wp-content/uploads/2011/05/cssedit-less.jpg" alt="" title="cssedit-less" width="512" height="512" class="aligncenter size-full wp-image-347" />

<a href="http://macrabbit.com/cssedit/">CSSEdit</a> is a great app I can't live (or at least work) without. I've recently discovered the <a href="http://lesscss.org/">LESS</a> language, which basically extends CSS with some very very useful functionality - mainly variables and something like functions (called mixins). (By the way, things Google is gonna support natively in their Chrome browser soon – using a slightly different syntax though. See <a href="http://goo.gl/gTWLt">here</a>)

Although CSSEdit hasn't been updated for much too long, it's IMHO still the best CSS editor out there (I've tried quite a few), and as much as I appreciate the bonus of LESS, I wouldn't wanna miss the comfort of CSSEdit.

My first approach to using LESS files with CSSEdit goes like this:

<pre lang="html"><link rel="stylesheet/less" href="css/styles.css">
<script src="js/dev/less.min.js"></script></pre>

styles.css is actually a LESS file and just named with the extension .css so CSSEdit will force an update of its Live Preview every time you modify it.

This works well with smaller html/css combos, but gets more difficult with every complexity level. Reason why is that the whole page will be refreshed with every change.

(I've tried to actually get around this by messing with the source less.js. Although I've nailed the refresh triggering down to the xhr.send() the actual reason stayed mysterious to my brain cells. May be if I'd knew the exact mechanism of how the CSSEdit Live Preview update works... but then, just read on:) 

<strong>There is though a fantastic solution.</strong> One that's also of big help if you work with other editors by the way. LESS has a very nice watch option. Whenever a linked LESS file gets updated, the resulting CSS will be generated and replaced. The great thing if you work with CSSEdit is that you won't have to save your file to see any changes. From a CSS designer (or developer) point of view the outcome is a near-instant live preview. (LESS actually checks for changes in a Timer interval of 1000ms).

That's how this looks in code:

<pre lang="html"><link rel="stylesheet/less" href="css/styles.less">
<script src="js/dev/less.min.js"></script>
<script>less.watch();</script></pre>

If you like to sometimes see a live preview and sometimes just css the hell out of you without any disturbances until the next save, you can also use the glorious Hash Override: just leave away the "less.watch()" part in your script and open your html in the live preview with an additional "#!watch" hash. Something like this:

<img src="http://blog.betabong.com/wp-content/uploads/2011/05/Screen-shot-2011-05-15-at-15.29.33.png" alt="" title="Screen shot 2011-05-15 at 15.29.33" width="330" height="26" class="aligncenter size-full wp-image-345" />

Wow, this will easen my life (ehm.. work) so much! Seriously, I really started to hate those page reloads.

Oh, and by the way, just in case I haven't noted so far: I'd really love to see a CSSEdit update anytime soon. I'm so much willing to drink my self made <a href="http://www.kochbuchfotos.de/14/espresso">Espresso</a> for that. ;-) In case the <a href="http://macrabbit.com/">Rabbit</a> listens.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>344</wp:post_id>
		<wp:post_date>2011-05-15 14:52:12</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Screen shot 2011-05-15 at 15.29.33</title>
		<link>http://blog.betabong.com/?attachment_id=345</link>
		<pubDate>Sun, 15 May 2011 13:30:03 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/wp-content/uploads/2011/05/Screen-shot-2011-05-15-at-15.29.33.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>345</wp:post_id>
		<wp:post_date>2011-05-15 14:30:03</wp:post_date>
		<wp:post_date_gmt>2011-05-15 13:30:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screen-shot-2011-05-15-at-15-29-33</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>344</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.betabong.com/wp-content/uploads/2011/05/Screen-shot-2011-05-15-at-15.29.33.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/05/Screen-shot-2011-05-15-at-15.29.33.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"330";s:6:"height";s:2:"26";s:14:"hwstring_small";s:23:"height='10' width='128'";s:4:"file";s:46:"2011/05/Screen-shot-2011-05-15-at-15.29.33.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:45:"Screen-shot-2011-05-15-at-15.29.33-150x26.png";s:5:"width";s:3:"150";s:6:"height";s:2:"26";}s:6:"medium";a:3:{s:4:"file";s:45:"Screen-shot-2011-05-15-at-15.29.33-300x23.png";s:5:"width";s:3:"300";s:6:"height";s:2:"23";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>cssedit-less</title>
		<link>http://blog.betabong.com/?attachment_id=347</link>
		<pubDate>Sun, 15 May 2011 13:50:24 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/wp-content/uploads/2011/05/cssedit-less.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>347</wp:post_id>
		<wp:post_date>2011-05-15 14:50:24</wp:post_date>
		<wp:post_date_gmt>2011-05-15 13:50:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cssedit-less</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>344</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://blog.betabong.com/wp-content/uploads/2011/05/cssedit-less.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/05/cssedit-less.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"512";s:6:"height";s:3:"512";s:14:"hwstring_small";s:22:"height='96' width='96'";s:4:"file";s:24:"2011/05/cssedit-less.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"cssedit-less-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:24:"cssedit-less-300x300.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Betaruss</title>
		<link>http://blog.betabong.com/2008/07/16/betaruss/</link>
		<pubDate>Wed, 16 Jul 2008 10:45:34 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?p=19</guid>
		<description></description>
		<content:encoded><![CDATA[<div style="font-size:30px; line-height: 40px;">севэрин кляус
бетабонг кляус креацыён</div>
Yeah, i'm learning the cyrillic alphabet!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>19</wp:post_id>
		<wp:post_date>2008-07-16 11:45:34</wp:post_date>
		<wp:post_date_gmt>2008-07-16 10:45:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>betaruss</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="cyrillic"><![CDATA[cyrillic]]></category>
		<category domain="category" nicename="random"><![CDATA[Random]]></category>
		<category domain="post_tag" nicename="russian"><![CDATA[russian]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[%d0%b1%d0%b5%d1%82%d0%b0%d0%b1%d0%be%d0%bd%d0%b3]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>RA D IOHEA_D HO_US E OF/ CARD_S</title>
		<link>http://blog.betabong.com/2008/07/17/ra-d-iohea_d-ho_us-e-of-card_s/</link>
		<pubDate>Thu, 17 Jul 2008 12:48:47 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?p=25</guid>
		<description></description>
		<content:encoded><![CDATA[It doesn't happen that often that I see stuff that amazes me from a professional and private perspective in so many ways. Well, it happened today when I saw:

<object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="520" height="400" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="src" value="http://www.youtube.com/v/8nTFjVm9sTQ&amp;hl=en&amp;fs=0&amp;color1=0xeeeeee&amp;color2=0xeeeeee&amp;ap=%2526fmt%3D18" /><embed type="application/x-shockwave-flash" width="520" height="400" src="http://www.youtube.com/v/8nTFjVm9sTQ&amp;hl=en&amp;fs=0&amp;color1=0xeeeeee&amp;color2=0xeeeeee&amp;ap=%2526fmt%3D18"></embed></object>

<a title="Radiohead Interactive 3D Viewer" href="http://code.google.com/creative/radiohead/viewer.html">http://code.google.com/creative/radiohead/viewer.html</a> (Flash)

<a title="The starting page" href="http://code.google.com/creative/radiohead/">http://code.google.com/creative/radiohead/</a> (see video in better quality, making of and more...)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>25</wp:post_id>
		<wp:post_date>2008-07-17 13:48:47</wp:post_date>
		<wp:post_date_gmt>2008-07-17 12:48:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ra-d-iohea_d-ho_us-e-of-card_s</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="3d"><![CDATA[3d]]></category>
		<category domain="post_tag" nicename="flash"><![CDATA[flash]]></category>
		<category domain="category" nicename="tech"><![CDATA[Frontend]]></category>
		<category domain="category" nicename="music"><![CDATA[Music]]></category>
		<category domain="post_tag" nicename="music"><![CDATA[Music]]></category>
		<category domain="post_tag" nicename="radiohead"><![CDATA[radiohead]]></category>
		<category domain="category" nicename="random"><![CDATA[Random]]></category>
		<category domain="post_tag" nicename="video"><![CDATA[video]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Garbage Collector and Dictionary</title>
		<link>http://blog.betabong.com/2008/07/18/garbage-collector-and-dictionary/</link>
		<pubDate>Thu, 17 Jul 2008 23:59:11 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?p=27</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://dispatchevent.org/mims/creating-weak-references-in-as3/">Weak references</a> are cool. No. they are substantial. I don't know how we lived without them before. Anyway, they made our (we = flash developers) life better. I use them very often, when adding event listeners or caching with dictionaries (and I'm sure I'd use them even more often if there was any more possibilty provided).

Still you can struggle over unexpected behaviour.<!--more--> First of all there is no guarantee that objects are <a href="http://www.adobe.com/devnet/flashplayer/articles/garbage_collection.html">garbaged</a> (well it's probably not a memory thing.. more about unreferencing, what the heck do I know?!) as soon as there aren't any references left. But, in my experience, weak references work quite good.. I didn't have to worry about them living for some more seconds or so. But. But! They'll live on at least until next rendering step, meaning until actionscript execution is done.

I struggled over this with a validation manager, that keeps tracks of unvalidated objects in a weak dictionary. So when object unvalidates, it tells so to the validator who will validate before rendering update. Now let's assume the object shall be destroyed in the mean time – it will unlisten to dispatchers, it will unlink sprites and so on.. but may be it's already registered in the validator. So it'll stay alive to fullfill next validation processing. (Which led into uncaught errors due to null references in the destroyed object in my example.)

I could of course unregister at the validator at destroy. But.. hmm.. I want my engine to be as fast and robust as possible and unregistering can be difficult and time consuming (especially when 1000 objects will be destroyed). So what I've done is, I set a flag 'destroyed' when destruction is complete, and on each validation I'll check for that flag:

<pre lang="actionscript">public function validateDisplay() : void {
  if ( _render_dirty && !destroyed ) {
    render();
  }
}</pre>

Checking against a boolean flag is fast as hell, so that's cool. And also, it won't happen often (it was really a rare exceptional case actually). So besides weak references in AS3 we still have to be careful as hell about memory leaks. By the way, the profiler in Flex Pro is just fucking great :-)

On a side note: Any one any info on MethodClosure objects lying around in memory?? I know what they are used for, but it seems they live and live and live....]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>27</wp:post_id>
		<wp:post_date>2008-07-18 00:59:11</wp:post_date>
		<wp:post_date_gmt>2008-07-17 23:59:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>garbage-collector-and-dictionary</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="actionscript"><![CDATA[Actionscript]]></category>
		<category domain="post_tag" nicename="actionscript"><![CDATA[Actionscript]]></category>
		<category domain="post_tag" nicename="flash"><![CDATA[flash]]></category>
		<category domain="category" nicename="random"><![CDATA[Random]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>WPtouch and WPhone</title>
		<link>http://blog.betabong.com/2008/07/18/wptouch-and-wphone/</link>
		<pubDate>Fri, 18 Jul 2008 00:52:54 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?p=31</guid>
		<description></description>
		<content:encoded><![CDATA[<img alt="" src="http://www.jacopolupi.com/blog/wp-content/wptouch-10.jpg" title="WPtouch" class="alignright" width="244" height="424" style="border:none; float:left;" />A must have for any iPhone sensitive wordpress blog owner: <a href="http://wordpress.org/extend/plugins/wphone/installation/">WPhone</a> and <a href="http://www.bravenewcode.com/wptouch/">WPtouch</a>

Especially WPhone is cool IMHO. WPtouch is cool too, but I think the iPhone renders most web pages pretty pretty anyway, and also.. it seems a bit slow too me. Still: very cool!

(see: it's not a freakin' beta! ha! watch my claim!)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>31</wp:post_id>
		<wp:post_date>2008-07-18 01:52:54</wp:post_date>
		<wp:post_date_gmt>2008-07-18 00:52:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>wptouch-and-wphone</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="iphone"><![CDATA[iPhone]]></category>
		<category domain="category" nicename="random"><![CDATA[Random]]></category>
		<category domain="post_tag" nicename="wordpress"><![CDATA[Wordpress]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>links for 2008-07-18</title>
		<link>http://blog.betabong.com/2008/07/18/links-for-2008-07-18/</link>
		<pubDate>Fri, 18 Jul 2008 01:33:00 +0000</pubDate>
		<dc:creator><![CDATA[delicious]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/2008/07/18/links-for-2008-07-18/</guid>
		<description></description>
		<content:encoded><![CDATA[<ul class="delicious">
	<li>
		<div class="delicious-link"><a href="http://www.thedieline.com/blog/">TheDieline.com: The Leading Package Design Blog</a></div>
		<div class="delicious-extended">While I've never done packaging design (well.. a little condom package once, not really worth to mentioun), it fascinates me. Same for industrial design.. Anyway, this blog is nice.</div>
		<div class="delicious-tags">(tags: <a href="http://del.icio.us/sok/design">design</a> <a href="http://del.icio.us/sok/packaging">packaging</a>)</div>
	</li>
	<li>
		<div class="delicious-link"><a href="http://www.entropy.ch/home/">Marc Liyanage - Entropy</a></div>
		<div class="delicious-extended">Fortuanate boy I am, I know Marc personally. He's got a huge collection of information and self-written software on his website – a smart and even more likable fellow.</div>
		<div class="delicious-tags">(tags: <a href="http://del.icio.us/sok/osx">osx</a> <a href="http://del.icio.us/sok/mac">mac</a> <a href="http://del.icio.us/sok/php">php</a> <a href="http://del.icio.us/sok/software">software</a> <a href="http://del.icio.us/sok/code">code</a> <a href="http://del.icio.us/sok/apple">apple</a>)</div>
	</li>
	<li>
		<div class="delicious-link"><a href="http://blog.betabong.com/">Betabong Blog</a></div>
		<div class="delicious-extended">My own blog. Time to go public (well.. to go search engines, I don't think anyone else reads my delicious links ;)</div>
		<div class="delicious-tags">(tags: <a href="http://del.icio.us/sok/flash">flash</a> <a href="http://del.icio.us/sok/betabong">betabong</a> <a href="http://del.icio.us/sok/severin">severin</a> <a href="http://del.icio.us/sok/klaus">klaus</a> <a href="http://del.icio.us/sok/flex">flex</a> <a href="http://del.icio.us/sok/php">php</a> <a href="http://del.icio.us/sok/design">design</a> <a href="http://del.icio.us/sok/actionscript">actionscript</a>)</div>
	</li>
</ul>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>34</wp:post_id>
		<wp:post_date>2008-07-18 02:33:00</wp:post_date>
		<wp:post_date_gmt>2008-07-18 01:33:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>links-for-2008-07-18</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename=""><![CDATA[]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Photoshop CS3 for iPhone</title>
		<link>http://blog.betabong.com/2008/07/18/photoshop-cs3-for-iphone/</link>
		<pubDate>Fri, 18 Jul 2008 14:27:23 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?p=35</guid>
		<description></description>
		<content:encoded><![CDATA[I *have* to update to 2.0 so I can install this from the App Store!

<object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="520" height="400" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="wmode" value="transparent" /><param name="src" value="http://www.youtube.com/v/eXpbGaIkPlw&amp;hl=en&amp;fs=0&amp;color1=0xeeeeee&amp;color2=0xeeeeee&amp;ap=%2526fmt%3D18" /><embed type="application/x-shockwave-flash" width="520" height="400" src="http://www.youtube.com/v/eXpbGaIkPlw&amp;hl=en&amp;fs=0&amp;color1=0xeeeeee&amp;color2=0xeeeeee&amp;ap=%2526fmt%3D18" wmode="transparent"></embed></object>

Love you too :-)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>35</wp:post_id>
		<wp:post_date>2008-07-18 15:27:23</wp:post_date>
		<wp:post_date_gmt>2008-07-18 14:27:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>photoshop-cs3-for-iphone</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="iphone"><![CDATA[iPhone]]></category>
		<category domain="category" nicename="random"><![CDATA[Random]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Nested inner functions can be evil</title>
		<link>http://blog.betabong.com/2008/07/21/nested-inner-functions-can-be-evil/</link>
		<pubDate>Mon, 21 Jul 2008 07:53:29 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?p=39</guid>
		<description></description>
		<content:encoded><![CDATA[Sometimes it would be quite comfortable (from a programmer's perspective) to use nested inner functions. But they are a potential source for nasty problems. Let's take the following simple scenario:<!--more-->

<pre lang="mxml"><?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" creationComplete="create()" click="destroy()">
	<mx:Script>
		<![CDATA[
			private var dispatcher : Sprite;
			
			private function create() : void {
				dispatcher = new Sprite();
				// listen to inner function
				dispatcher.addEventListener( Event.ENTER_FRAME , function( e : Event ) : void { trace( e.type ); } );
			}
			
			private function destroy() : void {
				// this should free created dispatcher from memory
				dispatcher = null;
				// what we would need is:
				// dispatcher.destroy() or dispatcher.removeEventListener( Event.ENTER_FRAME )
				// or dispatcher.removeAllEventListeners()
			}
		]]]]><![CDATA[>
	</mx:Script>
</mx:Application></pre>

The dispatcher will just live on. The mean thing is that in method «destroy» we don't even have a chance to get rid of the sprite anymore – it just lives on and on (and dispatches its event every time it enters a frame to the listener function.) So 3 objects will just not be freed in memory because of our inner function listener: 1. the dispatcher object, 2. the listener function (the inner function) and 3. the creating object, because the listener function (or its method closure) is bound to the creating method create() scope.

We also can't use the addEventListener's flag to use weak references, because the listener method wouldn't have any other references and would «dye» instantely. So what you should do right now is something like that:

<pre lang="mxml"><?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" creationComplete="create()" click="destroy()">
	<mx:Script>
		<![CDATA[
			private var dispatcher : Sprite;
			
			private function create() : void {
				dispatcher = new Sprite();
				dispatcher.addEventListener( Event.ENTER_FRAME , handler );
			}
			
			private function destroy() : void {
				dispatcher.removeEventListener( Event.ENTER_FRAME , handler );
				dispatcher = null;
			}
			
			private function handler( event : Event ) : void {
				trace( e.type );
			}
		]]]]><![CDATA[>
	</mx:Script>
</mx:Application></pre>

That's clean code. Good bye dispatcher, good bye sprite! But sometimes it can be quite difficult to maintain this. I personally would wish that actionscript objects, especially the EventDispatcher class, would provide a destroy() method. Calling it gets rid of all event listeners and also would unlisten to everything it has listened to. And for DisplayObjects it would also perform other operations like removing itself from its parent and destroying all children.

I'd also like to see the following method like this in EventDispatcher:

<pre lang="actionscript">EventDispatcher.removeListener( type : String = null , listener : Function = null , useCapture : Boolean = false );

// so this would remove all listeners
EventDispatcher.removeListener();

// and this all listeners to enter frame
EventDispatcher.removeListener( Event.ENTER_FRAME );</pre>

I get around many issues by implementing something like a IEventListener interface:

<pre lang="actionscript">
interface IEventListener {
function listenTo( dispatcher : IEventDispatcher , type : String , listener : Function , useCapture : Boolean = false ) : void;
functon unlistenTo( dispatcher : IEventDispatcher , type : String , listener : Function , useCapture : Boolean = false ) : void;
function destroy() : void; // will remove myself as event listener from all registered dispatchers
}</pre>

Way to go :-)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>39</wp:post_id>
		<wp:post_date>2008-07-21 08:53:29</wp:post_date>
		<wp:post_date_gmt>2008-07-21 07:53:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>nested-inner-functions-can-be-evil</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="actionscript"><![CDATA[Actionscript]]></category>
		<category domain="post_tag" nicename="actionscript"><![CDATA[Actionscript]]></category>
		<category domain="post_tag" nicename="eventdispatcher"><![CDATA[EventDispatcher]]></category>
		<category domain="category" nicename="flex"><![CDATA[Flex]]></category>
		<category domain="category" nicename="tech"><![CDATA[Frontend]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>7</wp:comment_id>
			<wp:comment_author><![CDATA[Jeff]]></wp:comment_author>
			<wp:comment_author_email>jeff@scarycoder.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>76.121.82.45</wp:comment_author_IP>
			<wp:comment_date>2008-10-07 05:03:55</wp:comment_date>
			<wp:comment_date_gmt>2008-10-07 04:03:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good post with good coding advice for the topic.  Thank you.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
				<title>Design is ...</title>
		<link>http://blog.betabong.com/2008/07/23/design-is/</link>
		<pubDate>Wed, 23 Jul 2008 12:12:50 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?p=47</guid>
		<description></description>
		<content:encoded><![CDATA[<h4>«Design is not just what it looks like and feels like. Design is how it works.»</h4>
A quotation I really like because it's to the point of how I think about and how I try to do my work. And... who said it? <!--more-->Yes, God almighty, Mr. Steve Jobs, 2003.

I've also found some others I like:

 
<h4>«The ability to simplify means to eliminate the unnecessary so that the necessary may speak.»</h4>
<a href="http://www.hanshofmann.org/">Hans Hofmann</a>

 
<h4>«The greatest challenge to any thinker is stating the problem in a way that will allow a solution.»</h4>
<a href="http://www.writersmugs.com/quote/Bertrand_Russell/26.html">Bertrand Russell</a>

 
<h4>«A picture is worth a thousand words. An interface is worth a thousand pictures.»</h4>
<a href="http://www.cs.umd.edu/~ben/">Ben Shneiderman, 2003</a>

 
<h4>«I’ve been amazed at how often those outside the discipline of design assume that what designers do is decoration. Good design is problem solving.»</h4>
<a href="http://www.veen.com/artsci/">Jeffery Veen, 2000</a>

 
<h4>«Making the simple complicated is commonplace; making the complicated simple, awesomely simple, that's creativity.»</h4>
<a href="http://www.mingusmingusmingus.com/bio/mingusbio.html">Charles Mingus</a>

 
<h4>«Form follows function-that has been misunderstood. Form and function should be one, joined in a spiritual union.»</h4>
<a href="http://www.sitepoint.com/article/369">Frank Lloyd Wright</a>

 
<h4>«The details are not the details. They make the design.»</h4>
<a href="http://www.eamesoffice.com/">Charles Eames</a>

 

The following one is a good one for many of my customers ;-)

 
<h4>«A designer knows he has achieved perfection not when there is nothing left to add, but when there is nothing left to take away.»</h4>
<a href="http://www.lukew.com/ff/entry.asp?274">Antoine De Saint-Exupery</a>

 

And another one from the almighty – I may not agree 100%, but it's certainly a funny one:

 
<h4>«It's really hard to design products by focus groups. A lot of times, people don't know what they want until you show it to them.»</h4>
<a href="http://www.wired.com/news/culture/mac/0,70512-0.html">Steve Jobs, 1998</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>47</wp:post_id>
		<wp:post_date>2008-07-23 13:12:50</wp:post_date>
		<wp:post_date_gmt>2008-07-23 12:12:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>design-is</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="apple"><![CDATA[apple]]></category>
		<category domain="post_tag" nicename="design"><![CDATA[design]]></category>
		<category domain="post_tag" nicename="quote"><![CDATA[quote]]></category>
		<category domain="category" nicename="random"><![CDATA[Random]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>SVN Hook – auto-upload to FTP</title>
		<link>http://blog.betabong.com/2008/08/14/svn-hook-%e2%80%93-auto-upload-to-ftp/</link>
		<pubDate>Thu, 14 Aug 2008 08:52:39 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?p=51</guid>
		<description></description>
		<content:encoded><![CDATA[SVN is definitely cool. So I use it for quite all of my projects. Being able to jump back, having a versioned backup, share-coding with others – awesome.

But most of my projects are to run on some kind of webserver. Usually I use my local webserver to test, so I can symlink directly into the projects (and then upload to productive manually). That's okay for me. But for a recent project I have to test on some remote ftp. So shall I each time commit/update then upload to FTP? And all other team members too? Come on, we are humans, that is stupid repetitive computer work!

So I discovered SVN hooks. These are kind of scripts that can be called each time a SVN repository is changed. Find the directory in path/to/repos/hooks. I found this for my FTP hook: <a href="http://svn2web.svn.sourceforge.net/viewvc/svn2web/trunk/">svn2web</a> – it'll give you all you need to setup the hook. The real cool thing is that you can define the ftp/sftp-behaviour in SVN properties:
<pre>svn propset svn2web "sftp:username:password@machine:/path" .</pre>
My pre-commit hook looks like this:
<pre>#!/bin/bash
export PATH=/usr/local/bin:/usr/bin:/bin
svn2web $1 $2 &gt;&gt; /tmp/svn2web.log || exit 1
exit 0</pre>
Be aware of two things:
<ol>
	<li>Install svn2web commands in /usr/local/bin – now you have to export the path variables in the hook script, because it will be called without any path variables (for security reasons)</li>
	<li>If the ftp upload fails for whatever reason, the commmit will fail too. That's what we want, usually, because otherwise we wouldn't get any feedback on comitting. If you don't want, just setup the hook as post-commit.</li>
</ol>
For some reasons my ftp-upload hook wouldn't work on this stupid test server. I spent quite some time figuring out why and what. It seemed that whenever ftp tried to PUT, the ftp server tried to change to some extended passive mode and would hang there. I found out that when calling the command
<pre>epsv</pre>
before ftp operations, this wouldn't happen. So, cool :-)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>51</wp:post_id>
		<wp:post_date>2008-08-14 09:52:39</wp:post_date>
		<wp:post_date_gmt>2008-08-14 08:52:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>svn-hook-%e2%80%93-auto-upload-to-ftp</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[Frontend]]></category>
		<category domain="post_tag" nicename="svn"><![CDATA[svn]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>4</wp:comment_id>
			<wp:comment_author><![CDATA[dharma]]></wp:comment_author>
			<wp:comment_author_email>dharmastyle@yahoo.it</wp:comment_author_email>
			<wp:comment_author_url>http://dharmaferrari.com</wp:comment_author_url>
			<wp:comment_author_IP>82.63.185.40</wp:comment_author_IP>
			<wp:comment_date>2008-09-20 14:40:53</wp:comment_date>
			<wp:comment_date_gmt>2008-09-20 13:40:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Man, thanks for the time u invested finding this super-useful solution.. 
Bye!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>14</wp:comment_id>
			<wp:comment_author><![CDATA[manolo]]></wp:comment_author>
			<wp:comment_author_email>arnoldroa@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.arnoldroa.com</wp:comment_author_url>
			<wp:comment_author_IP>190.84.103.149</wp:comment_author_IP>
			<wp:comment_date>2008-12-17 00:48:29</wp:comment_date>
			<wp:comment_date_gmt>2008-12-16 23:48:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[i really dont get how to isntall svn2web, i should copy it to /bin ??]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>15</wp:comment_id>
			<wp:comment_author><![CDATA[Tobz]]></wp:comment_author>
			<wp:comment_author_email>tobz.nz@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.98.141.222</wp:comment_author_IP>
			<wp:comment_date>2009-01-08 04:56:00</wp:comment_date>
			<wp:comment_date_gmt>2009-01-08 03:56:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi, how hard is it to change this for a windows server(visualSVN)?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>25</wp:comment_id>
			<wp:comment_author><![CDATA[Programmatore PHP]]></wp:comment_author>
			<wp:comment_author_email>php_staff@yahoo.it</wp:comment_author_email>
			<wp:comment_author_url>http://www.programmatorephp.it</wp:comment_author_url>
			<wp:comment_author_IP>151.20.140.244</wp:comment_author_IP>
			<wp:comment_date>2009-03-13 01:10:00</wp:comment_date>
			<wp:comment_date_gmt>2009-03-13 00:10:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Wow, that's great! Thank you.
I look for this feature for a lot of time, I will try it as soon as possible.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>47</wp:comment_id>
			<wp:comment_author><![CDATA[Joe]]></wp:comment_author>
			<wp:comment_author_email>jmallory@triplestrength.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>70.89.205.22</wp:comment_author_IP>
			<wp:comment_date>2009-06-02 23:02:30</wp:comment_date>
			<wp:comment_date_gmt>2009-06-02 22:02:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Can you provide screenshots of this process? I am not really following it and really need the help?

Thanks!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>129</wp:comment_id>
			<wp:comment_author><![CDATA[svnlabs]]></wp:comment_author>
			<wp:comment_author_email>svnlabs@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://blog.svnlabs.com/</wp:comment_author_url>
			<wp:comment_author_IP>117.197.5.104</wp:comment_author_IP>
			<wp:comment_date>2010-08-06 16:18:31</wp:comment_date>
			<wp:comment_date_gmt>2010-08-06 15:18:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Amazing!!
Really very helpful..

Thanks]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>207</wp:comment_id>
			<wp:comment_author><![CDATA[Sanwali]]></wp:comment_author>
			<wp:comment_author_email>sanwalis22@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>117.203.240.208</wp:comment_author_IP>
			<wp:comment_date>2011-01-27 21:10:05</wp:comment_date>
			<wp:comment_date_gmt>2011-01-27 20:10:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Can i use the above hook for tortoisehg of mercurial? Cant seem to find one on google :(

Any help will be highly appreciated]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
				<title>Flash Player 10 – I love speed</title>
		<link>http://blog.betabong.com/2008/08/22/flash-player-10-i-love-speed/</link>
		<pubDate>Fri, 22 Aug 2008 08:30:03 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?p=77</guid>
		<description></description>
		<content:encoded><![CDATA[<img class="alignleft size-full wp-image-84" title="astro" src="http://blog.betabong.com/wp-content/uploads/2008/08/astro.jpg" alt="" width="150" height="164" style="margin-right:20px; margin-bottom:20px; float:left;"/>So Flash Player 10 is on its way. Soon, very soon, we'll be able to enjoy 3D effects on every other website, youhaa. While some are eagerly waiting for this or the enhanced drawing API, I'm very much looking forward to the speed enhancements.

Visual Speed

While Flash Player 9 or more precisely the underlying actionscript 3 interpreter have lead to great speed enhancements on the logic side (meaning much faster data manipulation), it's still rather slow when it comes to rendering. In a project I'm currently working on there's quite some stuff going on here, but when I check speed performance with the Flex Profiler, most time is spent for rendering. Significant time. And it's not some freaky Papervision 3D stuff ;)

So with Flash Player 10 this will be better. Adobe finally improves rendering speed, and the good thing is that every exisiting project (at least &gt;= f9, all?) will profit without republishing. I had done some little tests with a beta, and though I don't remember the results, they looked quite promising (even on a Mac). I'm not sure though when they're gonna use the graphic card to speed up – I don't think it made use of that in my tests. Most people mention the hardware acceleration (some rendering tasks can be offloaded to your graphics card), but in my understanding the overhauled the entire rendering system, so everything and everyone should profit.

Vectors

Vectors are simply typed Arrays. A limited array. Ha! why would we want that?! For two reasons:
<ul>
	<li>Developers have more feedback while coding: the IDE will be able to tell you when you put some wrong stuff in an array – as for now you could mix whatever data in an array, the compiler wouldn't complain. But above all, the IDE will be able to provide you help while typing: no more casting all the time to get to the methods of an array item!</li>
	<li>Speed. A typed array can be much faster. And it will be.</li>
</ul>
It looks like this:
<pre lang="actionscript">var vector:Vector.&lt;int&gt; = new Vector.&lt;int&gt;();</pre>
I'm not too much a fan of the definition syntax – something like this would look better, I think:
<pre lang="actionscript">var vector:Vector::int = new Vector::int();
// or
var vector:int[] = new int[]();</pre>
But I haven't thought of it much. Adobe certainly thought about it. Or some ECMA comittee. (Copy-pasting in Wordpress HTML mode also won't work anymore.. pfff) Also I personally would have preferred not to have another class for that (just enhance the good old Array), but there are reasons for that too (backward compatibility, I guess, I can sing a song about that too). So anyway, I'm eagerly looking forward to use that stuff. I just love speed.

More infos here: <a title="Permanent Link to Using Vectors in ActionScript 3 and Flash Player 10" rel="bookmark" href="http://www.mikechambers.com/blog/2008/08/19/using-vectors-in-actionscript-3-and-flash-player-10/">Using Vectors in ActionScript 3 and Flash Player 10</a>

Update: Ok, I can't make to appear the new Vector syntax in Wordpress. Now I like the syntax even less ;-)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>77</wp:post_id>
		<wp:post_date>2008-08-22 09:30:03</wp:post_date>
		<wp:post_date_gmt>2008-08-22 08:30:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>flash-player-10-i-love-speed</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="actionscript"><![CDATA[Actionscript]]></category>
		<category domain="post_tag" nicename="actionscript"><![CDATA[Actionscript]]></category>
		<category domain="category" nicename="tech"><![CDATA[Frontend]]></category>
		<category domain="post_tag" nicename="speed"><![CDATA[speed]]></category>
		<category domain="post_tag" nicename="vector"><![CDATA[vector]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[flash-player-10-%e2%80%93-i-love-speed]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>iPhone OS 2.0 - great new feature</title>
		<link>http://blog.betabong.com/2008/08/25/iphone-os-20-great-new-feature/</link>
		<pubDate>Mon, 25 Aug 2008 20:16:39 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?p=89</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://blog.betabong.com/wp-content/uploads/2008/08/ipod-doubleclick.jpg"><img class="alignleft size-full wp-image-90" style="margin-right: 20px; margin-bottom: 20px; float: left;" title="ipod-doubleclick" src="http://blog.betabong.com/wp-content/uploads/2008/08/ipod-doubleclick.jpg" alt="" width="200" height="186" /></a>Today I stumbled across a cool feature in the new iPhone software. What makes it even cooler is the fact that I invented it myself – God aka Mr. Jobs has just listened!

So what's the deal? When you press the headset button twice while listening to music, it will skip to the next song. That's it. Isn't that just awesome?! I think so :-)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>89</wp:post_id>
		<wp:post_date>2008-08-25 21:16:39</wp:post_date>
		<wp:post_date_gmt>2008-08-25 20:16:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>iphone-os-20-great-new-feature</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="random"><![CDATA[Random]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Multitouch Finger Fun</title>
		<link>http://blog.betabong.com/2008/08/27/multitouch-progress/</link>
		<pubDate>Wed, 27 Aug 2008 21:22:48 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?p=94</guid>
		<description></description>
		<content:encoded><![CDATA[<object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="520" height="400" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="wmode" value="transparent" /><param name="src" value="http://www.youtube.com/v/9zGDNFpOMcA&amp;hl=en&amp;fs=0&amp;color1=0xeeeeee&amp;color2=0xeeeeee&amp;ap=%2526fmt%3D18" /><embed type="application/x-shockwave-flash" width="520" height="400" src="http://www.youtube.com/v/9zGDNFpOMcA&amp;hl=en&amp;fs=0&amp;color1=0xeeeeee&amp;color2=0xeeeeee&amp;ap=%2526fmt%3D18" wmode="transparent"></embed></object>

It's very cool and interesting to see that kind of things. Much progress has been made with this kind of multitouch interface, both from a technical and a user interface view. Things got much more responsive and start to make sense.. <strong>with that kind of data</strong> (especially data that's hard to manage with keyboard). So, in my opinion, it's a great replacement for most things that we do with the mouse... but hey, in a productive environement, we deal a lot with language input, don't we?

And while a virtual keyboard on an iPhone makes sense (switching languages, improving functionality via sw update, not taking any space where not much space is), i'm less than sure that this would work on a desktop device. Sure, writing on a keyboard is nothing easy to learn, but once you have it, you can write much faster than by hand, and everybody who has to write a lot knows about the importance of <strong>some good tactile feedback</strong>.

Anyway, I'm more than interested where this will lead to. I'm pretty sure we'll first see this kind of things in (productive) environments that have to deal with (3D) imagery (like in medicine). Hmm hmm.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>94</wp:post_id>
		<wp:post_date>2008-08-27 22:22:48</wp:post_date>
		<wp:post_date_gmt>2008-08-27 21:22:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>multitouch-progress</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="3d"><![CDATA[3d]]></category>
		<category domain="category" nicename="design-random"><![CDATA[Design]]></category>
		<category domain="post_tag" nicename="gui"><![CDATA[gui]]></category>
		<category domain="post_tag" nicename="interface"><![CDATA[interface]]></category>
		<category domain="post_tag" nicename="multitouch"><![CDATA[multitouch]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Sheeps</title>
		<link>http://blog.betabong.com/2008/08/28/sheeps/</link>
		<pubDate>Wed, 27 Aug 2008 23:35:19 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?p=97</guid>
		<description></description>
		<content:encoded><![CDATA[We had a nice little advertising campaign not long ago in Switzerland. Today I stumbled across this website and.. is this bloody ad so much stamped into my head that I can't look at sheeps anymore without thinking of it, or do those sheeps have some intruded similarity? See for yourself:

 
<div><img style="-webkit-user-select: none;" src="file:///Users/sev/Downloads/sheeps.jpg" alt="" /><a href="http://blog.betabong.com/wp-content/uploads/2008/08/sheeps.jpg"></a><a href="http://blog.betabong.com/wp-content/uploads/2008/08/sheeps1.jpg"><img class="alignnone size-medium wp-image-99" title="sheeps1" src="http://blog.betabong.com/wp-content/uploads/2008/08/sheeps1-300x151.jpg" alt="" width="300" height="151" /></a></div>
<div></div>
<div><a href="http://www.colorspretty.com/fluff/home/">http://www.colorspretty.com/fluff/home/</a></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>97</wp:post_id>
		<wp:post_date>2008-08-28 00:35:19</wp:post_date>
		<wp:post_date_gmt>2008-08-27 23:35:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sheeps</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="advertising"><![CDATA[advertising]]></category>
		<category domain="category" nicename="design-random"><![CDATA[Design]]></category>
		<category domain="post_tag" nicename="svp"><![CDATA[svp]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Simplicity follows Performance – parsing Strings in Actionscript 3</title>
		<link>http://blog.betabong.com/2008/09/01/speed-parsing-string-in-as3/</link>
		<pubDate>Mon, 01 Sep 2008 16:18:25 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?p=101</guid>
		<description></description>
		<content:encoded><![CDATA[In my current project I do a lot of String parsing. Much a lot! And when it comes to do the same things many many times, performance will gain much from little details.

Let's take the simplest parsing as an example. Converting a CSS like string <strong>"width: 100%; maxwidth: 500; fontface: Bold; gap: 10;"</strong> to an object <strong>{ width: "100%" , maxwidth: "500" , fontface: "Bold" , gap: "10" }</strong>

Compare these two methods to achieve this:
<pre lang="actionscript">public static function simpleStringToObject_fast( input : String , o : Object = null ) : Object {
	if ( input == null || !Boolean(input) ) return o;
	if ( o == null ) o = {};

	var cursor : int = 0;
	var found_key : String;
	var index : int;
	while ( true ) {

		if ( found_key == null ) {
			index = input.indexOf( ':' , cursor );
			if ( index &gt;= 0 ) {
				while( input.charAt(index-1) == ' ' ) index--;
				found_key = input.substring( cursor , index );
				cursor = index + 1;
				while( input.charAt(cursor) == ' ' ) cursor++;
			} else {
				break;
			}
		} else {
			index = input.indexOf( ';' , cursor );
			if ( index &gt;= 0 ) {
				while( input.charAt(index-1) == ' ' ) index--;
				o[ found_key ] = input.substring( cursor , index );
				found_key = null;
				cursor = index + 1;
				while( input.charAt(cursor) == ' ' ) cursor++;
			} else {
				o[ found_key ] = input.substr( cursor );
				break;
			}
		}
	}

	return o;
}

public static function simpleStringToObject_slow( input : String , o : Object = null ) : Object {
	if ( input == null || !Boolean(input) ) return o;
	if ( o == null ) o = {};

	input = input.split(' ').join(''); // remove spaces
	var a : Array = input.split(';');
	var pair : Array;
	for ( var i:int=0 ; i 1 ) {
			o[ pair[0] ] = pair[1];
		}
	}
	return o;
}</pre>
The first one might look like some crap lacking any elegance and style, but it's<strong> twice as fast</strong> as the second one! And hey, if you do this a million times, it can be 5 seconds instead of 10. Might not seem to be that much, but I think it's certainly <strong>worth the extra coding</strong> :-)

(Update: I haven't mentioned RegExp here, though it definitely deserves a mention. Thing is that Regular Expressions are just damned slow in Flash compared to String manipulations, especially with longer strings. This is kind of surprising because it's implemented natively. But the implementation obviously isn't too good performance wise. I hope to see improvements with F10, though haven't read anything about it yet - and also haven't tested yet with beta. This little article confirms my experience with RegExp: <a href="http://www.mischel.com/diary/2006/07/12.htm">With a file of 10,000 lines, the string version is still instantaneous, but the regular expression version takes about five seconds.  Even with 180,000 lines, the string version is immediate.  We gave up on the regular expression version after over five minutes..</a>)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>101</wp:post_id>
		<wp:post_date>2008-09-01 17:18:25</wp:post_date>
		<wp:post_date_gmt>2008-09-01 16:18:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>speed-parsing-string-in-as3</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="actionscript"><![CDATA[Actionscript]]></category>
		<category domain="post_tag" nicename="actionscript"><![CDATA[Actionscript]]></category>
		<category domain="post_tag" nicename="parsing"><![CDATA[parsing]]></category>
		<category domain="post_tag" nicename="speed"><![CDATA[speed]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>5</wp:comment_id>
			<wp:comment_author><![CDATA[Jeff]]></wp:comment_author>
			<wp:comment_author_email>jeff@scarycoder.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>76.121.82.45</wp:comment_author_IP>
			<wp:comment_date>2008-10-07 04:59:58</wp:comment_date>
			<wp:comment_date_gmt>2008-10-07 03:59:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Reading your code makes me want to puke.  I really do.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6</wp:comment_id>
			<wp:comment_author><![CDATA[Jeff]]></wp:comment_author>
			<wp:comment_author_email>jeff@scarycoder.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>76.121.82.45</wp:comment_author_IP>
			<wp:comment_date>2008-10-07 05:01:42</wp:comment_date>
			<wp:comment_date_gmt>2008-10-07 04:01:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your code makes me want to vomit, both of them.  The shorter one makes me want to vomit a little less so I will go with that, even if it is slower.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>66</wp:comment_id>
			<wp:comment_author><![CDATA[Kai]]></wp:comment_author>
			<wp:comment_author_email>charizardflame@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>216.254.85.163</wp:comment_author_IP>
			<wp:comment_date>2009-09-21 21:38:30</wp:comment_date>
			<wp:comment_date_gmt>2009-09-21 20:38:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I always appreciate breaking down algorithms to their smallest parts. It's a great exercise in self-improvement and speeds up the code every time. The hard part is balancing the time you spend vs the benefits of speed.

What's up with JEFF?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
				<title>Freitag rolling for 15 years</title>
		<link>http://blog.betabong.com/2008/09/19/freitag-rolling-for-15-years/</link>
		<pubDate>Fri, 19 Sep 2008 15:52:27 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?p=107</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://blog.betabong.com/wp-content/uploads/2008/09/20080919-img_87991.jpg"><img class="alignnone size-full wp-image-109" title="20080919-img_87991" src="http://blog.betabong.com/wp-content/uploads/2008/09/20080919-img_87991.jpg" alt="" width="512" height="512" /></a>

15 years ago Markus and Daniel Freitag created their first Freitag bag, made of used truck tarpaulins and some other recycled stuff. So today's the big party, and I'll be there of course. The party will be public starting from 11 pm @ F-abric in the Maag Areal (Zurich, of course). I sure will already be in quite a good shape at that time ;-) Give me a hoorraaaa!!

<a href="http://blog.betabong.com/wp-content/uploads/2008/09/20080919-img_8799.jpg"></a><a style="margin-right: 20px;" href="http://blog.betabong.com/wp-content/uploads/2008/09/20080919-img_8803.jpg"><img class="alignnone wp-image-106" title="20080919-img_8803" src="http://blog.betabong.com/wp-content/uploads/2008/09/20080919-img_8803-300x300.jpg" alt="" width="246" height="246" /></a><a href="http://blog.betabong.com/wp-content/uploads/2008/09/20080919-img_87981.jpg"><img class="alignnone size-medium wp-image-108" title="20080919-img_87981" src="http://blog.betabong.com/wp-content/uploads/2008/09/20080919-img_87981-300x300.jpg" alt="" width="246" height="246" /></a>

<strong>Update:</strong> <a href="http://www.freitag.ch/shop/FREITAG/page/news_content_page/detail.jsf">Party-Pics here</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>107</wp:post_id>
		<wp:post_date>2008-09-19 16:52:27</wp:post_date>
		<wp:post_date_gmt>2008-09-19 15:52:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>freitag-rolling-for-15-years</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="event"><![CDATA[event]]></category>
		<category domain="post_tag" nicename="freitag"><![CDATA[freitag]]></category>
		<category domain="post_tag" nicename="party"><![CDATA[party]]></category>
		<category domain="category" nicename="random"><![CDATA[Random]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>E4X String Parser</title>
		<link>http://blog.betabong.com/2008/09/23/e4x-string-parser/</link>
		<pubDate>Tue, 23 Sep 2008 11:13:00 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?p=111</guid>
		<description></description>
		<content:encoded><![CDATA[I did a lot of string parsing in the recent time: CSS Selectors, XML Display Objects, Stylesheets, ... I also need XML selection from String expressions – I formerly (AS2) used the great <a href="http://www.xfactorstudio.com/">XPath4AS2 from XFactorStudio</a> which did it's job well (though a bit slow, it's AS2 after all).

There's also one for Actionscript 3 (<a href="http://code.google.com/p/xpath-as3/">xpath-as3</a>). But.. well... I wanted to go for some real speed! I like XPath a lot, but we now have native E4X selection in Actionscript 3, quite a different concept of node selection, and the conversion of XPath to E4X obviously results in quite a compromise in performance.

So all I need is a decent E4X parser. And hey, I found one! E<a href="http://www.adobe.com/devnet/flex/articles/e4x_print.html">4XParser from Digital Primates</a>. It does its job really well, especially considering the very compact code it consists of. Thanks to some preparsing and caching, it's also quite fast.

<strong>Still I thought I can do better :-)</strong> So I planted myself for a day (and a night) in front of my displays and hacked the hell out of it. The result is a little library which does pretty much the same thing as E4XParser, though pretty much more and a little faster too (15% to 50%). It's about half as fast as the native E4X selection (once parsed). You can do nearly anything you can do with E4X. Use it like this:

 
<pre lang="actionscript">import com.betabong.xml.e4x.E4X;
var result : XMLList = E4X.evaluate( xmllist , "author.( name.@last == 'Jobs' )" );

// E4X.evaluate( source : XMLList , expression : String ) : XMLList</pre>
 
If your source is XML, just do XMLList( xml ), if your result should be xml, do xml = result[0]

<a href="/showcase/e4x/E4X_Parse_Test.html">Test it here</a>

<a href="http://blog.betabong.com/showcase/e4x/E4X_Parse_Test.html" target="_blank"><img class="alignnone size-full wp-image-113" title="e4x" src="http://blog.betabong.com/wp-content/uploads/2008/09/e4x.png" alt="" width="512" height="405" /></a>

<strong>Restrictions:</strong> You can't use AND/OR in comparisions. So, this won't go: author.( name.@first == 'Steve' &amp;&amp; name.@last == 'Jobs' ) – though this is only a real limitations for OR. do this for AND: author.( name.@first == 'Steve' ).( name.@last == 'Jobs' ).

<strong>What you can do:</strong> Yes, you can do quite advanced stuff like author.( name.@first == name.@last ) or car.@rating.average() (one of the few proprietary functions I added). Or even
<pre>*..car.( @brand.toLowerCase() == 'volvo' ).( parent().( localName() == 'group' ).@rating &gt; @rating )</pre>
– a weird example, I admit, but fancy, ain't it? :-)

This is the first time ever I'm releasing part of my library as Open Source (MIT licence). As soon as I'll find some time (and if I see any interest), I'm gonna put this into Google Code, so everybody can easily checkout and participate. Until then download it from here:

<a class="download" href="/showcase/e4x/betabong-e4x.zip">Download</a> (zip 13kb)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>111</wp:post_id>
		<wp:post_date>2008-09-23 12:13:00</wp:post_date>
		<wp:post_date_gmt>2008-09-23 11:13:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>e4x-string-parser</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="actionscript"><![CDATA[Actionscript]]></category>
		<category domain="post_tag" nicename="actionscript"><![CDATA[Actionscript]]></category>
		<category domain="post_tag" nicename="e4x"><![CDATA[e4x]]></category>
		<category domain="post_tag" nicename="flash"><![CDATA[flash]]></category>
		<category domain="category" nicename="flex"><![CDATA[Flex]]></category>
		<category domain="post_tag" nicename="library"><![CDATA[library]]></category>
		<category domain="post_tag" nicename="open-source"><![CDATA[open source]]></category>
		<category domain="post_tag" nicename="os"><![CDATA[os]]></category>
		<category domain="post_tag" nicename="xml"><![CDATA[xml]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>51</wp:comment_id>
			<wp:comment_author><![CDATA[David]]></wp:comment_author>
			<wp:comment_author_email>david@ayzenberg.com</wp:comment_author_email>
			<wp:comment_author_url>http://dimlightstudios.com</wp:comment_author_url>
			<wp:comment_author_IP>65.173.51.2</wp:comment_author_IP>
			<wp:comment_date>2009-08-11 23:17:50</wp:comment_date>
			<wp:comment_date_gmt>2009-08-11 22:17:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks! This was just what I needed.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>54</wp:comment_id>
			<wp:comment_author><![CDATA[Leonardo Diaz]]></wp:comment_author>
			<wp:comment_author_email>ingleonardo@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>190.70.255.38</wp:comment_author_IP>
			<wp:comment_date>2009-08-21 06:23:39</wp:comment_date>
			<wp:comment_date_gmt>2009-08-21 05:23:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[A great tool, but I haven't been able to make it work with xml code that defines namespaces and xsd like this for example:


			 
	
		
			
		
				test
				
             
	     
	



it works without the namespace and all that stuff on the mpeg7 element

Any advice??]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>55</wp:comment_id>
			<wp:comment_author><![CDATA[Leonardo Diaz]]></wp:comment_author>
			<wp:comment_author_email>ingleonardo@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>190.70.255.38</wp:comment_author_IP>
			<wp:comment_date>2009-08-21 06:34:27</wp:comment_date>
			<wp:comment_date_gmt>2009-08-21 05:34:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[opps for the las comment, it did not parse the xml code, I'm trying with some mpeg7 document like this one:
[Mpeg7 xmlns:mpeg7="urn:mpeg:schema:2001" 		 
			 xmlns="urn:mpeg:schema:2001"
			 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
			 xmlns:xml="http://www.w3.org/XML/1998/namespace"
			 xsi:schemaLocation="urn:mpeg:schema:2001 XMLSchema/Mpeg7-2001.xsd "]
			 
	[Description type="ContentEntityType"]
		[MultimediaContent type="AudioVisualType"]
			[AudioVisual]
		
				[MediaInformation]
					
				[/MediaInformation]
				
			[/AudioVisual]
		[/MultimediaContent]
	[/Description]
[/Mpeg7]

if you delete all the extra params on the mpeg7 it works, but like this, it does not.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>56</wp:comment_id>
			<wp:comment_author><![CDATA[betabong]]></wp:comment_author>
			<wp:comment_author_email>sklaus@betabong.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.betabong.com</wp:comment_author_url>
			<wp:comment_author_IP>84.75.23.223</wp:comment_author_IP>
			<wp:comment_date>2009-08-21 10:01:36</wp:comment_date>
			<wp:comment_date_gmt>2009-08-21 09:01:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Namespaces are not easy to come by, that's for sure. Still... what exactly doesn't work? Can you provide me the example, so I can double check with my code?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>55</wp:comment_parent>
			<wp:comment_user_id>3</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>57</wp:comment_id>
			<wp:comment_author><![CDATA[Leonardo Diaz]]></wp:comment_author>
			<wp:comment_author_email>ingleonardo@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>190.70.255.38</wp:comment_author_IP>
			<wp:comment_date>2009-08-21 16:53:55</wp:comment_date>
			<wp:comment_date_gmt>2009-08-21 15:53:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi, well I tried more examples and googled and found that the problem is the default namespace.  with the code added on my last comment (just change the [ for the ;&gt; symbol) it works just by deleting the default namespace (xmlns="urn:mpeg:schema:2001"), now I'm facing a different problem, and it's how to filter nodes by its params when they are defined using xsi:, for example some elements on the mpeg7 especification has a defined type (MultimediaContent xsi:type="AudioVisualType" or MultimediaContent xsi:type="AudioType") or MultimediaContent xsi:type="VisualType" ) if I use the e4x filter ..MultimediaContext.(@xsi:type=="AudioType")  it does not work,  but if the nodes defines the params just as type="" (not xsi:type="")  then a normal expression ..MultimediaContext.(@type=="AudioType") works as expected.

...By the way your online parser has help me a lot, i'd be crying by just debugin the code and e4x expressions.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>58</wp:comment_id>
			<wp:comment_author><![CDATA[Leonardo Diaz]]></wp:comment_author>
			<wp:comment_author_email>ingleonardo@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>190.70.255.38</wp:comment_author_IP>
			<wp:comment_date>2009-08-21 17:21:06</wp:comment_date>
			<wp:comment_date_gmt>2009-08-21 16:21:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Sorry to "spam" your comment section, but this article is one tof the best and on google one of the first results, so I think this one last comment will help others. All the "problems" I've got are nicely explained here http://www.senocular.com/flash/tutorials/as3withflashcs3/?page=4

A great resource to fully understand E4X, I think it'll help you to update your app to dynamically load the namespaces on the xml (that would be awesome), and add an option to filter by using them.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>59</wp:comment_id>
			<wp:comment_author><![CDATA[betabong]]></wp:comment_author>
			<wp:comment_author_email>sklaus@betabong.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.betabong.com</wp:comment_author_url>
			<wp:comment_author_IP>84.75.23.223</wp:comment_author_IP>
			<wp:comment_date>2009-08-21 17:35:02</wp:comment_date>
			<wp:comment_date_gmt>2009-08-21 16:35:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Leonardo, I see your problem. My E4X parser doesn't (yet) support namespaces. It's mainly because I didn't really need it for my own purposes, but also because I think namespaces are a pain in the ass to handle. What I often do, is to just get rid of them:
<pre lang="actionscript">
public static function removeNamspaces( xml : XML ):XML {
	return XML( removeNamspacesFromString( xml.toXMLString() ) );
}

public static function removeNamspacesFromString( value : String ):String  
{  
    value = value.replace(removeNS1, "");  
    var attrs:Array = value.match(removeNS2);  
    value = value.replace(removeNS2, "%attribute value%");  
    value = value.replace(removeNS3, "$1");  
    while (value.indexOf("%attribute value%") &gt; 0)  
    {  
        value = value.replace("%attribute value%", attrs.shift());  
    }  
    return value;  
} 

private static var removeNS1:RegExp = /xmlns[^"]+\"[^"]+\"/g;
private static var removeNS2:RegExp = /\"[^"]*\"/g;
private static var removeNS3:RegExp = /(&lt;\/?|\s)\w+\:/g;
</pre>

I admit: this is not a beautiful solution. But it works for most cases. Call me lazy ;)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>57</wp:comment_parent>
			<wp:comment_user_id>3</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>125</wp:comment_id>
			<wp:comment_author><![CDATA[Kevin]]></wp:comment_author>
			<wp:comment_author_email>kevo83@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>93.63.175.34</wp:comment_author_IP>
			<wp:comment_date>2010-07-21 14:55:22</wp:comment_date>
			<wp:comment_date_gmt>2010-07-21 13:55:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi,
did you put this great tool on Google Code?

Anyway thank you very much, it was really what i was looking for!!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>330</wp:comment_id>
			<wp:comment_author><![CDATA[Justin]]></wp:comment_author>
			<wp:comment_author_email>howto@findzen.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>216.3.104.130</wp:comment_author_IP>
			<wp:comment_date>2011-07-22 21:16:53</wp:comment_date>
			<wp:comment_date_gmt>2011-07-22 20:16:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Very useful, thanks. Would be interested in hearing if you end up hosting this project somewhere.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>782</wp:comment_id>
			<wp:comment_author><![CDATA[Danny Kopping]]></wp:comment_author>
			<wp:comment_author_email>dannykopping@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://aerialframework.org</wp:comment_author_url>
			<wp:comment_author_IP>196.215.84.164</wp:comment_author_IP>
			<wp:comment_date>2012-03-21 00:38:14</wp:comment_date>
			<wp:comment_date_gmt>2012-03-20 23:38:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you!!! Wonderful library - helped us solve a very troubling issue]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
				<title>Weak Method Closure</title>
		<link>http://blog.betabong.com/2008/09/26/weak-method-closure/</link>
		<pubDate>Thu, 25 Sep 2008 23:36:16 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?p=115</guid>
		<description></description>
		<content:encoded><![CDATA[Sometimes you want to pass an objects function as an argument and store that function (along its arguments) for later calling. Still you don't want that storage to prevent its object (instance) from being destroyed (from being removed by the garbage collector). But storing a function does so, because it holds a reference to the function which belongs to an object.

It's one of the biggest traps you can fall into when developing a larger project where many objects are created and destroyed and created and so on... geeks call that kind of thing memory leaks I think :)

So if you can avoid it: avoid it! If you can't.. may be this little thing can help:
<!--more-->
<pre lang="actionscript">package com.betabong.util
{
	import flash.utils.Dictionary;

	public class WeakMethodClosure {

		private var holder : Dictionary;

		function WeakMethodClosure( target : Object , method : Function , arguments : Array = null ) : void {
			holder = new Dictionary( true );
			holder[ target ] = 	new MethodStorage( method , arguments );
		}

		public function call() : Boolean {
			var args : Array;
			var f : Function;
			var cache : MethodStorage;
			for ( var obj : * in holder ) {
				cache = holder[obj] as MethodStorage;
				cache.method.apply( obj , cache.arguments );
				return true;
			}
			return false;
		}
	}
}

class MethodStorage {
	public var method : Function;
	public var arguments : Array;
	function MethodStorage( method : Function , arguments : Array = null ) : void {
		this.method = method;
		this.arguments = arguments;
	}
}</pre>
This actually uses one of the two mechanisms Flash provides to store objects by weak reference: the magic Dictionary. So instead of storing the function, you actually store the method storage or call method:
<pre lang="actionscript">public function callAfterTime( f : Function , a : Array , t : uint ) : void {
this.storedfunction = ( new WeakMethodClosure( this , f , a ) ).call;
// and later:
storedfunction();</pre>
It might not be obvious where you'd wanna use this, but I guess if you've found your way to this blog entry, you might be able to find out if that's of any value for you anyway ;)

<a href="/showcase/WeakMethodClosure.as.zip">Download WeakMethodClosure.as (zip)</a>

Just be aware that this solution might not be superduper save in all cases: the Garbage Collector is a wayward beast – there's no guarantee it'll clean your dictionary on time. Still, in my experience, it's save enough. It's comparable to adding a weak event listener..

And hey, if you've got any better idea, I'd love to hear!



<strong>Update:</strong> Below a test application...

<pre lang="actionscript">
package
{
	import com.betabong.util.WeakMethodClosure;
	import flash.display.Sprite;
	import flash.events.TimerEvent;
	import flash.utils.Timer;
	import flash.utils.getTimer;

	public class WeakClosureTest extends Sprite
	{
		private var closure : WeakMethodClosure;
		private var timer : Timer;
		
		public function WeakClosureTest()
		{			
			testWeakClosure();
		}

		public function testWeakClosure() : void {
			var tempObject : Object = {
				test: testTrace
			}
			closure = new WeakMethodClosure( tempObject , tempObject.test );
			callWeakClosure();
			
			timer = new Timer( 50 );
			timer.addEventListener(TimerEvent.TIMER , callWeakClosure );
			timer.start();
		}
		
		public function callWeakClosure( event : TimerEvent = null ) : void {
			if ( !closure.call() ) {
				trace( "Closure failed" );
			}
		}
		
		public function testTrace() : void {
			trace("Called test");
		}
		
		
	}
}
</pre>

Outputs:
<pre>
Called test
Called test
Closure failed
Closure failed
Closure failed
Closure failed
Closure failed
Closure failed
Closure failed
Closure failed
Closure failed
Closure failed
Closure failed
Closure failed
Closure failed
Closure failed
Closure failed
</pre>


]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>115</wp:post_id>
		<wp:post_date>2008-09-26 00:36:16</wp:post_date>
		<wp:post_date_gmt>2008-09-25 23:36:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>weak-method-closure</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="actionscript"><![CDATA[Actionscript]]></category>
		<category domain="post_tag" nicename="actionscript"><![CDATA[Actionscript]]></category>
		<category domain="post_tag" nicename="closure"><![CDATA[closure]]></category>
		<category domain="post_tag" nicename="method"><![CDATA[method]]></category>
		<category domain="post_tag" nicename="weak"><![CDATA[weak]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>8</wp:comment_id>
			<wp:comment_author><![CDATA[Aidan]]></wp:comment_author>
			<wp:comment_author_email>aaaidan@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://aidan.rfm.co.nz</wp:comment_author_url>
			<wp:comment_author_IP>117.53.151.24</wp:comment_author_IP>
			<wp:comment_date>2008-10-09 04:23:03</wp:comment_date>
			<wp:comment_date_gmt>2008-10-09 03:23:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Fantastic. Like you say, it's not completely obvious to me _exactly_ where I'll use this in my large, complex as3 application, but I'm very sure it will be very handy. Unfortunately, it's not just functions that are obstructing garbage collection for me.

Reassuring to know that other people are having similar memory hurdles. Cheers!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>16</wp:comment_id>
			<wp:comment_author><![CDATA[Kirill]]></wp:comment_author>
			<wp:comment_author_email>kirill@kirillam.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>99.245.202.41</wp:comment_author_IP>
			<wp:comment_date>2009-01-09 14:12:43</wp:comment_date>
			<wp:comment_date_gmt>2009-01-09 13:12:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm not sure how gc safe this is. A weak dictionary doesn't increase the reference count of an object used as a key in it, but does it also not increase the reference count of any objects stored IN the objects that are in it? You operate under the assumption that it does. But I don't think that may be the case. What I mean is that when you do holder[ target ] = ... target doesn't have its reference count increased allowing it to be gced later. BUT you store a MethodStorage object, which has references to the method and the arguments array. This will cause the reference counts of the method and the array to increase. The method by virtue of its method closure will hold a reference back to the target. Since this doesn't seem to be a circular reference scenario, which I think fp gc catches, this method's reference back to the target will prevent it from being gced since the method's reference count has increased. As well as this, because the arguments array has references back to the objects stored in it those objects will not be gced either.

I'm not saying code code doesn't work period, I may in fact be wrong. But from looking at it I'm seeing a flaw in it. I'd be interested in seeing the test code you have for this and trying it out.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>19</wp:comment_id>
			<wp:comment_author><![CDATA[betabong]]></wp:comment_author>
			<wp:comment_author_email>sklaus@betabong.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.betabong.com</wp:comment_author_url>
			<wp:comment_author_IP>84.75.23.185</wp:comment_author_IP>
			<wp:comment_date>2009-01-11 13:12:57</wp:comment_date>
			<wp:comment_date_gmt>2009-01-11 12:12:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Kirill, I've added a test application to the post. As you can see the garbage collection gets rid of the temporary object, though has to be run once (that's why the method can be called by the TimerEvent although it's ready to be garbaged already). So to be absolutely sure that this works as intended, we'd need to force garbage collection before each call (wasn't there a command for that? hmm..)

Its main purpose is though to avoid accidental memory leaks, and for this it has it's uses. There is btw a class flash.events.WeakMethodClosure that's used internally – I'm not sure what it does exactly though (no code available..).

You certainly have more knowledge of the garbage collection process, so if you can shed more light on this, it would be cool. I'd also love to hear from the Flash Player team what exactly is going on with those weak references, so we're not so much moving in the dark.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>3</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>41</wp:comment_id>
			<wp:comment_author><![CDATA[Kirill]]></wp:comment_author>
			<wp:comment_author_email>kirill@kirillam.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>99.233.210.47</wp:comment_author_IP>
			<wp:comment_date>2009-05-29 12:43:12</wp:comment_date>
			<wp:comment_date_gmt>2009-05-29 11:43:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great to see follow-ups on this. This is indeed very frustrating. But... It is possible to do as I've learned. When storing references to methods what has to happen for garbage collection to act right is the objects involved must form a closed circuit. If there's ANY reference to one of the objects in the circuit from outside then none of them will be garbage collected. Note that this is actually desired behavior for only one of the objects in the circuit, which is the user object. So imagine we have the user object and the WeakMethodClosure which stores a reference to its method. What has to happen is the user object must store a reference to the WeakClosureMethod  object. When the user object has references to it from outside the circuit then neither it or the WeakMethodClosure get GCed (which is correct), when no outside reference exists then they both get garbage collected (desired behavior). If there isn't a circuit and the user object doesn't have a reference to the WeakMethodClosure then WeakMethodClosure object will get GCed even when the user has references to it and doesn't get GCed. If there's any reference to WeakMethodClosure other than from user object or any other object in the circuit then nothing will get GCed.

The problem with creating a utility like WeakMethodClosure is forming that reference from the user to it. WeakMethodClosure can't do this automatically without placing some really heavy restrictions on the user. Like requiring it to be dynamic, or subclass of EventDispatcher (so that it can add a dummy event listener to itself), or an interface which requires the hassle of implementing a way to store WeakMethodClosure in the user. One more or less sensible way to implement this utility is adding a 3rd object to store WeakMethodClosure. So that the user has to explicitly define a variable and assign an instance of this manager to it and then instead of doing new WeakMethodClosure( myMethod ), it would do weakMethods.createClosure( myMethod ). Note that the user, manager, and WeakMethodClosure form a circuit so it's fine. It's an ugly interface but it works and there's considerably less magic in it than in other ways of attempting to do this.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>33</wp:comment_id>
			<wp:comment_author><![CDATA[Thijs]]></wp:comment_author>
			<wp:comment_author_email>thijs@tyz.nl</wp:comment_author_email>
			<wp:comment_author_url>http://www.tyz.nl</wp:comment_author_url>
			<wp:comment_author_IP>77.95.98.131</wp:comment_author_IP>
			<wp:comment_date>2009-04-15 11:27:37</wp:comment_date>
			<wp:comment_date_gmt>2009-04-15 10:27:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The weakreference only works for anonymous objects. When you use typed objects, the object is still kept in memory. I think this is caused by method inside the MethodStorage object.

Try this example:
<pre lang="actionscript">
package  
{
	import com.betabong.util.WeakMethodClosure;
	
	import flash.display.Sprite;
	import flash.events.TimerEvent;
	import flash.utils.Timer;	

	public class NotificationCenterExample extends Sprite 
	{
		private var closure : WeakMethodClosure;
		private var timer : Timer;
 
		public function NotificationCenterExample()
		{			
			testWeakClosure();
		}
 
		public function testWeakClosure() : void {
			var tempObject:TestObject = new TestObject();
			closure = new WeakMethodClosure( tempObject , tempObject.test );
			callWeakClosure();
 
			timer = new Timer( 50 );
			timer.addEventListener(TimerEvent.TIMER , callWeakClosure );
			timer.start();
		}
 
		public function callWeakClosure( event : TimerEvent = null ) : void {
			if ( !closure.call() ) {
				trace( "Closure failed" );
			}
		}
	}
}

class TestObject
{
	public function test():void
	{
		trace("Called test");
	}
}
</pre>

Outputs:
<pre lang="text">
Called test
Called test
Called test
Called test
Called test
Called test
Called test
Called test
Called test
Called test
Called test
Called test
Called test
Called test
Called test
Called test
Called test
Called test
Called test
Called test
Called test
Called test
Called test
Called test
Called test
Called test
</pre>

So I guess your class is useless]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>34</wp:comment_id>
			<wp:comment_author><![CDATA[Thijs]]></wp:comment_author>
			<wp:comment_author_email>thijs@tyz.nl</wp:comment_author_email>
			<wp:comment_author_url>http://www.tyz.nl</wp:comment_author_url>
			<wp:comment_author_IP>77.95.98.131</wp:comment_author_IP>
			<wp:comment_date>2009-04-15 11:58:50</wp:comment_date>
			<wp:comment_date_gmt>2009-04-15 10:58:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I also found out a solution:

 - Store the object inside the MethodStorage 
 - use the MethodStorage as key
 - use a dummy value (like true, or a timestamp) as value]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>35</wp:comment_id>
			<wp:comment_author><![CDATA[betabong]]></wp:comment_author>
			<wp:comment_author_email>sklaus@betabong.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.betabong.com</wp:comment_author_url>
			<wp:comment_author_IP>84.75.21.89</wp:comment_author_IP>
			<wp:comment_date>2009-04-15 12:17:54</wp:comment_date>
			<wp:comment_date_gmt>2009-04-15 11:17:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[To Thijs:

Useless is a bit harsh for my poor class ;) It's just useless as soon as you use an instance function. Though you're right: it *usually* is totally useless :)

For what you want (and what I probably want too) we just have to make the closure a little bit weaker:

<pre lang="actionscript">
package com.betabong.util
{
	import flash.utils.Dictionary;
	
	public class WeakerMethodClosure
	{
		private var holder : Dictionary;
		
		function WeakerMethodClosure( target : Object , method : Function , arguments : Array = null ) : void {
			var fholder : Dictionary = new Dictionary( true );
			fholder[ method ] = arguments;
			holder = new Dictionary( true );
			holder[ target ] = 	fholder;
		}
		
		public function call() : Boolean {
			var args : Array;
			var f : Function;
			var cache : Dictionary;
			for ( var obj : * in holder ) {
				cache = holder[obj] as Dictionary;
				for ( var fnc : * in cache ) {
					f = fnc as Function;
					args = cache[ fnc ] as Array;
					f.apply( obj , args );
					return true;
				}
			}
			return false;
		}
	}
}
</pre>

testing with:

<pre lang="actionscript">
package {
	import com.betabong.util.WeakerMethodClosure;
	
	import flash.display.Sprite;
	import flash.events.TimerEvent;
	import flash.utils.Timer;
	
	import test.TestTrace;

	public class ActionscriptTests extends Sprite
	{
		private var holder : WeakerMethodClosure;
		
		public function ActionscriptTests()
		{
			init();
		}

		public function init() : void {
			var o:TestTrace = new TestTrace();
			holder = new WeakerMethodClosure( o , o.test );

			// let's call it once to make sure it works
			holder.call();

			var timer : Timer = new Timer( 1000 , 10 );
			timer.addEventListener(TimerEvent.TIMER , call );
			timer.start();
		}
		
		public function call( e:* ) : void {
			trace( "Calling holder" );
			holder.call();
		}
	}
}
</pre>

and:

<pre lang="actionscript">
package test
{
	public class TestTrace
	{
		static public var globalindex : uint = 0;
		private var localindex : uint = 0;
		private var callcounter : uint = 0;
		
		public function TestTrace()
		{
			localindex = ++globalindex;
			trace( toString() + " created" );
		}
		
		public function test() : void {
			trace( toString() + " called " + (++callcounter) + " times" );
		}
		
		public function toString() : String {
			return "TestTrace " + localindex;
		}
		

	}
}
</pre>

outputs:

<pre lang="text">
TestTrace 1 created
TestTrace 1 called 1 times
Calling holder
Calling holder
Calling holder
Calling holder
</pre>

Is this more useful? Probably. A very little bit. Under normal situations we hopefully don't have to use such weird constructs.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>3</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>36</wp:comment_id>
			<wp:comment_author><![CDATA[Thijs]]></wp:comment_author>
			<wp:comment_author_email>thijs@tyz.nl</wp:comment_author_email>
			<wp:comment_author_url>http://www.tyz.nl</wp:comment_author_url>
			<wp:comment_author_IP>77.95.98.131</wp:comment_author_IP>
			<wp:comment_date>2009-04-15 13:02:03</wp:comment_date>
			<wp:comment_date_gmt>2009-04-15 12:02:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[My solution is not working either :'-(

I am trying to create a better solution for creating weak references to a method. But I guess it's not possible.

For some reasons it's not possible to use a method as a key in a Dictionary with weak-keys (they are deleted immediatly, even when the method still exists), so maybe it's a bug.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37</wp:comment_id>
			<wp:comment_author><![CDATA[Thijs]]></wp:comment_author>
			<wp:comment_author_email>thijs@tyz.nl</wp:comment_author_email>
			<wp:comment_author_url>http://www.tyz.nl</wp:comment_author_url>
			<wp:comment_author_IP>85.144.53.13</wp:comment_author_IP>
			<wp:comment_date>2009-04-19 13:50:21</wp:comment_date>
			<wp:comment_date_gmt>2009-04-19 12:50:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA["Note that there is a known bug with Dictionary that prevents it from operating correctly with references to methods. It seems that Dictionary does not resolve the method reference properly, and uses the closure object (ie. the "behind the scenes" object that facilitates method closure by maintaining a reference back to the method and its scope) instead of the function as the key. This causes two problems: the reference is immediately available for collection in a weak Dictionary (because while the method is still referenced, the closure object is not), and it can create duplicate entries if you add the same method twice. This can cause some big problems for things like doLater queues. "

http://www.gskinner.com/blog/archives/2006/07/as3_dictionary.html]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>38</wp:comment_id>
			<wp:comment_author><![CDATA[betabong]]></wp:comment_author>
			<wp:comment_author_email>sklaus@betabong.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.betabong.com</wp:comment_author_url>
			<wp:comment_author_IP>84.75.21.89</wp:comment_author_IP>
			<wp:comment_date>2009-04-20 16:32:04</wp:comment_date>
			<wp:comment_date_gmt>2009-04-20 15:32:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Thijs: Good point. Didn't think about that, but it makes absolutely sense. One more reason why Adobe should allow us to somehow access the MethodClosure. Apart from that I conclude that it's still best practice to just have clean coding instead of using semi-functional hacks like those (mine) above.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>37</wp:comment_parent>
			<wp:comment_user_id>3</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>42</wp:comment_id>
			<wp:comment_author><![CDATA[Kirill]]></wp:comment_author>
			<wp:comment_author_email>kirill@kirillam.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>99.233.210.47</wp:comment_author_IP>
			<wp:comment_date>2009-05-29 13:09:14</wp:comment_date>
			<wp:comment_date_gmt>2009-05-29 12:09:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The first test is actually misleading, because it creates a dynamic object and has the WeakMethodClosure store a method actually defined in the Test as though it was part of this object. This doesn't work in AS3 because the method will always be owned by the test object due to its closure. The reason you saw it "working" is that you didn't store the dynamic object anywhere and the weak dictionary allowed it to be GCed, but the real owner of the method didn't get GCed since it has references to it.

The 2nd test is more correct, but it stores a reference to WeakMethodClosure in the main object rather than in TestObject. This creates an outside reference and stops TestObject and WeakMethodClosure from getting Gced. For this to work the 'closure' instance variable has to be moved to TestObject. But there's another reference via the Timer event listener, which isn't weak in the test so that will also prevent garbage collection. That listener has to be weak for it to not count as a reference into the circuit.

One other thing is this has to be tested inside the profiler and not in the debugger if you guys are using FlexBuilder. Because the debugger has somekind of a bug that prevents garbage collector from running as opposed to the profiler.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>43</wp:comment_id>
			<wp:comment_author><![CDATA[Kirill]]></wp:comment_author>
			<wp:comment_author_email>kirill@kirillam.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>99.233.210.47</wp:comment_author_IP>
			<wp:comment_date>2009-05-29 13:11:15</wp:comment_date>
			<wp:comment_date_gmt>2009-05-29 12:11:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[BTW I'm testing using FP10 which had a lot of the GC bugs fixed. All I said is moot in FP9, which as far as I'm concerned has no garbage collection.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
				<title>Blog Feature: Code Lightbox</title>
		<link>http://blog.betabong.com/2008/10/03/blog-feature-code-lightbox/</link>
		<pubDate>Fri, 03 Oct 2008 17:07:49 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?p=127</guid>
		<description></description>
		<content:encoded><![CDATA[Just added a little javascript magic: now you can «zoom into» the code snippets in this blog. The javascript is not very -ehm- reusable because it contains some dirty hard coded style stuff, but hey, it does its job pretty well ;-) (btw: not tested on IE).

So now time to go to Marc's birthday party. I wish <a title="Marc runs Entropy" href="http://www.entropy.ch">Marc</a>, my favorite code (and soon typo) guru and a good friend, all the best: Rock on!! :-)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>127</wp:post_id>
		<wp:post_date>2008-10-03 18:07:49</wp:post_date>
		<wp:post_date_gmt>2008-10-03 17:07:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>blog-feature-code-lightbox</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="css"><![CDATA[css]]></category>
		<category domain="category" nicename="javascript-tech"><![CDATA[Javascript]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>links for 2008-10-05</title>
		<link>http://blog.betabong.com/2008/10/06/links-for-2008-10-05/</link>
		<pubDate>Mon, 06 Oct 2008 01:06:01 +0000</pubDate>
		<dc:creator><![CDATA[delicious]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/2008/10/06/links-for-2008-10-05/</guid>
		<description></description>
		<content:encoded><![CDATA[<ul class="delicious"><li>
                <div class="delicious-link"><a href="http://www.youtube.com/experiencewii">YouTube - experiencewii&#39;s Channel</a></div>
                <div class="delicious-extended">Real cool ad page using physics engine. The Flash page simulates the YouTube website – nifty!</div>
                <div class="delicious-tags">(tags: <a href="http://delicious.com/sok/flash%2Cphysics%2Cadvertising%2Cbanner">flash,physics,advertising,banner</a>)</div>
            </li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>130</wp:post_id>
		<wp:post_date>2008-10-06 02:06:01</wp:post_date>
		<wp:post_date_gmt>2008-10-06 01:06:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>links-for-2008-10-05</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename=""><![CDATA[]]></category>
	</item>
	<item>
				<title>Finnish Disco Lesson</title>
		<link>http://blog.betabong.com/2008/10/06/finnish-disco-lesson/</link>
		<pubDate>Mon, 06 Oct 2008 19:55:25 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?p=131</guid>
		<description></description>
		<content:encoded><![CDATA[<object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="520" height="400" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="wmode" value="transparent" /><param name="src" value="http://www.youtube.com/v/PeQpwQ1xgbI&amp;hl=en&amp;fs=0&amp;color1=0xeeeeee&amp;color2=0xeeeeee&amp;ap=%2526fmt%3D18" /><embed type="application/x-shockwave-flash" width="520" height="400" src="http://www.youtube.com/v/PeQpwQ1xgbI&amp;hl=en&amp;fs=0&amp;color1=0xeeeeee&amp;color2=0xeeeeee&amp;ap=%2526fmt%3D18" wmode="transparent"></embed></object>

Those moves - love 'em! (found at <a href="http://harrharr.wordpress.com/2008/10/02/finnish-disco-lesson/">badana</a>)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>131</wp:post_id>
		<wp:post_date>2008-10-06 20:55:25</wp:post_date>
		<wp:post_date_gmt>2008-10-06 19:55:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>finnish-disco-lesson</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="dance"><![CDATA[dance]]></category>
		<category domain="post_tag" nicename="movie"><![CDATA[movie]]></category>
		<category domain="category" nicename="random"><![CDATA[Random]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>How about we go fuck instead?</title>
		<link>http://blog.betabong.com/2008/10/09/how-about-we-go-fuck-instead/</link>
		<pubDate>Wed, 08 Oct 2008 23:44:50 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?p=135</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://blog.betabong.com/wp-content/uploads/2008/10/picture-6.png"><img class="alignnone size-full wp-image-136" title="Canvas Demo" src="http://blog.betabong.com/wp-content/uploads/2008/10/picture-6.png" alt="" width="512" height="308" /></a>

<a href="http://antisocial.demozoo.org/demo.html">A sweet nice canvas demo</a> with some (pseudo?) 3D. A lot of code for a little story. But I like it. You'll gonna need a fast computer ;)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>135</wp:post_id>
		<wp:post_date>2008-10-09 00:44:50</wp:post_date>
		<wp:post_date_gmt>2008-10-08 23:44:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>how-about-we-go-fuck-instead</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="3d"><![CDATA[3d]]></category>
		<category domain="post_tag" nicename="animation"><![CDATA[animation]]></category>
		<category domain="category" nicename="javascript-tech"><![CDATA[Javascript]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="random"><![CDATA[Random]]></category>
		<category domain="post_tag" nicename="sound"><![CDATA[sound]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>edel*flash 2.0</title>
		<link>http://blog.betabong.com/2008/10/30/edelflash-v2/</link>
		<pubDate>Thu, 30 Oct 2008 09:28:17 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?p=139</guid>
		<description></description>
		<content:encoded><![CDATA[<a title="Edel*flash" style="float: right; display: block; margin-left: 20px; margin-bottom: 20px;" href="http://edelflash.ch"><img class="size-medium wp-image-140  alignright" title="edelflash_logo" src="http://blog.betabong.com/wp-content/uploads/2008/10/edelflash_logo.png" alt="Edel*flash" width="200" height="80" /></a>

<a title="Edel*flash" href="http://edelflash.ch">Edel*flash</a>, a swiss site dedicated to swiss flash excellence, got redesigned as a wordpress blog. I think it's a real nice and wise update. Well done, Simurai!

On a side note, first award in v2 is Hugman, designed and concepted by my friend Tobi (also well done!)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>139</wp:post_id>
		<wp:post_date>2008-10-30 10:28:17</wp:post_date>
		<wp:post_date_gmt>2008-10-30 09:28:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>edelflash-v2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="random"><![CDATA[Random]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Alchemy – THE cool new flash feature!</title>
		<link>http://blog.betabong.com/2008/11/19/alchemy-release/</link>
		<pubDate>Wed, 19 Nov 2008 14:53:39 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?p=142</guid>
		<description></description>
		<content:encoded><![CDATA[Adobe today released <a href="http://labs.adobe.com/technologies/alchemy/">Alchemy</a>, a SDK to compile C/C++ code into AVM2 Bytecode.

This has been sneak peaked a while ago (see Video below) - now it's here. And I'm amazed!! Think of the possiblities: XSLT interpreter (as demoed in the vid), 3D speed, super fast parsing, physics, AI - everything that's CPU intensive and won't need any platform specific stuff.

So far this C code still looks pretty fucked up to me (see examples at the labs), but hell, I'm sure that one day we're gonna see some real fancy stuff thanks to this. I'm looking forward!

<object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="512" height="380" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="src" value="http://blip.tv/play/AZmeJIX8bw" /><embed type="application/x-shockwave-flash" width="512" height="380" src="http://blip.tv/play/AZmeJIX8bw"></embed></object>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>142</wp:post_id>
		<wp:post_date>2008-11-19 15:53:39</wp:post_date>
		<wp:post_date_gmt>2008-11-19 14:53:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>alchemy-release</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="actionscript"><![CDATA[Actionscript]]></category>
		<category domain="post_tag" nicename="actionscript"><![CDATA[Actionscript]]></category>
		<category domain="post_tag" nicename="c"><![CDATA[C++]]></category>
		<category domain="category" nicename="tech"><![CDATA[Frontend]]></category>
		<category domain="post_tag" nicename="open-source"><![CDATA[open source]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Develop in Flex Builder, publish in Flash IDE (Mac OS X)</title>
		<link>http://blog.betabong.com/2008/11/29/flex-builder-t-flash-ide/</link>
		<pubDate>Sat, 29 Nov 2008 12:12:43 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?p=144</guid>
		<description></description>
		<content:encoded><![CDATA[<span class="update"><strong>Update:</strong> <a href="http://blog.betabong.com/2008/12/03/test-movie-from-flex-to-flash-easy-way/">I've found an easier way without FlashCommand</a></span>

Once you got used to developing for Flash in Flex Builder, you hate to do any programming in Flash IDE. Still you sometimes might have to: Flex Builder won't allow to publish into a FLA file. (There are of course many other reasons, like supporting older AS1/AS2 projects, we don't go into that here.) Thanks to Eclipse's ability to be customized, there are ways to make things at least a little easier. I give here a little overview of how I've set up my environment, based on several helpful resources I've found in the web.

 
<ol>
	<li>Install FlashCommand</li>
	<li>Install Ant</li>
</ol>

And for each project:
 
<ol>
	<li>Create/modify Ant file</li>
	<li>Create Actionscript project</li>
	<li>Set up project and FLA file</li>
</ol>

<!--more-->

<h3>What you need</h3>
<ul>
	<li><a href="http://www.adobe.com/products/flex/">Flex Builder</a></li>
	<li><a href="http://www.adobe.com/products/flash/">Flash IDE (CS3 or CS4)</a></li>
</ul>
 
<h3>Install FlashCommand</h3>
<a href="http://www.mikechambers.com/blog/2008/05/02/flashcommand-for-os-x-updated-to-work-with-flash-cs3/">flashcommand</a> is a python script by <a href="http://www.mikechambers.com/blog/">Mike Chambers</a> that lets you compile FLA files from the command line using Flash IDE. <a href="http://code.google.com/p/flashcommand/downloads/list">Download it</a> and put it wherever you want.

<h3>Install ANT</h3>
If you're used to FDT (or Eclipse in any way) you may well know Ant. <a href="http://en.wikipedia.org/wiki/Apache_Ant">Ant</a> is the premier build tool for any developers working in <a href="http://www.eclipse.org/">Eclipse</a>, with many many cool possibilites to automate your workflow. Here's how you <a href="http://blog.jodybrewster.net/2008/04/09/installing-ant-in-flex-builder-3/">install Ant in Flex Builder 3 Standalone</a>:

 
<ol>
	<li>Go to Help &gt; Software Updates &gt; Find and Install</li>
	<li>Search for new features to install, click next</li>
	<li>Select «The Eclipse Project Updates», click finish
Note: If you do not have the option above click «New Remote Site» and enter «The Eclipse Project Updates» as the name and «http://update.eclipse.org/updates/3.3» as the url.</li>
	<li>In Eclipse project updates look for «Eclipse Java Development Tools ...» – it might be in «Eclipse SDK Eclipse 3.3.2» but this depends on what version you have installed and what version is currently available. Select it and click next.</li>
	<li>Accept licence agreement, click next. Then click «Finish» to start download.</li>
	<li>Once downloaded, click «Install all»</li>
	<li>Restart Eclipse (you'll be asked to)</li>
</ol>
 
<h3>Create Project</h3>
<ol>
	<li>Create a new Actionscript Project in Flex Builder</li>
	<li>Add a new «build» directory in the project root</li>
	<li>Add your FLA file(s) and assets to the build folder and your source files to the src folder
(I also strongly recommend adding external libraries to and «externals» directory and use svn:externals property on it, but that's another story) </li>
	<li>Add build paths. You have to do this at least twice:
<ul>
	<li>In the Flash IDE for the FLA: Publish Settings &gt; Actionscript 3 «Settings...». Don't forget to add the src folder at least.
Test your FLA once done. It should compile just fine.</li>
	<li>In Flex Builder: Project &gt; Properties &gt; ActionScript Build Path. Add your external libraries here. This is used so Flex knows where to lookup your classes, it won't actually be needed for compiling, because that's what Flash IDE's gonna do.</li>
</ul>
</li>
	<li>Now you're almost done: you can edit your classes in Flex Builder and switch to Flash IDE to publish and/or test your movie. We're gonna make this a little more comfortable with Ant and flashcommand.</li>
</ol>
 
<h3>Add Ant build file</h3>
 
<ol>
	<li>Create a new file build.xml in the root folder and open it with Ant Editor (in Flex Builder aka Eclipse)</li>
	<li>Edit the build.xml according your setup (see below for example)</li>
	<li>Add build.xml to Ant View (Window &gt; Other Views...)</li>
	<li>Run an action by double clicking it in Ant View: there you go!! It will compile in Flash IDE and open in your browser for testing!</li>
</ol>

<h3>Sample Ant build.xml</h3>
<pre lang="xml">	
	<?xml version="1.0" encoding="UTF-8"?>
	<!-- ====================================================================== 
	     Nov 28, 2008 1:37:54 AM                                                        

	     MyProject    
	     Compile in Flash IDE

	     sev                                                                
	     ====================================================================== -->
	<project name="MyProject" default="Compile and Run" basedir="./">
	        <!-- project specifics -->
	        <property name="browser" value="Safari"/>
	        <property name="swf.filename" value="MyProject"/>
	        <property name="html.filename" value="fla/index.html" />

	        <!-- Flash IDE Commandline compiler -->
	        <property name="python" value="/usr/bin/python" />
	        <property name="flash.command" value="/path/to/flashcommand" />

	        <!-- directories -->
			<property name="user.path" value="/Users/yourname"/>

	        <property name="build.dir" value="${basedir}/build" />

	        <property name="main.fla" value="${build.dir}/${swf.filename}.fla" />
	        <!-- paths -->
	        <property name="output.path" value="${build.dir}/${swf.filename}.swf" />
	
			<!-- you can also point to the file:///path/to/index.html -->
	        <property name="local.path" value="http://localhost/projects/MyProject/${html.filename}"/>
	        <property name="log.path" value="${user.path}/Library/Preferences/Macromedia/Flash Player/Logs/flashlog.txt"/>

	        <!-- Compile python flashcommand -e  -s build/MyProject.fla -o build/MyProject.swf 

	        usage: flashcommand -e | -c | -p [-v] [-x] (-s <sourcefile>) ([-o] <exportpath>) ([-t] <timeout>)([-d] <tempdir>) [-j]

	        Options and arguments:

	        -a : Prints version and about information.
	        -c : Specifies save and compact action. 
	        -d : Specifies temp directory that will be used for temporary files. Optional.
	        -e : Specifies export action.
	        -h : Prints usage information.
	        -j : Specifies that the generated JSFL file should be printed. If this option is specified, Flash will not be executed.
	        -o : Specifies the output file if -e flag is also set. Optional. If not specified, file will be output to same directory as source.
	        -p : Specifies publish action.
	        -s : Specifies source file. Required.
	        -t : Specifies timeout value. Optional.
	        -v : Specifies verbose mode. Optional.
	        -f : Specifies that the Flash authoring version installed is a version other than Flash CS3
	        -x : Specifies whether Flash should be closed after it is done processing. Optional.    

	        -->

	<target name="Compile and Run">
		<antcall target="Compile in IDE"/>
		<antcall target="Clear Log"/>
		<antcall target="Open in Browser"/>
	</target>
        
        <target name="Compile in IDE">
        		<echo>${flash.command} -e -c -s ${main.fla} -o ${output.path}</echo>
                <exec executable="${python}" failonerror="true" logError="true">
                        <arg line="${flash.command}" />
                        <arg line="-e " />
                        <arg line="-s ${main.fla} "/>
                        <arg line="-o ${output.path}"/>
                </exec>
        </target>
        
        
        <!-- Open in local browser -->
        <target name="Open in Browser">
                <exec executable="open">
                        <arg line="-a ${browser} ${local.path}" />
                </exec>
        </target>
        
        <!-- Clear Debug Log -->
        <target name="Clear Log">
			
        	<concat destfile="${log.path}">                                                                                                            
.: Sev Log File :.

</concat>
            <exec executable="open">
                    <arg line="-a console '${log.path}'" />
            </exec>
        </target>
	</project>
	
</pre>

<strong>Update:</strong> <a href="http://www.leebrimelow.com/">Lee Brimelov</a> just released a <a href="http://theflashblog.com/?p=482">plugin for Eclipse</a>, that provides this functionality (more or less) with a single click of an icon. It's an alpha version, and you won't have all the Ant flexibility (well, you could still install Ant), but you can avoid most of the installation hazzle, and that's pretty cool. Unfortunately I couldn't get it to work so far. 

<strong>Update 2:</strong> It bugged me that every time I execute this action Flash would pop up. To work around that I slightly modified the FlashCommand script (it actually checks wether the FLA file is already open, and if so won't call the open command). Also I had to leave away the -c option (save and compact), something I don't need anyway. So now when you execute the command from Flex the following happens:

<ol>
<li>The little publish dialog pops up (Fla is exported to SWF)</li>
<li>The HTML file is opened in the browser (which comes to front), as well as the Console displaying the trace output</li>
</ol>

Also I have bound the «Launch last external tool» command in Flex Builder to a key combo. Now things run pretty smooth and as much satisfying as compiling via Flash can be. Btw, I also looked into this Eclipse plugin – as it seems the only thing it does is to tell Flash to «Test Movie» with the frontmost open document. That's absolutely okay for most people, but I'm glad for the extra functionality I get with this solution (at the cost of more initial effort of course). Download here the modified FlashCommand: <a class="download" href='http://blog.betabong.com/wp-content/uploads/2008/12/flashcommand.zip'>flashcommand.zip</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>144</wp:post_id>
		<wp:post_date>2008-11-29 13:12:43</wp:post_date>
		<wp:post_date_gmt>2008-11-29 12:12:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>flex-builder-t-flash-ide</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="actionscript"><![CDATA[Actionscript]]></category>
		<category domain="post_tag" nicename="actionscript"><![CDATA[Actionscript]]></category>
		<category domain="post_tag" nicename="cs4"><![CDATA[CS4]]></category>
		<category domain="post_tag" nicename="flash"><![CDATA[flash]]></category>
		<category domain="category" nicename="flex"><![CDATA[Flex]]></category>
		<category domain="post_tag" nicename="flex"><![CDATA[Flex]]></category>
		<category domain="post_tag" nicename="install"><![CDATA[Install]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>17</wp:comment_id>
			<wp:comment_author><![CDATA[Andres Garcia]]></wp:comment_author>
			<wp:comment_author_email>andres@zemoga.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.zemoga.com</wp:comment_author_url>
			<wp:comment_author_IP>190.84.94.148</wp:comment_author_IP>
			<wp:comment_date>2009-01-11 05:18:05</wp:comment_date>
			<wp:comment_date_gmt>2009-01-11 04:18:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi, maybe should be useful to add these lines:
shellCommand = "open \"" + outputPath + "\""
os.system(shellCommand) 

To the Mike Chambers Phyton file. That way the generated swf file opens in case that you need a similar functionality as in "Publish Preview"]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>18</wp:comment_id>
			<wp:comment_author><![CDATA[Andres Garcia]]></wp:comment_author>
			<wp:comment_author_email>andres@zemoga.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.zemoga.com</wp:comment_author_url>
			<wp:comment_author_IP>190.84.94.148</wp:comment_author_IP>
			<wp:comment_date>2009-01-11 05:58:07</wp:comment_date>
			<wp:comment_date_gmt>2009-01-11 04:58:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Or, just adding this line in the temporary jsfl file in the phyton file:
jsfl.append("doc.testMovie();\n")]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>44</wp:comment_id>
			<wp:comment_author><![CDATA[Kirill]]></wp:comment_author>
			<wp:comment_author_email>kirill@kirillam.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>99.233.210.47</wp:comment_author_IP>
			<wp:comment_date>2009-05-30 12:36:04</wp:comment_date>
			<wp:comment_date_gmt>2009-05-30 11:36:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[We did something similar in our office. But we launch flash directly from Ant instead of requiring python, using the open command on the Mac which on Leopard has flags for using the already opened instance of Flash or starting a new one, as well as making flash open below everything so it doesn't steal focus as you're doing something else. We support Windows too since a lot of our contractors use it as well as our clients, but on windows we had a hard time getting the Windows open command to work on files with spaces in them through Ant's exec task. So we ended up specifying the temporary jsfl file as the command to launch Flash on windows.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
				<title>Test Movie from Flex to Flash (easy way)</title>
		<link>http://blog.betabong.com/2008/12/03/test-movie-from-flex-to-flash-easy-way/</link>
		<pubDate>Wed, 03 Dec 2008 11:23:33 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?p=154</guid>
		<description></description>
		<content:encoded><![CDATA[I figured a much much easier (<a href="http://blog.betabong.com/2008/11/29/flex-builder-t-flash-ide">compared to this</a>) way to trigger Test Movie in Flash IDE from within Flex. What you'll still need is Ant (<a href="http://blog.jodybrewster.net/2008/04/09/installing-ant-in-flex-builder-3/">here's how to install</a>), but that's all you gonna need apart from Flex Builder and Flash. That's the simplest ant build file to achieve this:

<pre lang="xml">
<?xml version="1.0" encoding="UTF-8"?>
<project name="Publish" default="Publish" basedir="./">
	<!-- project specifics -->
	<target name="Publish">
		<concat destfile="build.jsfl">
			fl.getDocumentDOM().testMovie();
		</concat>
		<exec executable="open" failonerror="true" logerror="true">
			<arg line="build.jsfl" />
		</exec>
		<delete file="build.jsfl" />
	</target>
</project>
</pre>

This tests the frontmost document in Flash IDE. (basically what does <a href="http://theflashblog.com/?p=482">this plugin</a>). Tested on Mac OS X 10.5.5 with Flex Builder Pro 3.0.2 and Flash CS4.

No need for <a href="http://www.mikechambers.com/blog/2008/05/02/flashcommand-for-os-x-updated-to-work-with-flash-cs3/">FlashCommand</a>. No need to alter the file for other projects. Just a super easy file for people with not too many requirements. 

You can still go more advanced with something like that:
<!--more-->

<pre lang="xml">
<?xml version="1.0" encoding="UTF-8"?>
<project name="Build Project" default="Publish and Test" basedir="../">
	<!-- common -->
	<property name="browser" value="Safari"/>
	<property name="log.path" value="${user.home}/Library/Preferences/Macromedia/Flash Player/Logs/flashlog.txt"/>

	<!-- project specifics -->
	<property name="fla.path" value="${basedir}/main.fla"/>
	<property name="swf.path" value="${basedir}/result.swf"/>
	<property name="test.path" value="http://localhost/projects/test/index.html" />

	<target name="Publish and Test">
		<antcall target="Publish"/>
		<antcall target="Clear Log"/>
		<antcall target="Open in Browser"/>
	</target>

	<!-- publish swf -->
	<target name="Publish">
		<concat destfile="build.jsfl">
			var sourceFile = "#FLA#";
			var outputFile = "#SWF#";
			var doc = fl.getDocumentDOM();
			if ( !doc || sourceFile.indexOf( doc.path ) &lt; 0 ) {
				doc = fl.openDocument(sourceFile);
			}
			doc.exportSWF(outputFile, true);
			<filterchain>
				<replacetokens begintoken="#" endtoken="#">
					<token key="FLA" value="file:///${fla.path}"/>
					<token key="SWF" value="file:///${swf.path}"/>
				</replacetokens>
			</filterchain>
		</concat>
		<exec executable="open" failonerror="true" logerror="true">
			<arg line="build.jsfl" />
		</exec>
		<delete file="build.jsfl" />
	</target>
	
	
	<!-- Open in local browser -->
	<target name="Open in Browser">
		<exec executable="open">
			<arg line="-a ${browser} ${test.path}" />
		</exec>
	</target>
	
	<!-- Clear Debug Log -->
	<target name="Clear Log">
		<concat destfile="${log.path}">                                                                                                            
		.: Sev Log File :.
		
</concat>
		<exec executable="open">
			<arg line="-a console '${log.path}'" />
		</exec>
	</target>
	
</project>
</pre>

This has pretty much the same results as <a href="http://blog.betabong.com/2008/11/29/flex-builder-t-flash-ide/">posted here</a>.

I have created a Flex Project that contains all necessary files (fla, main class, build file). Just download and import into Flex:

<a class="download" href='http://blog.betabong.com/wp-content/uploads/2008/12/flaproject.zip'> Download Flex Project</a>

<strong>Update: </strong>Mirko Sablijic sent me a Hello World project for Windows (he runs Vista):

<a class="download" href='http://blog.betabong.com/wp-content/uploads/2008/12/helloworld.zip'>Download Flex Project (Windows)</a>

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>154</wp:post_id>
		<wp:post_date>2008-12-03 12:23:33</wp:post_date>
		<wp:post_date_gmt>2008-12-03 11:23:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>test-movie-from-flex-to-flash-easy-way</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="ant"><![CDATA[Ant]]></category>
		<category domain="post_tag" nicename="eclipse"><![CDATA[eclipse]]></category>
		<category domain="post_tag" nicename="flash"><![CDATA[flash]]></category>
		<category domain="category" nicename="flex"><![CDATA[Flex]]></category>
		<category domain="post_tag" nicename="flex-builder"><![CDATA[Flex Builder]]></category>
		<category domain="category" nicename="tech"><![CDATA[Frontend]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>9</wp:comment_id>
			<wp:comment_author><![CDATA[psych]]></wp:comment_author>
			<wp:comment_author_email>msabljic@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>93.138.33.148</wp:comment_author_IP>
			<wp:comment_date>2008-12-04 21:27:19</wp:comment_date>
			<wp:comment_date_gmt>2008-12-04 20:27:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi,

I tried running the example build file with ant but got the following error:

CreateProcess: open build.jsfl error=2

Any idea what might be wrong?

thanks]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>10</wp:comment_id>
			<wp:comment_author><![CDATA[betabong]]></wp:comment_author>
			<wp:comment_author_email>sklaus@betabong.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.betabong.com</wp:comment_author_url>
			<wp:comment_author_IP>84.75.23.185</wp:comment_author_IP>
			<wp:comment_date>2008-12-05 05:32:22</wp:comment_date>
			<wp:comment_date_gmt>2008-12-05 04:32:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[That means the file build.jsfl can't be found. My only spontaneous idea would be that it's already been removed, or never been written (though in the last case you should have gotten an error at the concat command). Is this reproducable, does it happen every time?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>3</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>11</wp:comment_id>
			<wp:comment_author><![CDATA[psych]]></wp:comment_author>
			<wp:comment_author_email>msabljic@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>93.138.61.238</wp:comment_author_IP>
			<wp:comment_date>2008-12-06 13:57:28</wp:comment_date>
			<wp:comment_date_gmt>2008-12-06 12:57:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I think i found what's causing the problem, it seams to be 'path' related. If i just display the value of the ${fla.path} ant variable i get the correct path:

${fla.path}

displays in my example:

C:\Users\Mirko\workspace\Flex\HelloWorld\HelloWorld.fla

which is correct,but in the jsfl part:

var sourceFile = "#FLA#";

if i trace the sourceFile value:

fl.trace(sourceFile);

i get the following malformed (without '\') path:

C:UsersMirkoworkspaceFlexHelloWorldHelloWorld.fla

So i am not sure why this happens :/ I am using FB 3 and Flash CS4 IDE on Vista OS. Any ideas?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>12</wp:comment_id>
			<wp:comment_author><![CDATA[betabong]]></wp:comment_author>
			<wp:comment_author_email>sklaus@betabong.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.betabong.com</wp:comment_author_url>
			<wp:comment_author_IP>84.75.23.185</wp:comment_author_IP>
			<wp:comment_date>2008-12-06 14:11:11</wp:comment_date>
			<wp:comment_date_gmt>2008-12-06 13:11:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yeah, it's about the back slashes – in javascript they'll be interpreted as special characters (like \t for tab or \r for carriage return). Try adding two backslashes (\\ will become \): C:\\Users\\Mirko\\workspace\\Flex\\HelloWorld\\HelloWorld.fla

That should do the trick. I'm not sure though about the command line stuff in windows - wether it behaves the same as in OS X (which after all is a unix system).

Let us know if you're lucky – I'm sure there are other win users trying to achieve this.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>3</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>26</wp:comment_id>
			<wp:comment_author><![CDATA[Riccardo Bartoli]]></wp:comment_author>
			<wp:comment_author_email>info@rblab.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.rblab.com/blog/</wp:comment_author_url>
			<wp:comment_author_IP>90.192.223.115</wp:comment_author_IP>
			<wp:comment_date>2009-03-15 21:35:20</wp:comment_date>
			<wp:comment_date_gmt>2009-03-15 20:35:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Why are you using the  tag?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>77</wp:comment_id>
			<wp:comment_author><![CDATA[Jeff]]></wp:comment_author>
			<wp:comment_author_email>jeff@jeffguthrie.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>67.129.98.254</wp:comment_author_IP>
			<wp:comment_date>2010-02-01 19:47:10</wp:comment_date>
			<wp:comment_date_gmt>2010-02-01 18:47:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I downloaded your flex project and tried to run it on a mac but when I launch the Publish command it switches to Flash (cs4) but doesnt launch it.  

Also the Document Class for main.fla doesnt match up with Main.as...

Thanks!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
				<title>Test Flex/Flash throttled (aka Simulate Download)</title>
		<link>http://blog.betabong.com/2008/12/06/test-flex-throttled-simulate-download/</link>
		<pubDate>Sat, 06 Dec 2008 15:52:55 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?p=161</guid>
		<description></description>
		<content:encoded><![CDATA[Most of the Flash application deal with server side data like images, xml files etc. We tend to forget about that because the default Run or Debug commands in Flex will open a local html file (and also because we developers often have quite a nice internet connection when testing remotely). Thus all data is loaded nearly instantely.

In Flash we have a menu command called <strong>«Simulate Download»</strong> to see how things run at different bandwidth situations. <strong>But how to achieve this in Flex?</strong>

I've been using Sloppy for a long time. It's little java app that can be started via a simple web click. It's really easy to use and does very well what it does. For debugging your app (your flash website) throttled in Flex Builder simply follow these steps:

 
<ol>
	<li><a href="http://www.dallaway.com/sloppy/">Open the <strong>Sloppy website</strong></a></li>
	<li>Click the little <strong>Sloppy icon</strong>:
<a href="http://blog.betabong.com/wp-content/uploads/2008/12/picture-10.png"><img class="alignnone size-full wp-image-162" title="picture-10" src="http://blog.betabong.com/wp-content/uploads/2008/12/picture-10.png" alt="" width="233" height="41" />
</a></li>
	<li>A «sloppy.jnlp» file is downloaded. <strong>Open it</strong> if doesn't open automatically.</li>
	<li>The actual application will be downloaded and started. If it asks you to trust: <strong>trust!</strong> :-)</li>
	<li><strong>Enter the address</strong> of your html file in the bin-debug or bin-release folder. It should be a webserver address. I usually create a <a href="http://www.macupdate.com/info.php/id/10433/symboliclinker">symbolic link</a> of my project directory and put it into my local webserver directory.
<a href="http://blog.betabong.com/wp-content/uploads/2008/12/picture-11.png"></a><a href="http://blog.betabong.com/wp-content/uploads/2008/12/picture-11.png"><img class="alignnone size-full wp-image-163" title="picture-11" src="http://blog.betabong.com/wp-content/uploads/2008/12/picture-11.png" alt="" width="501" height="453" /></a></li>
	<li><strong>Click «Go»</strong> – this will start the Sloppy proxy and open the page in your default browser. </li>
	<li><strong>Copy the address</strong> from the browser window (usually http://127.0.0.1:7569/your/path)
<a href="http://blog.betabong.com/wp-content/uploads/2008/12/picture-12.png"><img class="alignnone size-full wp-image-164" title="picture-12" src="http://blog.betabong.com/wp-content/uploads/2008/12/picture-12.png" alt="" width="375" height="34" /></a></li>
	<li>You may close the window. Go to Flex Builder and <strong>open the project properties</strong> (right click on project folder, last item). In an Actionscript Project, switch to ActionScript Build Path.
<a href="http://blog.betabong.com/wp-content/uploads/2008/12/picture-14.png"><img class="alignnone size-medium wp-image-165" title="picture-14" src="http://blog.betabong.com/wp-content/uploads/2008/12/picture-14-300x289.png" alt="" width="300" height="289" /></a> </li>
	<li>Enter the copied address into <strong>«Output folder URL»</strong>, clear the html name (e.g. App.html).
<a href="http://blog.betabong.com/wp-content/uploads/2008/12/picture-15.png"><img class="alignnone size-full wp-image-166" title="picture-15" src="http://blog.betabong.com/wp-content/uploads/2008/12/picture-15.png" alt="" width="423" height="40" /></a></li>
	<li>Click «OK» and <strong>you're done</strong>. You can now Run and Debug as if your website was hosted on some server and you had a 256K ADSL connection (instead of your T1).</li>
</ol>
Note: I tried to automate the whole thing (with Ant of course) and succeeded to a certain limit. What I did was download <a href="http://code.google.com/p/sloppy/">Sloopy's source code</a> (java), modify it so it can handle more terminal attributes and build the  .jar file. This can be run on command line, which will start the sloopy server. So I created an ant file that does all that for me, but this ant file would only be cool, if it could also trigger the run or debug commands and modify the output folder url. I haven't found a way (at least not a satisfying one) to do this, so I might just follow the manual street for once ;)

Another note: If you are windows user, you might wanna try this Firefox plugin: <a href="https://addons.mozilla.org/en-US/firefox/addon/5917">Firefox Throttle</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>161</wp:post_id>
		<wp:post_date>2008-12-06 16:52:55</wp:post_date>
		<wp:post_date_gmt>2008-12-06 15:52:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>test-flex-throttled-simulate-download</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="browser"><![CDATA[Browser]]></category>
		<category domain="post_tag" nicename="debug"><![CDATA[Debug]]></category>
		<category domain="post_tag" nicename="flash"><![CDATA[flash]]></category>
		<category domain="category" nicename="flex"><![CDATA[Flex]]></category>
		<category domain="post_tag" nicename="flex-builder"><![CDATA[Flex Builder]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>13</wp:comment_id>
			<wp:comment_author><![CDATA[brandy]]></wp:comment_author>
			<wp:comment_author_email>brandy+betabong@nightstand.org</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>66.92.75.37</wp:comment_author_IP>
			<wp:comment_date>2008-12-15 23:13:11</wp:comment_date>
			<wp:comment_date_gmt>2008-12-15 22:13:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Firefox Throttle doesn't work with localhost, sadly.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>20</wp:comment_id>
			<wp:comment_author><![CDATA[Oliver]]></wp:comment_author>
			<wp:comment_author_email>olly.turner@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>24.201.185.130</wp:comment_author_IP>
			<wp:comment_date>2009-01-16 00:12:28</wp:comment_date>
			<wp:comment_date_gmt>2009-01-15 23:12:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[There's nothing quite as useful as Charles IMHO... quite wonderful

http://www.charlesproxy.com/]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>24</wp:comment_id>
			<wp:comment_author><![CDATA[Geoff]]></wp:comment_author>
			<wp:comment_author_email>geoff.dm@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mediavan.be</wp:comment_author_url>
			<wp:comment_author_IP>213.246.205.130</wp:comment_author_IP>
			<wp:comment_date>2009-03-06 11:17:24</wp:comment_date>
			<wp:comment_date_gmt>2009-03-06 10:17:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@ Oliver, I have to agree on that one. Charles is one of my favourite pieces of software that I just during Flex / Flash development! It's just great and working perfectly. 
cheers
geoff]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80</wp:comment_id>
			<wp:comment_author><![CDATA[Ranoka]]></wp:comment_author>
			<wp:comment_author_email>ranoka@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>93.97.0.215</wp:comment_author_IP>
			<wp:comment_date>2010-03-06 19:30:32</wp:comment_date>
			<wp:comment_date_gmt>2010-03-06 18:30:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This worked really well for me. I used MAMP to set up my local server, which was easy. Sloppy is a great little app, and symboliclinker works great too.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
				<title>CoverFlow: 3D with Flash Player 10</title>
		<link>http://blog.betabong.com/2008/12/08/coverflow-3d-with-flash-player-10/</link>
		<pubDate>Mon, 08 Dec 2008 21:55:26 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?p=172</guid>
		<description></description>
		<content:encoded><![CDATA[I'm close to finishing a new project. Well, it's actually not that new of a project, but it hasn't gone online so far, and when I did the first version back in March I've used <strong>Papervision</strong> to achieve the goals. It's basically a simple CoverFlow effect to scroll through Logos.

The thing with the old Papervision version was.. it got pretty slow when loading many pictures (resulting in many 3d objects). I got briefed with a screen design more or less and expected much less elements to be loaded. Now they got back to me saying they had some problems. Oh yes, they had. Boy was it slow!!

So I did a new version, skipping Papervision for the <strong>new Flash Player 10 </strong>capabilities. Wow! What an improvement not only in <strong>speed</strong>, but also in <strong>quality</strong> (because I wouldn't have to switch to crispy bitmap handling for acceptable speed - and Flash doesn't provide that feature anyway) and <strong>file size</strong> (less than 25%!). Now I just hope that the end client will have the nuts to go with Flash Player 10 :-) (Adobe still doesn't provide any <a href="http://www.adobe.com/products/player_census/flashplayer/version_penetration.html">statistics</a>, but it's not that wide spread yet as for now).

See here the result (still in development – click the picture). You'll need Flash Player 10 (I don't check for the version in this example):

<a href="http://www.betabong.com/work/nose/globusflow2/GlobusFlow2.html" target="_blank"><img class="alignnone size-full wp-image-173" title="coverflow" src="http://blog.betabong.com/wp-content/uploads/2008/12/coverflow.jpg" alt="" width="512" height="204" /></a>

I made use of <a href="http://theflashblog.com/?p=470">SimpleZSorter</a>

<strong>Update:</strong> Well, the client wouldn't go with 10. So I had to recode the Papervision version to speed it up as much as possible, and I think it got pretty speedy after all. <a href="http://www.betabong.com/work/nose/globusflow-pv3d/" target="_blank">See here for comparison.</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>172</wp:post_id>
		<wp:post_date>2008-12-08 22:55:26</wp:post_date>
		<wp:post_date_gmt>2008-12-08 21:55:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>coverflow-3d-with-flash-player-10</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="3d"><![CDATA[3d]]></category>
		<category domain="category" nicename="actionscript"><![CDATA[Actionscript]]></category>
		<category domain="post_tag" nicename="as3"><![CDATA[AS3]]></category>
		<category domain="post_tag" nicename="flash-10"><![CDATA[Flash 10]]></category>
		<category domain="category" nicename="tech"><![CDATA[Frontend]]></category>
		<category domain="post_tag" nicename="project"><![CDATA[project]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>21</wp:comment_id>
			<wp:comment_author><![CDATA[Rich]]></wp:comment_author>
			<wp:comment_author_email>thatkidrich@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>64.154.26.248</wp:comment_author_IP>
			<wp:comment_date>2009-01-23 18:55:35</wp:comment_date>
			<wp:comment_date_gmt>2009-01-23 17:55:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey,
I LOVED the FP10 version.  Is there anyway you would post a tutorial on how to make one?  I have been looking everywhere, and I can't seem to find one.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>48</wp:comment_id>
			<wp:comment_author><![CDATA[Brett]]></wp:comment_author>
			<wp:comment_author_email>brett@ducksoupdesign.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>82.152.219.220</wp:comment_author_IP>
			<wp:comment_date>2009-06-08 12:03:43</wp:comment_date>
			<wp:comment_date_gmt>2009-06-08 11:03:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey, this is by far the best cover flow I've seen. Is there any chance you'd be willing to put up your FLA?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>50</wp:comment_id>
			<wp:comment_author><![CDATA[Sergio]]></wp:comment_author>
			<wp:comment_author_email>sergio@flexdoc.com.br</wp:comment_author_email>
			<wp:comment_author_url>http://www.flexdoc.com.br</wp:comment_author_url>
			<wp:comment_author_IP>189.27.45.166</wp:comment_author_IP>
			<wp:comment_date>2009-07-15 13:13:50</wp:comment_date>
			<wp:comment_date_gmt>2009-07-15 12:13:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi,

I'm a member of a Brazilian software company and that component would be so good for us.

Will you publish the source? If not, would you sell this component for us?

Thanks!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>52</wp:comment_id>
			<wp:comment_author><![CDATA[Joshua White]]></wp:comment_author>
			<wp:comment_author_email>joshbwhite@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://jibwa.com</wp:comment_author_url>
			<wp:comment_author_IP>174.18.244.72</wp:comment_author_IP>
			<wp:comment_date>2009-08-14 21:14:02</wp:comment_date>
			<wp:comment_date_gmt>2009-08-14 20:14:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I am really curious to see the source. I need to do a similar implementation and I got my client to agree to flash 10 for it. I'm starting to write one of my own, but I'm pretty new to the flex 4 libraries.

Thanks for any help!
-Josh]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>128</wp:comment_id>
			<wp:comment_author><![CDATA[Ivan]]></wp:comment_author>
			<wp:comment_author_email>ivan.roth@free.fr</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>82.229.45.190</wp:comment_author_IP>
			<wp:comment_date>2010-08-05 10:33:32</wp:comment_date>
			<wp:comment_date_gmt>2010-08-05 09:33:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi,

This coverflow looks great! Did you finish it? Will you distribute it?

Regards,
Ivan]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>169</wp:comment_id>
			<wp:comment_author><![CDATA[Antuan Ochomma]]></wp:comment_author>
			<wp:comment_author_email>antoshik81@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>67.169.12.73</wp:comment_author_IP>
			<wp:comment_date>2010-11-16 14:25:49</wp:comment_date>
			<wp:comment_date_gmt>2010-11-16 13:25:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi there, you have a very nice coverflow implementation, is there any way i could use this module on my home page? How much would it cost? I'm very interested, thank you so much for your time brother!

Best regards, Antuan.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
				<title>VW Microbus Concept. Why not?</title>
		<link>http://blog.betabong.com/2008/12/09/vw-microbus-concept-why-not/</link>
		<pubDate>Tue, 09 Dec 2008 13:01:36 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?p=175</guid>
		<description></description>
		<content:encoded><![CDATA[When I first saw – years ago – a pic of this <a href="http://en.wikipedia.org/wiki/Volkswagen_Microbus_Concept">concept car</a>, I thought yeah, that may be the right direction, intelligent design with a subtle retro touch (just linking to its <a href="http://en.wikipedia.org/wiki/Volkswagen_Microbus">successful history</a>, I'd say). But they've never actually built it. And I wonder why..

<a href="http://blog.betabong.com/wp-content/uploads/2008/12/2001-vw-microbus-concept-side-1280x960.jpg"><img class="alignnone size-full wp-image-176" title="2001-vw-microbus-concept-side-1280x960" src="http://blog.betabong.com/wp-content/uploads/2008/12/2001-vw-microbus-concept-side-1280x960.jpg" alt="" width="512" height="384" /></a>
<!--more-->
<a href="http://blog.betabong.com/wp-content/uploads/2008/12/torqueomata2916.jpg"><img class="alignnone size-full wp-image-177" title="torqueomata2916" src="http://blog.betabong.com/wp-content/uploads/2008/12/torqueomata2916.jpg" alt="" width="512" height="384" /></a>

<a href="http://blog.betabong.com/wp-content/uploads/2008/12/torqueomata2912.jpg"><img class="alignnone size-full wp-image-178" title="torqueomata2912" src="http://blog.betabong.com/wp-content/uploads/2008/12/torqueomata2912.jpg" alt="" width="512" height="384" /></a>

<object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="512" height="385" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="allowFullScreen" value="true" /><param name="allowscriptaccess" value="always" /><param name="src" value="http://www.youtube.com/v/Y18IaolWYcc&amp;hl=en&amp;fs=1" /><embed type="application/x-shockwave-flash" width="512" height="385" src="http://www.youtube.com/v/Y18IaolWYcc&amp;hl=en&amp;fs=1" allowscriptaccess="always" allowfullscreen="true"></embed></object>

<object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="512" height="385" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="allowFullScreen" value="true" /><param name="allowscriptaccess" value="always" /><param name="src" value="http://www.youtube.com/v/RR4SHPiuaE4&amp;hl=en&amp;fs=1" /><embed type="application/x-shockwave-flash" width="512" height="385" src="http://www.youtube.com/v/RR4SHPiuaE4&amp;hl=en&amp;fs=1" allowscriptaccess="always" allowfullscreen="true"></embed></object>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>175</wp:post_id>
		<wp:post_date>2008-12-09 14:01:36</wp:post_date>
		<wp:post_date_gmt>2008-12-09 13:01:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>vw-microbus-concept-why-not</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="car"><![CDATA[car]]></category>
		<category domain="category" nicename="design-random"><![CDATA[Design]]></category>
		<category domain="category" nicename="random"><![CDATA[Random]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Get rid of build_hd_index</title>
		<link>http://blog.betabong.com/2009/01/26/get-rid-of-build_hd_index/</link>
		<pubDate>Mon, 26 Jan 2009 00:07:12 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?p=184</guid>
		<description></description>
		<content:encoded><![CDATA[If you ever have accessed your Mac with Remote Desktop, your Mac probably got a sickness out of it. A process named build_hd_index will be running on a regular basis. Very regular. Much too often! And if you have, like me, a lot of hard drive space, build_hd_index will have to do a lot, because it's aim is to index each and every file on each and every hard drive. So I read, at least.

Whatsoever, this process made me sick. My once silent Mac was like on Kokain: hard drive noise accompanied by a respectable cpu usage (about 40%, and hey, I have eight horses drawing my carriage after all).  <a href="http://www.youtube.com/watch?v=9932Q2u7ziI">Addicted</a> to indexing! It made me crazy! Now I got rid of it (again actually, System updates can bring the <a href="http://devnevyn.livejournal.com/3558.html">devil</a> back  that's why I need to write that down if it's just for myself).
<h3>How to stop it</h3>
Here's a simple terminal todo - open up your terminal and enter line after line:
<pre lang="text">sudo chmod a-x /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Support/build_hd_index
sudo rm /Library/Preferences/com.apple.ARDAgent
sudo rm /var/db/RemoteManagement/caches/filesystem.cache</pre>
For newbies: After the first sudo, enter your admin password (usually your password you use for installation etc.). If you're asked wether you want to overwrite/overrule something, type «yes» and press Enter.

So what is this doing? Line by line:
<ol>
	<li><strong>sudo chmod a-x /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Support/build_hd_index</strong>
Changes the right of devil script named build_hd_index so it can't be executed anymore</li>
	<li><strong>sudo rm /Library/Preferences/com.apple.ARDAgent</strong>
Gets rid of the Apple Remote Desktop preferences file which should have stored wether your system should run build_hd_index</li>
	<li><strong>sudo rm /var/db/RemoteManagement/caches/filesystem.cache</strong>
Removes the cache file produced by build_hd_index (mine was over 6 GB!) </li>
</ol>
There are other things you could do, like <a href="http://chealion.ca/2008/09/build_hd_index/">unchecking some option in the accessing Remote Desktop</a>. This might work for you, it didn't for me. And I don't want to care anymore about it. After all, what's its use?! To be able to search for files via Remote Desktop the old Tiger way?! I don't know.. but I know that I never ever need this. It has nothing to do with Spotlight, and it has nothing to do with locate (Terminal command). And my Mac's so very much calmer now. It went to <a href="http://www.youtube.com/watch?v=RKVbgkfFygY">rehab</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>184</wp:post_id>
		<wp:post_date>2009-01-26 01:07:12</wp:post_date>
		<wp:post_date_gmt>2009-01-26 00:07:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>get-rid-of-build_hd_index</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="mac"><![CDATA[Mac]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>69</wp:comment_id>
			<wp:comment_author><![CDATA[liborio]]></wp:comment_author>
			<wp:comment_author_email>asdas|@asdas.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>83.60.181.99</wp:comment_author_IP>
			<wp:comment_date>2009-09-30 23:21:55</wp:comment_date>
			<wp:comment_date_gmt>2009-09-30 22:21:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[you are SOOO big!!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>218</wp:comment_id>
			<wp:comment_author><![CDATA[dr3do]]></wp:comment_author>
			<wp:comment_author_email>honeypot@dr3do.me</wp:comment_author_email>
			<wp:comment_author_url>http://dr3do.me</wp:comment_author_url>
			<wp:comment_author_IP>138.188.24.241</wp:comment_author_IP>
			<wp:comment_date>2011-03-18 17:51:23</wp:comment_date>
			<wp:comment_date_gmt>2011-03-18 16:51:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for this hint! :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
				<title>Embed Assets in Flash Project</title>
		<link>http://blog.betabong.com/2009/02/13/embed-assets-in-flash-project/</link>
		<pubDate>Fri, 13 Feb 2009 13:00:18 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?p=190</guid>
		<description></description>
		<content:encoded><![CDATA[There's still quite a gap between Flash and Flex – while Flash is great for creating animations, vector symbols and just keeping little assets within one place, Flex Builder is so very much better for anything code. So how to link those two together?

Though I've written some posts about how to code within Flex Builder and <a href="/2008/12/03/test-movie-from-flex-to-flash-easy-way/">compile from there using Flash IDE</a>, I personally don't like that at all and only use it for some few older AS3 projects. There are better methods, ways to compile from within Flex Builder while still being able to make use of Flash comfort.

There's a neat way to <strong>embed a library</strong> without loosing any functionality (like little scripts). I've first seen it at <a href="http://www.gskinner.com/blog/archives/2007/03/using_flash_sym.html">Grant Skinner</a> (who's doing great stuff, one of my favorites in the flash community really). Let's say, you have a assets.fla and a published assets.swf. Now here we go:<!--more-->

<pre lang="actionscript">
[SWF(width="750", height="500", frameRate="30", backgroundColor="#111111")]
dynamic public class MyApplication extends Sprite
{
	
	[Embed(source="assets/assets.swf", mimeType="application/octet-stream")]
	public var StageAssets:Class;
	
	public function GlobusFlow()
	{
		loadEmbedded( StageAssets );
	}

	public function loadEmbedded( cls : Class ) : void {
		trace( "[Preloader] Loading embedded" );
		var loader : Loader = new Loader();
		loader.contentLoaderInfo.addEventListener( Event.COMPLETE , this.handleComplete );
		var context : LoaderContext = new LoaderContext( false , ApplicationDomain.currentDomain );
		loader.loadBytes( new cls() , context );
	}

	protected function handleComplete( e : Event ) : void {
		var app : Sprite = Sprite( LoaderInfo( e.target ).content );
		this.loaded( app );
	}
	
	protected function loaded(target:Sprite):void {
		var background : MovieClip = target as MovieClip;
					
		var mainChildren : Array = [];
		for ( var i:int = 0 ; i<background.numChildren ; i++ ) {
			mainChildren.push( background.getChildAt(i) );
		}
		for each ( var child : DisplayObject in mainChildren ) {
			if ( child.name ) {
				this[ child.name ] = child;
			}
			this.addChild( child );
		}
		
		stage.stageWidth = background.width;
		stage.stageHeight = background.height;
	}
}
</pre>

This does a bit more than just make the library available. In loaded() we'll loop through all assets that are «on stage» in the loaded/embedded movieclip (assets.swf), and add each of them to our stage. That leads to a state that's quite similar to as if we'd code within assets.fla itself. Hmm... well, really, that sounds more complicated than it is :-) It mainly gives you the feeling of being able to code within a SWF file. You can visually do your stuff in assets.fla, you can add a background and whatever to its stage, keep a nice library with graphics, animations, sounds and fonts.. and schwupps, here you go!

If you have Fonts embedded in your library, there's a tiny little more to do:

<pre lang="actionscript">
protected function loaded(target:Sprite):void {
	// ... (all the other stuff, see above)
	registerFont( 'BoldFont' );
}

public static function registerFont( fontLinkageId : String ) : void {
	var fontClass : Class = getDefinitionByName( fontLinkageId ) as Class;
	Font.registerFont( fontClass );
}
</pre>

If you just wanna embed fonts without any registering, you can also go like that:

<pre lang="actionscript">
[Embed(source='assets/fonts.swf' , symbol='BoldFont')]
public var BoldFont : Class;
</pre>

Of course, instead of embedding everything, you can also load this dynamically (I mean, after all we have the Loader ready, don't we? :) The advantage of that is that you can give your assets to some dumb Flasher and he can mess around with it without you having to recompile the app.

I know, this is all snippets and frickets, I'm just too lazy right now to build an example Flex project. Still I hope it's of some use for one or the other.



]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>190</wp:post_id>
		<wp:post_date>2009-02-13 14:00:18</wp:post_date>
		<wp:post_date_gmt>2009-02-13 13:00:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>embed-assets-in-flash-project</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="actionscript"><![CDATA[Actionscript]]></category>
		<category domain="post_tag" nicename="flash-ide"><![CDATA[Flash IDE]]></category>
		<category domain="category" nicename="flex"><![CDATA[Flex]]></category>
		<category domain="post_tag" nicename="flex-builder"><![CDATA[Flex Builder]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>45</wp:comment_id>
			<wp:comment_author><![CDATA[Kirill]]></wp:comment_author>
			<wp:comment_author_email>kirill@kirillam.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>99.233.210.47</wp:comment_author_IP>
			<wp:comment_date>2009-05-30 13:06:23</wp:comment_date>
			<wp:comment_date_gmt>2009-05-30 12:06:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[One thing I don't like about this is that the code is tightly-bound to the graphics, which makes dynamic skinning somewhat of a pain. Imagine having several kinds of buttons in your application. Using this approach you have to create a class for each of them (at least to embed the swf, the main button logic can be put into the superclass). In terms of code having to create a subclass just to embed a different swf? Ehhh... 

What we ended up doing is having a pretty good asset loading engine take care of loading the required swfs at run time and then in the application logic pulling out the needed graphics from its ApplicationDomain. That way you only need one class for a button. The button skin is loaded dynamically at run time as opposed to be hardwired into it at compile time. This also allows for on the fly skinning of the button while the application is running. Another advantage of this is that we didn't make our framework+applications dependent on one kind of compiler. If somebody in the future makes a better compiler than mxmlc (and that's easily possibly with lack of some important compiler functionality on part of mxmlc) and decides to change the syntax of all those compiler directives or not implement them at all, then using your and Grant's approach you're out of luck and have to continue to use the crappy, old mxmlc compiler. As opposed to our approach with which the better compiler can be used instead and the application will still function like it did.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>46</wp:comment_id>
			<wp:comment_author><![CDATA[Sev]]></wp:comment_author>
			<wp:comment_author_email>betabong@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>84.75.20.149</wp:comment_author_IP>
			<wp:comment_date>2009-06-02 09:39:01</wp:comment_date>
			<wp:comment_date_gmt>2009-06-02 08:39:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Just to clarify, this really isn't some kind of standard method "how you should do it" or "how I usually do it". It's just a technique, and like most techniques, this one can be useful too for specific needs (in my case it was for an easy conversion of an older fla-project into flex, without having to redesign too much).

Also I want to mention that, no, you don't need a class for each one of the loaded assets (for each button, graphic, movieclip etc.) That's the whole point: you instead embed the library, and then you're able to access any asset within that embedded library, as if you'd loaded it dynamically into your Application Domain.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>64</wp:comment_id>
			<wp:comment_author><![CDATA[Markavian]]></wp:comment_author>
			<wp:comment_author_email>betabong@mkv25.net</wp:comment_author_email>
			<wp:comment_author_url>http://mkv25.net/</wp:comment_author_url>
			<wp:comment_author_IP>89.242.2.119</wp:comment_author_IP>
			<wp:comment_date>2009-08-27 17:42:08</wp:comment_date>
			<wp:comment_date_gmt>2009-08-27 16:42:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I've been a flash develop for some 8 years now, and I'm constantly reviewing the way I work between the Flash IDE and pure AS3 to simplifying and separate layouts from code without causing myself too much work.

On the whole, its a hassle, with me ending up with named definitions in Flash IDE, the Flash Library and duplicate references in my code. As much as I'd like to create purely code based apps, some layouts are just impossible to reason about.

I like the look of above solution because it faithfully reproduces a flash layout in a purely AS3 program independent of the Flash IDE compiler. I shall investigate and see if it works for my current project.

At the moment I'm struggling because I don't think the Flash IDE Compiler understands:
	[Embed(source="GameAssets.swf", symbol="character_john")]
	public static var John:Class;
And so, this is a bit useless to me at the moment.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
				<title>CSS Alternative to Left Float</title>
		<link>http://blog.betabong.com/2009/02/25/css-alternative-to-left-float/</link>
		<pubDate>Wed, 25 Feb 2009 21:19:54 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?p=196</guid>
		<description></description>
		<content:encoded><![CDATA[I used to use float:left a lot for my layouts. But it can be a pain in the ass for several reasons – which of them the main may be that the surrounding box doesn't surround it (so you'd have to come up with some stupid clearfloat-hacks).

Anyway, I recently discovered somewhere a great alternative (you can call it hack too, but then everything a little fancy that's supposed to work with IE is a hack, isn't it?).

So while until now I'd have something like this:

<pre lang="css">
.inlinebox {
	float:  left;
	width: 49%;
	min-height: 100px;
}
</pre>

the new method goes like this:

<pre lang="css">
.inlinebox {
	display: -moz-inline-stack;
	display: inline-block;
	vertical-align: top;
	zoom: 1;
	*display: inline;
	width: 49%;
	min-height: 100px;
	_height: 100px;
}
</pre>

That's looks quite more complex. And it certainly is. But it works like a charm on all browsers I've tested (IE7, Safari, FF3). _height, zoom and *display are some crappy IE hacks obviously. The zoom attribute by the way is quite interesting, as it activates the hidden (IE only) CSS attribute hasLayout.

It also has some very nice benefits, like the alignement to the bottom...

<h3>Example</h3>
<a class="download" href='http://blog.betabong.com/wp-content/uploads/2009/02/example-inlineblock.html'  target="_blank">View Example</a>

<pre lang="html">
	<style type="text/css" media="screen">
		.codeexample span {
			background-color: #68B6FF;
			-webkit-box-reflect: below 1px -webkit-gradient(linear, left top, left bottom, from(transparent), color-stop(0.8, transparent), to(rgba(255, 255, 255, 0.8)));
			-moz-border-radius: 5px;
			-webkit-border-radius: 5px;
			margin-right: 10px;
			margin-bottom: 40px;
			width: 140px;
			padding: 10px;
		}
		.inlinebox1 {
			display: block;
			float:  left;
			min-height: 32px;
		}

		.inlinebox2 {
			display: -moz-inline-stack;
			display: inline-block;
			vertical-align: bottom;
			zoom: 1;
			*display: inline;
			min-height: 32px;
			_height: 32px;
		}
		
	</style>

	<div class="codeexample">
		<h3>Float: left</h3>
		<span class="inlinebox1">Inlinebox</span>
		<span class="inlinebox1">Inlinebox</span>
		<span class="inlinebox1">Inlinebox Inlinebox Inlinebox Inlinebox Inlinebox Inlinebox</span>
		<span class="inlinebox1">Inlinebox</span>
		<span class="inlinebox1">Inlinebox</span>
		<span class="inlinebox1">Inlinebox</span>
		<span class="inlinebox1">Inlinebox</span>

		<h3 style="clear: both;">Inline Block</h3>
		<span class="inlinebox2">Inlinebox</span>
		<span class="inlinebox2">Inlinebox</span>
		<span class="inlinebox2">Inlinebox Inlinebox Inlinebox Inlinebox Inlinebox Inlinebox</span>
		<span class="inlinebox2">Inlinebox</span>
		<span class="inlinebox2">Inlinebox</span>
		<span class="inlinebox2">Inlinebox</span>
		<span class="inlinebox2">Inlinebox</span>
	</div>
</pre>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>196</wp:post_id>
		<wp:post_date>2009-02-25 22:19:54</wp:post_date>
		<wp:post_date_gmt>2009-02-25 21:19:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>css-alternative-to-left-float</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="css"><![CDATA[css]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="category" nicename="random"><![CDATA[Random]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>22</wp:comment_id>
			<wp:comment_author><![CDATA[jens]]></wp:comment_author>
			<wp:comment_author_email>jonz@kybernaut.de</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>85.178.49.202</wp:comment_author_IP>
			<wp:comment_date>2009-02-26 11:06:57</wp:comment_date>
			<wp:comment_date_gmt>2009-02-26 10:06:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[great!
works also in opera and chrome and inlinebox2 even works down to IE4 (inlinebox1 doesn't work in IE4...).]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>27</wp:comment_id>
			<wp:comment_author><![CDATA[Umesh A]]></wp:comment_author>
			<wp:comment_author_email>aawte.umesh@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://sites.google.com/site/developersnotes/</wp:comment_author_url>
			<wp:comment_author_IP>115.109.14.20</wp:comment_author_IP>
			<wp:comment_date>2009-04-03 08:48:18</wp:comment_date>
			<wp:comment_date_gmt>2009-04-03 07:48:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks 
This is help full for me.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>32</wp:comment_id>
			<wp:comment_author><![CDATA[Tom West]]></wp:comment_author>
			<wp:comment_author_email>tom@eframedevelopment.com</wp:comment_author_email>
			<wp:comment_author_url>http://eframedevelopment.com</wp:comment_author_url>
			<wp:comment_author_IP>76.173.44.12</wp:comment_author_IP>
			<wp:comment_date>2009-04-10 22:32:35</wp:comment_date>
			<wp:comment_date_gmt>2009-04-10 21:32:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Worked like a charm! Thanks!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>74</wp:comment_id>
			<wp:comment_author><![CDATA[Levi Page]]></wp:comment_author>
			<wp:comment_author_email>lpage@qualitycube.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>97.100.170.226</wp:comment_author_IP>
			<wp:comment_date>2009-10-07 17:49:08</wp:comment_date>
			<wp:comment_date_gmt>2009-10-07 16:49:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You're a genius! Man this saved me.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>76</wp:comment_id>
			<wp:comment_author><![CDATA[A]]></wp:comment_author>
			<wp:comment_author_email>ali.taft@live.com</wp:comment_author_email>
			<wp:comment_author_url>http://whatshalliwatch.net</wp:comment_author_url>
			<wp:comment_author_IP>134.225.169.92</wp:comment_author_IP>
			<wp:comment_date>2010-01-12 03:57:20</wp:comment_date>
			<wp:comment_date_gmt>2010-01-12 02:57:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Awesome little hack, really is awesome.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>124</wp:comment_id>
			<wp:comment_author><![CDATA[Anurag Bhandari]]></wp:comment_author>
			<wp:comment_author_email>anurag.bhd@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://anuragbhandari.com</wp:comment_author_url>
			<wp:comment_author_IP>144.36.140.110</wp:comment_author_IP>
			<wp:comment_date>2010-07-19 10:28:21</wp:comment_date>
			<wp:comment_date_gmt>2010-07-19 09:28:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Worked perfectly!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>590</wp:comment_id>
			<wp:comment_author><![CDATA[Mario Arroyo]]></wp:comment_author>
			<wp:comment_author_email>marioarroyo.map@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://twitter.com/mtarroyo</wp:comment_author_url>
			<wp:comment_author_IP>201.92.126.223</wp:comment_author_IP>
			<wp:comment_date>2012-01-10 15:13:21</wp:comment_date>
			<wp:comment_date_gmt>2012-01-10 14:13:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You just saved my work! Thanks for that!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>538</wp:comment_id>
			<wp:comment_author><![CDATA[Christian]]></wp:comment_author>
			<wp:comment_author_email>chringle@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>62.242.2.194</wp:comment_author_IP>
			<wp:comment_date>2011-12-14 10:34:49</wp:comment_date>
			<wp:comment_date_gmt>2011-12-14 09:34:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks a lot for this very useful tip!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>755</wp:comment_id>
			<wp:comment_author><![CDATA[Boerma]]></wp:comment_author>
			<wp:comment_author_email>wnnd90@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>94.215.107.181</wp:comment_author_IP>
			<wp:comment_date>2012-03-08 20:02:47</wp:comment_date>
			<wp:comment_date_gmt>2012-03-08 19:02:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I love u man! Thanks a lot!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>3191</wp:comment_id>
			<wp:comment_author><![CDATA[Sunil Yadav]]></wp:comment_author>
			<wp:comment_author_email>sunilk.yadav@yahoo.co.in</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>182.72.46.222</wp:comment_author_IP>
			<wp:comment_date>2014-05-13 06:19:15</wp:comment_date>
			<wp:comment_date_gmt>2014-05-13 05:19:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Wow its working fine. I was having problem with "float:left".
This solution work perfectly.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
				<title>links for 2009-03-04</title>
		<link>http://blog.betabong.com/2009/03/05/links-for-2009-03-04/</link>
		<pubDate>Thu, 05 Mar 2009 01:04:51 +0000</pubDate>
		<dc:creator><![CDATA[delicious]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/2009/03/05/links-for-2009-03-04/</guid>
		<description></description>
		<content:encoded><![CDATA[<ul class="delicious"><li>
                <div class="delicious-link"><a href="http://www.macosxhints.com/article.php?story=20071025220746340">10.5: Easily change the location of your home directory</a></div>
                <div class="delicious-extended">I&#39;ve been looking for that. Might be a way for my desktop/mobile sync problem (I&#39;m either long term desktop or long term mobile, nothing parallel).</div>
                <div class="delicious-tags">(tags: <a href="http://delicious.com/sok/sync">sync</a> <a href="http://delicious.com/sok/mac">mac</a> <a href="http://delicious.com/sok/os">os</a> <a href="http://delicious.com/sok/x">x</a>)</div>
            </li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>207</wp:post_id>
		<wp:post_date>2009-03-05 02:04:51</wp:post_date>
		<wp:post_date_gmt>2009-03-05 01:04:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>links-for-2009-03-04</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename=""><![CDATA[]]></category>
	</item>
	<item>
				<title>3D Point Cloud with Javascript and Canvas</title>
		<link>http://blog.betabong.com/2009/03/05/javascript-canvas-3d/</link>
		<pubDate>Thu, 05 Mar 2009 15:02:32 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?p=208</guid>
		<description></description>
		<content:encoded><![CDATA[I was doing some stuff with 3D in Flash. And so I wondered wether sth similar might be achieved with pure HTML/Javascript. And yes, modern browsers (so not IE) can!

What I've done is this (a litte simplified):
<ul>
	<li>Migrated my 3D engine I've written years ago from AS1 to Javascript</li>
	<li>Extracted point cloud from Colada 3D object</li>
	<li>Draw rectangles for every point to canvas</li>
</ul>

And that's how it looks:

    <canvas id="canvas" width="512" height="360"></canvas>  
	<script src="http://www.betabong.com/work/lab/js/3d/3dEngine.js" type="text/javascript" charset="utf-8"></script>
	<script src="http://www.betabong.com/work/lab/js/3d/duck.js" type="text/javascript" charset="utf-8"></script>

Should work on Safari, Firefox and Opera.
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>208</wp:post_id>
		<wp:post_date>2009-03-05 16:02:32</wp:post_date>
		<wp:post_date_gmt>2009-03-05 15:02:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>javascript-canvas-3d</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="3d"><![CDATA[3d]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="category" nicename="javascript-tech"><![CDATA[Javascript]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>links for 2009-03-16</title>
		<link>http://blog.betabong.com/2009/03/17/links-for-2009-03-16/</link>
		<pubDate>Tue, 17 Mar 2009 01:09:18 +0000</pubDate>
		<dc:creator><![CDATA[delicious]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/2009/03/17/links-for-2009-03-16/</guid>
		<description></description>
		<content:encoded><![CDATA[<ul class="delicious"><li>
                <div class="delicious-link"><a href="http://www.kenjiroharigai.com/">Kenjiro Harigai</a></div>
                <div class="delicious-extended">Partially interesting picture navigation.</div>
                <div class="delicious-tags">(tags: <a href="http://delicious.com/sok/inspiration">inspiration</a> <a href="http://delicious.com/sok/navigation">navigation</a>)</div>
            </li><li>
                <div class="delicious-link"><a href="http://www.re-reserved.com/">Reserved: Adventures of the Stardust Girl</a></div>
                <div class="delicious-extended">Cool fashion website, playing with movie theme. Also well executed.</div>
                <div class="delicious-tags">(tags: <a href="http://delicious.com/sok/design">design</a> <a href="http://delicious.com/sok/webdesign">webdesign</a> <a href="http://delicious.com/sok/inspiration">inspiration</a> <a href="http://delicious.com/sok/fashion">fashion</a>)</div>
            </li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>212</wp:post_id>
		<wp:post_date>2009-03-17 02:09:18</wp:post_date>
		<wp:post_date_gmt>2009-03-17 01:09:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>links-for-2009-03-16</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename=""><![CDATA[]]></category>
	</item>
	<item>
				<title>links for 2009-03-21</title>
		<link>http://blog.betabong.com/2009/03/22/links-for-2009-03-21/</link>
		<pubDate>Sun, 22 Mar 2009 01:03:50 +0000</pubDate>
		<dc:creator><![CDATA[delicious]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/2009/03/22/links-for-2009-03-21/</guid>
		<description></description>
		<content:encoded><![CDATA[<ul class="delicious"><li>
                <div class="delicious-link"><a href="http://www.behance.net/KrisSowersby/frame/57735">National on the Behance Network</a></div>
                <div class="delicious-extended">Nice Antiqua Font by Kris Sowersby.</div>
                <div class="delicious-tags">(tags: <a href="http://delicious.com/sok/font%2Cinspiration">font,inspiration</a>)</div>
            </li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>213</wp:post_id>
		<wp:post_date>2009-03-22 02:03:50</wp:post_date>
		<wp:post_date_gmt>2009-03-22 01:03:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>links-for-2009-03-21</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename=""><![CDATA[]]></category>
	</item>
	<item>
				<title>Method Closure Owner (arguments.caller)</title>
		<link>http://blog.betabong.com/2009/03/26/method-closure-owner/</link>
		<pubDate>Thu, 26 Mar 2009 12:48:40 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?p=214</guid>
		<description></description>
		<content:encoded><![CDATA[In AS1 and AS2 we had access to arguments.caller within a function/method scope. This is not the case anymore in AS3. I wonder why. And I wonder why I can't find a workaround, because everything should be there under the hood:
<blockquote><em>ActionScript</em> 3.0 enables a <em>method closure</em> to automatically remember its original object instance (from <a href="http://help.adobe.com/en_US/ActionScript/3.0_ProgrammingAS3_Flex/WS5b3ccc516d4fbf351e63e3d118a9b90204-7ff3.html">Adobe ActionScript 3.0 * Core language features</a>)</blockquote>
Method Closure are quite a wonderful thing: They come in handy in many situations, especially when it comes to event listening and handling. And they stay kind of wonderful in terms of «hidden magic». Hidden magic is all that stuff never officially explained by Adobe. These things often are very core to the language (e.g. exact processing order, frame splitting, event handling), but Adobe decided – certainly for reasons – to only let us see and manipulate what common developers are to see and manipulate.

Still, I'd like to have to possibility to dig deeper if I want. If there is a MethodClosure Type, why is there no way to access its properties. After all it holds a reference to its owner. I may wanna know what the owner is! I admit that its not that there aren't many obvious reasons why I would do so, but there are! For example:

<pre lang="actionscript">
public function get width() : Number {
	var caller : * = MethodClosure( arguments.callee ).owner;
	if ( isChild( caller ) ) {
		return widthValueForChild;
	} else {
		return actualWidthValue;
	}
}
</pre>

May be may be there is a way.. I'm not a hardcore byte array hacker, but if I find a solution (or explanation why o why), I'll update this post.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>214</wp:post_id>
		<wp:post_date>2009-03-26 13:48:40</wp:post_date>
		<wp:post_date_gmt>2009-03-26 12:48:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>method-closure-owner</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="random"><![CDATA[Random]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>60</wp:comment_id>
			<wp:comment_author><![CDATA[Lance]]></wp:comment_author>
			<wp:comment_author_email>lancejpollard@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.viatropos.com</wp:comment_author_url>
			<wp:comment_author_IP>206.176.255.189</wp:comment_author_IP>
			<wp:comment_date>2009-08-24 01:14:10</wp:comment_date>
			<wp:comment_date_gmt>2009-08-24 00:14:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey man,

These posts on Method Closures have been amazing... nothing like it out there.  I have a question/case, what do you think...

I have a 'public static EventHandler' class, which creates an EventHandler object, which allows you to pass arguments to the event handler, like so:

<pre lang="actionscript">
var handler:Function = EventHandler.handler(theRealHandler, [arg1, arg2], true);
target.addEventListener("something", handler);

public function theRealHandler(event:Event, arg1:*, arg2:*):void ...
</pre>

...where the last parameter, "true", says you also want the event.

The first question is, if I declare that "var handler" inside of a method, where is it stored?  Because the EventHandler static class created a new object, and passed the result to the handler inside that method, it seems like a loop and I don't know well enough how things are stored in Flash to see how that would be garbage collected (the handler, and the EventHandler object).  The EventHandler object looks like this:

<pre lang="actionscript">
class EventHandler {

	public var args:Array;
	public var eventHandler:Function;
	public var includeEvent:Boolean;
	
	public function EventHandler(eventHandler:Function, arguments:Array = null, includeEvent:Boolean = false) {
		this.eventHandler = eventHandler;
		this.args = arguments;
		this.includeEvent = includeEvent;
	}
	
	public function handleEvent(event:*):void {
		var result:Array = args.concat();
		if (includeEvent) result.splice(0, 0, event); // add event to beginning of array
		eventHandler.apply(null, result);
	}

	public static function handler(eventHandler:Function, arguments:Array = null, includeEvent:Boolean = false):Function {
		return new EventHandler(eventHandler, arguments, includeEvent).handleEvent;
	}
}
</pre>

...Second question is in regards to making this easy to read and more customizable.  In order to make code clean, I created another object, SmartEvent.  This is all the EventHandler without the static methods.  In addition, it's a dynamic class, so you can pass through any properties in the event, and reset them whenever.  Looks like this:

<pre lang="actionscript">
var event:SmartEvent(realHandler);
event.arg1 = value;
event.arg2 = value2;
target.addEventListener("something", event.handler);

...where "handler" is the internal handler from the EventHandler class, and it just passes the SmartEvent to the "realHandler".

So SmartEvent looks like this:

public dynamic class SmartEvent extends flash.events.Event
{
	public var originalEvent:flash.events.Event;
	
	public var eventHandler:Function;
	
	public function SmartEvent(eventHandler:Function) {
		super();
		this.eventHandler = eventHandler;
	}
	
	public function handler(event:Event):void {
		originalEvent = event;
		eventHandler(this);
	}
}
</pre>

...Then you can reset variables (aka 'arguments') on your SmartEvent every time it is handled.  This is basically an adapter for a PropertyChangeEvent when you don't know the property, source, or target (from Flex binding), and can be used like a Scope object in Mate.  So in the "realHandler", you could do this:

<pre lang="actionscript">
public function realHandler(event:SmartEvent):void {
	var oldValue:* = event.oldValue; // defined in some method
	var target:Object = event.targetObject;
	var source:Object = event.target;
	var property:String = event.property; // defined in some method
	var newValue:* = source[property];
	if (oldValue != newValue) {
		target[property] = newValue;
		event.oldValue = newValue; // reset oldValue, so the next time through its different
	}
}
</pre>

...I made all this from reading your posts, but I'm not sure how the garbage collection because everything's referencing everything else.  It makes a lot more possible in event handling though!  Any ideas if this this is okay practice or how to make it better?

Thanks man!
Lance]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>61</wp:comment_id>
			<wp:comment_author><![CDATA[betabong]]></wp:comment_author>
			<wp:comment_author_email>sklaus@betabong.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.betabong.com</wp:comment_author_url>
			<wp:comment_author_IP>84.75.23.223</wp:comment_author_IP>
			<wp:comment_date>2009-08-24 10:14:10</wp:comment_date>
			<wp:comment_date_gmt>2009-08-24 09:14:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey Lance, interesting post! I'm still not totally sure about the reason for these extra handler classes - may be because you haven't posted all the code? 

For example SmartEvent: Why is it dynamic? Are targetObjet, target, property, oldValue defined somewhere, or are those dynamic properties? It's generally a good idea to avoid dynamic classes for several reasons (speed and control), so I don't really see the big benefit here.

Then there's several potential problems with your "shadow" classes here, especially with EventHandler. As it seems to me neither its instance nor its target object will be garbage collected, resulting not only in memory leaks but also in potential misbehaviour (though I'm not totally sure about both, I'd have to take more time to think this trough thouroughly). It also seems that you won't have any more possibility to get to EventHandler once you've created it: So how would you remove a listener at a later time?

As for me I try to keep as much control as I can by keeping things as basic as possible:

- never reference an object in another one if not absolutely necessary. And if I have to do so: make sure the reference will be nulled on destruction.

- if you have instances listen to dispatchers, make sure you'll unlisten on destruction - or/and use weak listeners if possible

Still, I also use "helpers" sometimes, especially for bigger stuff. For once I subclassed EventDispatcher into BetterEventDispatcher which can keep track of listeners, providing things I'd wish for all event dispatcher, especially the method removeAllListeners. And then I'd subclass from that one instead of EventDispatcher.

And for my framework classes I've added listenTo and unlistenTo methods for the core class. Here also I keep track of what instances I'm listening to (opposed to the BetterEventDispatcher who keeps track of who's listening to me). So on destruction I can call unlistenToAll() and I'm fine with the garbage collector if I've always gone through those two methods listenTo and unlistenTo.

May be I'm gonna write a post about this one time. Still in my opinion it's too much work for us to do: These kind of things should be in the core language, with a better event framework and the addition of destructors.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>3</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>62</wp:comment_id>
			<wp:comment_author><![CDATA[Lance]]></wp:comment_author>
			<wp:comment_author_email>lancejpollard@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.viatropos.com</wp:comment_author_url>
			<wp:comment_author_IP>99.33.93.69</wp:comment_author_IP>
			<wp:comment_date>2009-08-24 19:11:30</wp:comment_date>
			<wp:comment_date_gmt>2009-08-24 18:11:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[For sure Betabong, I totally agree.  I'm coming from a Ruby background and there's just so much cool stuff left out in compiled languages, like blocks/yields for instance, and modules, so I find myself trying to recreate those core language features in actionscript for 1) keeping code lean so I don't repeat myself, and 2) making it intuitive to do hardcore things.  They should go into the core language:)

Anyway, thanks a lot for the great response.  When I get some time I'll have to check out how garbage collection would work exactly in this case.  I'm thinking about creating an EventUtil class that does what your BetterEventDispatcher does, so I can use it here and there.

- Lance]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>63</wp:comment_id>
			<wp:comment_author><![CDATA[Lance]]></wp:comment_author>
			<wp:comment_author_email>lancejpollard@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.viatropos.com</wp:comment_author_url>
			<wp:comment_author_IP>99.33.93.69</wp:comment_author_IP>
			<wp:comment_date>2009-08-24 19:12:30</wp:comment_date>
			<wp:comment_date_gmt>2009-08-24 18:12:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[If only dynamic classes weren't bad practice in Actionscript :)

Those properties were dynamically defined.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>175</wp:comment_id>
			<wp:comment_author><![CDATA[betabong]]></wp:comment_author>
			<wp:comment_author_email>sklaus@betabong.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.betabong.com</wp:comment_author_url>
			<wp:comment_author_IP>77.58.222.42</wp:comment_author_IP>
			<wp:comment_date>2010-11-21 11:02:33</wp:comment_date>
			<wp:comment_date_gmt>2010-11-21 10:02:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This is indeed very interesting. Thing is: all you get is a string information about which class and which method was calling. But not the calling method itself. And I don't see how you could derive this reference from it. Still, nice :-)

(it's index 2 by the way:)
<pre>
trace((new Error()).getStackTrace().split(’\n’)[2]);
</pre>]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>174</wp:comment_parent>
			<wp:comment_user_id>3</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>174</wp:comment_id>
			<wp:comment_author><![CDATA[Steven Vachon]]></wp:comment_author>
			<wp:comment_author_email>prometh@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.svachon.com/</wp:comment_author_url>
			<wp:comment_author_IP>216.198.139.38</wp:comment_author_IP>
			<wp:comment_date>2010-11-21 10:39:24</wp:comment_date>
			<wp:comment_date_gmt>2010-11-21 09:39:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I realize that this post is over a year old, but I was looking for this very thing, and I found this on a website just now:

// the 3rd line is the equivalent of "attributes.caller"
trace((new Error()).getStackTrace().split('\n')[3]);]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>190</wp:comment_id>
			<wp:comment_author><![CDATA[Steven Vachon]]></wp:comment_author>
			<wp:comment_author_email>prometh@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.svachon.com/</wp:comment_author_url>
			<wp:comment_author_IP>216.198.139.38</wp:comment_author_IP>
			<wp:comment_date>2010-12-17 23:47:36</wp:comment_date>
			<wp:comment_date_gmt>2010-12-17 22:47:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[True, but it's great for debugging

And yeah, oops, heheh... only needed this once so far and knowing the calling class was enough :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
				<title>Bug Hunting: Shadowed 3D and ScrollRect</title>
		<link>http://blog.betabong.com/2009/04/01/bug-hunting-shadowed-3d-and-scrollrect/</link>
		<pubDate>Wed, 01 Apr 2009 16:02:05 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?p=217</guid>
		<description></description>
		<content:encoded><![CDATA[I don't discover as many bugs nowadays as I've used to in the old days when I was beta testing for Macromedia. But it happened today, and I've just installed the newest Flash Player 10.0.22.87 to be sure.

It happens to DisplayObjects A inside DisplayObjectContainers B inside DisplayObjectContainer C, when
<ul>
	<li>A was not initially visible (not inside initial scroll rect of C)</li>
	<li>A is in 3D mode (I just change rotationY for that)</li>
	<li>B is in «cached as Bitmap» (cacheAsBitmap would do, I go with DropShadowFilter in the example)</li>
	<li>C's scrollrect property is set, so A is shows up (well, it doesn't – that's the bug after all ;)</li>
</ul>
Here the example:
<div style="padding: 10px; background-color: #eee;"><object width="500" height="200" data="/wp-content/uploads/2009/04/bug-3d-shadow.swf" type="application/x-shockwave-flash"><param name="id" value="Bug-3D-Shadow" /><param name="align" value="middle" /><param name="allowScriptAccess" value="sameDomain" /><param name="allowFullScreen" value="false" /><param name="quality" value="high" /><param name="bgcolor" value="#ffffff" /><param name="src" value="/wp-content/uploads/2009/04/bug-3d-shadow.swf" /><param name="name" value="Bug-3D-Shadow" /><param name="allowfullscreen" value="false" /></object></div>
<a href="http://blog.betabong.com/wp-content/uploads/2009/04/bug-3d-shadow.swf">bug-3d-shadow.swf</a>
<!--more-->
And here the code:

<pre lang="actionscript">
/* Flash Bug - Flash Player 10.0.22.87
	disappearance when 3d's parent has shadow
	more info: betabong@gmail.com
*/

this.stage.scaleMode = StageScaleMode.NO_SCALE;
this.stage.align = StageAlign.TOP_LEFT;


var scroller:Sprite = new Sprite();
addChild( scroller );
scroller = this;

var filter:DropShadowFilter = new DropShadowFilter( 2 , 90 , 0 , 0.5 , 8 , 8 , 1 , 2 );
var r:Sprite,rect:Sprite;

for ( var mode:int = 0 ; mode<=1 ; mode++ ) {
	for ( var i:int=0 ; i<3000 ; i+=100 ) {
		r = new Sprite();
		r.addChild( rect = new Sprite() );
		rect.graphics.beginFill( 0xff0000 );
		rect.graphics.drawRect( -40 , -40 , 80 , 80 );
		rect.graphics.endFill();
		rect.addEventListener( MouseEvent.MOUSE_MOVE , rotate );
		if ( !mode ) r.cacheAsBitmap = true; //r.filters = [ filter ];
		r.y = i + 100;
		r.x = mode * 150 + 100;
		addChild( r );
	}
}

stage.addEventListener( Event.ENTER_FRAME , move );

var scroll:Number = 0;
function move( event:Event ) : void {
	scroll += ( stage.mouseY - 100 ) / 50;
	scroller.scrollRect = new Rectangle( 0 , scroll , 500 , 200 );
}


function rotate(e:*) {
	e.target.rotationY++;
}</pre>

<strong>Update:</strong> Now that: it took me about 20 min to file a bug in the Adobe Bug System (which is slow as hell anyway). And when I want to submit it, I get a message saying they'd be in maintenance. Well, buggy bug systems piss me off quite a bit.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>217</wp:post_id>
		<wp:post_date>2009-04-01 17:02:05</wp:post_date>
		<wp:post_date_gmt>2009-04-01 16:02:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bug-hunting-shadowed-3d-and-scrollrect</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="actionscript"><![CDATA[Actionscript]]></category>
		<category domain="post_tag" nicename="actionscript"><![CDATA[Actionscript]]></category>
		<category domain="post_tag" nicename="bug"><![CDATA[Bug]]></category>
		<category domain="post_tag" nicename="flash"><![CDATA[flash]]></category>
		<category domain="post_tag" nicename="flash-player"><![CDATA[Flash Player]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Flash Debug Speed</title>
		<link>http://blog.betabong.com/2009/04/05/flash-debug-speed/</link>
		<pubDate>Sun, 05 Apr 2009 00:49:46 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?p=225</guid>
		<description></description>
		<content:encoded><![CDATA[I did some speed tests today, comparing two string parsing methods. And I've made some very interesting discoveries: The execution speed between SWF compiled for debugging and those compiled without differs.

Ha! Okay, that's not that much of news (even for me). But what astonishes me is how much this speed gap can be, especially when it comes to massive data calculations. I somehow always had a somewhat 20 percent speed decrease in mind (I was just presuming, me dumb). But for a 3d particle test we're talking factor 8!!

Now this made me curious... so I've tested with Debug and Release Player both debug and release SWFs:

<strong>Debug Player running Debug SWF</strong>

<strong><a href="http://blog.betabong.com/wp-content/uploads/2009/04/picture-11.png"><img class="alignnone size-full wp-image-226" title="Flash Debug in Debug" src="http://blog.betabong.com/wp-content/uploads/2009/04/picture-11.png" alt="Flash Debug in Debug" width="428" height="185" /></a></strong>

<strong>Debug Player running Release SWF</strong>

<strong><a href="http://blog.betabong.com/wp-content/uploads/2009/04/picture-9.png"><img class="alignnone size-full wp-image-227" title="Release in Debug" src="http://blog.betabong.com/wp-content/uploads/2009/04/picture-9.png" alt="Release in Debug" width="428" height="185" /></a></strong>

<strong>Release Player running Debug SWF</strong>

<strong><a href="http://blog.betabong.com/wp-content/uploads/2009/04/picture-12.png"><img class="alignnone size-full wp-image-228" title="Debug in Release" src="http://blog.betabong.com/wp-content/uploads/2009/04/picture-12.png" alt="Debug in Release" width="427" height="181" /></a></strong>

<strong>Release Player running Release SWF</strong>

<strong><a href="http://blog.betabong.com/wp-content/uploads/2009/04/picture-13.png"><img class="alignnone size-full wp-image-229" title="Release in Release" src="http://blog.betabong.com/wp-content/uploads/2009/04/picture-13.png" alt="Release in Release" width="427" height="185" /></a></strong>

<strong>A few conclusions:</strong>
<ul>
	<li><strong>Never release a SWF file with debug code</strong> (or otherwise said: put only stuff online from bin-release, never bin-debug). Though common users won't notice the speed decrease, your friendly flash developers may, at least if you're app is somewhat cpu intensive. And of course: debug SWF are much bigger in size (just in case you give a fuck about flash devs ;-)</li>
	<li><strong>Speed tests should be played in the release player.</strong> Why? After all, I wouldn't care if the relation would stay the same. Usually you just need to know how much faster one thing is compared to the other one, so that would do it. But unfortunately the ratio won't always be the same. In the above example the ration is 3.66 for debug and 2.92 for release. And it can differ muuuuch more.</li>
</ul>
The last one bugs me quite a bit. It's just a pain in the ass to export a release build each time you wanna compare performance. And it also means you can't do quick'n'dirty trace outputs for the time result (not a biggy if you're testing within a Flex project though).

So here we go with <strong>two wishes for Adobe</strong>:
<ul>
	<li>Let us quickly test release builds within Flex Builder (a simple command would do it – I thought it might be «Run Testapp» (instead of «Debug Testapp»), but that just doesn't bring up the Debugger (and same speed)</li>
	<li>An option to turn off debugging mode in Debug Player!!! That would solve almost all problems, and we could also use our Plugin for normal browsing without performance penalties (is this why Youtube eats so much cpu here?</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>225</wp:post_id>
		<wp:post_date>2009-04-05 01:49:46</wp:post_date>
		<wp:post_date_gmt>2009-04-05 00:49:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>flash-debug-speed</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="debug"><![CDATA[Debug]]></category>
		<category domain="post_tag" nicename="flash-player"><![CDATA[Flash Player]]></category>
		<category domain="category" nicename="flex"><![CDATA[Flex]]></category>
		<category domain="category" nicename="tech"><![CDATA[Frontend]]></category>
		<category domain="post_tag" nicename="speed"><![CDATA[speed]]></category>
		<category domain="post_tag" nicename="testing"><![CDATA[Testing]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>614</wp:comment_id>
			<wp:comment_author><![CDATA[Sebb]]></wp:comment_author>
			<wp:comment_author_email>barathrumm@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://sebb.dk</wp:comment_author_url>
			<wp:comment_author_IP>87.54.77.163</wp:comment_author_IP>
			<wp:comment_date>2012-01-22 18:41:27</wp:comment_date>
			<wp:comment_date_gmt>2012-01-22 17:41:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for saving me some time, i was curious about this as my computer seemed to go nuts whenever i ran a project in my debugger but keep it's cool when i played in a non debug player, the difference really is quite staggering.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
				<title>swffit - pro &amp; contra</title>
		<link>http://blog.betabong.com/2009/04/07/swffit-pro-con/</link>
		<pubDate>Tue, 07 Apr 2009 12:04:52 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?p=232</guid>
		<description></description>
		<content:encoded><![CDATA[<img class="alignright" title="swffit" src="http://swffit.millermedeiros.com/img/swffit_logo.gif" alt="" width="123" height="92" style="float: right;"/><a href="http://swffit.millermedeiros.com/">swffit</a> is a great little library that smartly resizes your flash movie depending on its content. It gives you <strong>native scrollbars for free</strong> whenever your content is longer than the browser window. Another strategy is to always have the flash movie fill 100% the browser window and let Flash do the scrolling.

There are a lot of <strong>PRO</strong> for the <a href="http://swffit.millermedeiros.com/">swffit</a> way:
<ul>
	<li>It gives users the <strong>system scrollbar</strong>. Users are used to that, they know what it means, they know how to deal with it.</li>
	<li><strong>Mouse wheels just work! </strong>It's scrolling a standard browser window, no magic at all: great! (You have to use <a href="http://blog.pixelbreaker.com/flash/as30-mousewheel-on-mac-os-x/">this</a> otherwise)</li>
	<li>It's <strong>easy</strong> to implement.</li>
</ul>
Still there is a <strong>CONTRA</strong> side:
<ul>
	<li>You'll <strong>need javascript</strong> (well, that's no biggy at all – as a matter of fact, you're just pretty in the desert without javascript in todays websites)</li>
	<li>You have no control over <strong>scrollbar design</strong> (neither a biggy – as another matter of fact I consider that a good thing anyway, but don't tell the brand agency ;-)</li>
	<li>It has <strong>performance disadvantages</strong>. Well that I consider a biggy! Because the movie will always be in its full height, it will do rerender for the entire area!! Imagine long page with animations here and there: Given Flash's «not so fast» rendering engine, this can become a huge performance killer. Let me give you a quick'n'dirty example: <a href="/wp-content/uploads/flash/SWF_Size_Performance/performance-killer-percent.html">Full Height</a> compared to <a href="/wp-content/uploads/flash/SWF_Size_Performance/performance-killer-wsize.html">«Cropped» to Window Height</a> (just resize browser window to real small size to see the big difference).</li>
</ul>
<strong>Conclusion:</strong> I'm just glad I found one good reason to not declare my internal scrollbar like in <a href="http://www.betabong.com">www.betabong.com</a> as complete bullshit ;-)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>232</wp:post_id>
		<wp:post_date>2009-04-07 13:04:52</wp:post_date>
		<wp:post_date_gmt>2009-04-07 12:04:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>swffit-pro-con</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="random"><![CDATA[Random]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>29</wp:comment_id>
			<wp:comment_author><![CDATA[simurai]]></wp:comment_author>
			<wp:comment_author_email>simulus@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://simurai.com/</wp:comment_author_url>
			<wp:comment_author_IP>92.107.101.200</wp:comment_author_IP>
			<wp:comment_date>2009-04-08 22:03:16</wp:comment_date>
			<wp:comment_date_gmt>2009-04-08 21:03:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nice post betaboy. I never really thought about your last contra point. Haaa..

ps. I think the "100% Height" link points also to the "Full Height" page..? But I kinda can picture how it would look. ;-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>30</wp:comment_id>
			<wp:comment_author><![CDATA[betabong]]></wp:comment_author>
			<wp:comment_author_email>sklaus@betabong.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.betabong.com</wp:comment_author_url>
			<wp:comment_author_IP>84.75.21.89</wp:comment_author_IP>
			<wp:comment_date>2009-04-08 23:43:49</wp:comment_date>
			<wp:comment_date_gmt>2009-04-08 22:43:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[hey simi, thx for pointing that out - corrected. I was thinking of another «contra» today while layouting for a little website which needed some "fixed position" stuff. But as I said, apart from that, I really like it.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>3</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>49</wp:comment_id>
			<wp:comment_author><![CDATA[drus]]></wp:comment_author>
			<wp:comment_author_email>drusunlimited@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://drusunlimited.com</wp:comment_author_url>
			<wp:comment_author_IP>82.158.51.73</wp:comment_author_IP>
			<wp:comment_date>2009-07-11 23:05:00</wp:comment_date>
			<wp:comment_date_gmt>2009-07-11 22:05:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I think if the developer *knows* the max possible heigth of the content always is better to use the native browser scroll.

Its silly to change the way the user scroll a page, its just another page, and the worst is that the flash scrollbar loose the focus and doesnt response when you leave the stage, and that is very easy while you are scrolling.

Interesting blog!!

PD:yeah, poor english :(]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>53</wp:comment_id>
			<wp:comment_author><![CDATA[Mesknot]]></wp:comment_author>
			<wp:comment_author_email>mesknot@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>200.66.3.182</wp:comment_author_IP>
			<wp:comment_date>2009-08-18 11:17:20</wp:comment_date>
			<wp:comment_date_gmt>2009-08-18 10:17:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[i've found one "contra" and it pissed me off, i did a fullbrowser flash website with a custom vertical scroller and i used swffit to put the horizontal scroller at a fixed width... and voila! my custom vertical scroller stops at the fixed width too and it doesnt shows if the browser window is lower than the fixed width for the horizontal scroller.... DAMN! so i will not use swffit... ill try to learn how to do that in flash, how to show a bottom scrollbar at a determinated width...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
				<title>GridFitType (&amp; animation)</title>
		<link>http://blog.betabong.com/2009/04/13/gridfittype-animation/</link>
		<pubDate>Sun, 12 Apr 2009 23:02:58 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?p=242</guid>
		<description></description>
		<content:encoded><![CDATA[GridFitType has a great impact on Text rendering:

[swfobj src="/wp-content/uploads/flash/GridFitType/GridFitType.swf"]

Well not really much to say here:
<ul>
	<li><strong>NONE</strong> Good for animation and people who prefer Font appearance over readability</li>
	<li><strong>SUBPIXEL</strong> Good compromise between readability (small sizes) and appearance</li>
	<li><strong>PIXEL</strong> Pure nonsense if you ask me</li>
</ul>
What I really wonder though is: <strong>Why on earth can't I adjust fractioned text sizes</strong> (aka float)??? In the IDE, yes you can. By actionscript, no you can't. I don't get it.. anybody knows why that is? And more importantly: is there some fancy workaround? (in the example I'm just scaling the text fields, but that's not really a cool solution).]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>242</wp:post_id>
		<wp:post_date>2009-04-13 00:02:58</wp:post_date>
		<wp:post_date_gmt>2009-04-12 23:02:58</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>gridfittype-animation</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="actionscript"><![CDATA[Actionscript]]></category>
		<category domain="post_tag" nicename="actionscript"><![CDATA[Actionscript]]></category>
		<category domain="post_tag" nicename="rendering"><![CDATA[Rendering]]></category>
		<category domain="post_tag" nicename="text"><![CDATA[Text]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Metatunnel 1k Demo: AS vs. JS</title>
		<link>http://blog.betabong.com/2009/04/13/metatunnel-1k-demo-as-vs-js/</link>
		<pubDate>Mon, 13 Apr 2009 10:16:17 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?p=245</guid>
		<description></description>
		<content:encoded><![CDATA[I did a quick port of a «graphic demo» called <a href="http://www.pouet.net/prod.php?which=52777">«metatunnel» (created by FRequency).</a>

<a href="http://demoscene.appjet.net/">Paulo Falcão ported this to Javascript</a> using canvas.

To make the set complete I ported Paulos JS version to Actionscript, just quick'n'dirty.

Click on it to start the animation:

[swfobj src="/wp-content/uploads/flash/MetaTunnel.swf" width="128" height="128"]

<!--more-->

Here's the code:

<pre lang="actionscript">package test
{
	import flash.display.Bitmap;
	import flash.display.BitmapData;
	import flash.display.Sprite;
	import flash.events.Event;
	import flash.events.MouseEvent;

	public class JSCanvasPort extends Sprite
	{
		public function JSCanvasPort()
		{
			super();
			addChild( canvas = new Bitmap() );
			canvas.smoothing = false;
			canvas.scaleX = canvas.scaleY = 2;
			draw();

			addEventListener( MouseEvent.CLICK , handleClick );
		}

		private var playing:Boolean = false;

		public function handleClick( e:Event = null ) : void {
			if ( playing )
				removeEventListener( Event.ENTER_FRAME , enterframe );
			else
				addEventListener( Event.ENTER_FRAME , enterframe );
			playing = !playing;
		}
		public function enterframe( e:Event=null ) : void {
			draw();
		}

		public var time:Number=0;
		public var maxr:Number=64.0;
		public var canvas:Bitmap;

		public function distance(ax:Number,ay:Number,az:Number,bx:Number,by:Number,bz:Number):Number{
			var dx:Number=bx-ax , dy:Number=by-ay , dz:Number=bz-az;
		    return Math.sqrt( dx*dx + dy*dy + dz*dz );
		}
		public function obj(x:Number,y:Number,z:Number,t:Number):Number{
		        var f:Number=1.0;
		        f*=distance(x,y,z,Math.cos(t)+Math.sin(t*0.2),0.3,2.0+Math.cos(t*0.5)*0.5);
		        f*=distance(x,y,z,-Math.cos(t*0.7),0.3,2.0+Math.sin(t*0.5));
		        f*=distance(x,y,z,-Math.sin(t*0.2)*0.5,Math.sin(t),2.0);
		        f*=Math.cos(y)*Math.cos(x)-0.1-Math.cos(z*7.0+t*7.0)*Math.cos(x*3.0)*Math.cos(y*4.0)*0.1;
		        return f;
		}

		public function eval(x:Number,y:Number,t:Number):uint{
		   var vx:Number=x*2.0-1.0; var vy:Number=-y*2.0+1.0;
		   var s:Number=0.4;
		   var ox:Number=vx;var oy:Number=vy*1.25;var oz:Number=0.0;
		   var dx:Number=(vx+Math.cos(t)*0.3)/64.0;var dy:Number=vy/64.0;var dz:Number=1.0/64.0;
		   var tt:Number=0.0;
		   var g:Number=1.0;
		   while((g&gt;s)&amp;&amp;(tt&lt;375)){
		         g=obj(ox+dx*tt,oy+dy*tt,oz+dz*tt,t);
		         tt+=g*4;
		   };
		   var color:Number=0.0;
		   var dxtt:Number=ox+dx*tt;var dytt:Number=oy+dy*tt;var dztt:Number=oz+dz*tt;
		   var objd:Number=obj(dxtt,dytt,dztt,t);
		   var nx:Number=objd-obj(dxtt+0.01,dytt,dztt,t);
		   var ny:Number=objd-obj(dxtt,dytt+0.01,dztt,t);
		   var nz:Number=objd-obj(dxtt,dytt,dztt+0.01,t);
		   var d:Number=Math.sqrt(nx*nx+ny*ny+nz*nz);ny=ny/d;nz=nz/d;
		   color+=Math.max(-0.5*nz,0.0)+Math.max(-0.5*ny+0.5*nz,0.0)*0.5;
		   var r:Number=(color+0.1*tt*0.025);
		   var g:Number=(color+0.2*tt*0.025);
		   var b:Number=(color+0.5*tt*0.025);
		   return getRGB(r,g,b);
		}

		public function getRGB(r:Number,g:Number,b:Number):uint{
		        if (r&lt;0) r=0; else if (r&gt;1) r=1;
		        if (g&lt;0) g=0; else if (g&gt;1) g=1;
		        if (b&lt;0) b=0; else if (b&gt;1) b=1;
			return ((r*255)&amp;255) &lt;&lt; 16 | ((g*255)&amp;255) &lt;&lt; 8 | ((b*255)&amp;255);
		}

		public function draw():void{
			if ( canvas.bitmapData == null ) {
				canvas.bitmapData = new BitmapData( maxr , maxr , false , 0xffffff );
			}
			var t:BitmapData = canvas.bitmapData;
			time+=0.1;
			t.lock();
		        for(var x:Number=0;x<maxr;x++){
		                var px:Number=x/maxr;
		                for(var y:Number=0;y<maxr;y++){
		                        var py:Number=y/maxr;
		                        t.setPixel( x , y , eval(px,py,time) );
		                }
		        }
		   t.unlock();
		};

	}
}</pre>

<strong>Update:</strong> A quickly optimized version (nothing advanced really).

[swfobj src="/wp-content/uploads/flash/MetaTunnel-optim-1.swf" width="128" height="128"]
(You can switch quality in this version with key up or down).
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>245</wp:post_id>
		<wp:post_date>2009-04-13 11:16:17</wp:post_date>
		<wp:post_date_gmt>2009-04-13 10:16:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>metatunnel-1k-demo-as-vs-js</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="actionscript"><![CDATA[Actionscript]]></category>
		<category domain="post_tag" nicename="actionscript"><![CDATA[Actionscript]]></category>
		<category domain="post_tag" nicename="canvas"><![CDATA[canvas]]></category>
		<category domain="category" nicename="javascript-tech"><![CDATA[Javascript]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="random"><![CDATA[Random]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>MetaTunnel with Pixel Bender</title>
		<link>http://blog.betabong.com/2009/04/17/metatunnel-with-pixel-bender/</link>
		<pubDate>Fri, 17 Apr 2009 21:37:31 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?p=252</guid>
		<description></description>
		<content:encoded><![CDATA[This is a follow-up of <a href="/2009/04/13/metatunnel-1k-demo-as-vs-js/">this</a>.

<img src="http://blog.betabong.com/wp-content/uploads/2009/04/metatunnel-pixelbender.jpg" alt="metatunnel-pixelbender" title="metatunnel-pixelbender" width="512" height="512" class="alignnone size-full wp-image-254" />

Yeah well, I was more than optimistic to show <a href="http://demoscene.appjet.net/">those JS guys</a> how fast Flash can be with the help of some brand new Adobe magic – but Pixel Bender was, unfortunately, quite disappointing:
<!--more-->

<ol>
	<li>I spent hours to successfully migrate the code to Pixel Bender Toolkit (wasn't that difficult actually, but a wrong character there and your math is all screwed up). So here the first letdown: Pixel Bender Toolkit is <strong>not a very nice coding environment</strong>. It's a rough baby. But I'd do everything for speed :-)..</li>
	<li>Once I had it running (the above picture is captured from Pixel Bender) I tried to export it for Flash Player. But hoohoo! <strong>no support for loops</strong> in Flash Player! Yeah, well, ..(and also <strong>no custom functions</strong> by the way)</li>
	<li>But I didn't give up. I just calculated how many max loops where needed (about 100) and replicated the while loop with many if-conditions (I love to do computer's dummy job ;). Then finally: Export to Flash Player! But in Flash Player having the shader as Filter for a BitmapData just <strong>really fucked up the rendering</strong>. I even went down to 1fps, but still no luck. What a bummer! (sometimes I saw a few pixels blue, but very unusable: I've written <a href="http://forums.adobe.com/thread/419485">to the Pixel Bender Forum </a>- invited by <a href="http://twitter.com/pixelbender">@Pixelbender</a> – but that led to nothing so far).</li>
	<li>Today, finally, I got it working by taking a more rough approach (not BitmapFilter, but ShaderJob). <strong>But hell is it slow!!!</strong> And it eats all my 8 cpu cores!! So I wondered how that could be: Fast as hell in Pixel Bender Toolkit (uses may be 2% of my cpu at full fps!), but slow as hell in Flash Player?! The answer is obvious: <strong>Adobe decided not to talk to the GCU (Graphics Card)</strong> for the calculations, probably to keep the Flash Player be as platform independent as possible - and as small as possible. But then I wonder.. WTF do you give us this toy if we can't use it?!! It's like Apple would say: «Great news: we have Core Graphics on the iPhone - without hardware acceleration..» Adobe, to me, this doesn't make too much sense. (But I'm so very much pleased about the new Text Engine – *that* was a good job)</li>
</ol>

Here the result: (Click to start, it'll eat your cpu!)

[swfobj src="/wp-content/uploads/flash/MetaTunnelBender.swf" height="128"]

And for the geeks, here we go with the source codes:

<pre lang="javascript">
<languageVersion : 1.0;>

kernel MetaTunnel
<   namespace : "com.betabong";
    vendor : "Betabong";
    version : 1;
    description : "MetaTunnel Port";
>

{
    parameter int size
    <
        minValue: 16;
        maxValue: 512;
        defaultValue: 128;
    >;


    parameter float time
    <
        minValue: float( 0.0 );
        maxValue: float( 15.0 );
        defaultValue: float( 0.0 );
    >;

 


    input image4 src;
    output pixel3 dst;

    void
    evaluatePixel()
    {
        float cos1 = cos( time );
        float cos0_5 = cos(time * 0.5);
        float cos0_7 = cos(time * 0.7);
        float sin1 = sin( time );
        float sin0_2 = sin(time * 0.2);
        float sin_0_5 = sin(time * 0.5);
        
        float dim = float( size );
        float2 point = outCoord() / dim;
        if ( point.x > 1.0 || point.y > 1.0 ) {
            dst.rgb = float3( 1.0 , 1.0 , 1.0 );
        } else {
        
        float2 vp = float2( point.x * 2.0 - 1.0 , -point.y * 2.0 + 1.0 );
        float s = float( 0.4 );
        float3 op = float3( vp.x , vp.y * 1.25 , 0.0 );
        float3 dp = float3( (vp.x + cos1 * 0.3) / 64.0 , vp.y/64.0 , 1.0/64.0 );
        float f = float( 1.0 );

        float tt = float( 0.0 );
        float g = float( 1.0 );
        float3 p = float3(1.0,1.0,1.0);
        while ( (g > s) && (tt<375.0) ) {
            p = op + ( dp * tt );
            f = 1.0;
            f *= abs( distance( float3( cos1+sin0_2 , 0.3 , 2.0+cos0_5*0.5 ) , p ) );
            f *= abs( distance( float3( -cos0_7 , 0.3 , 2.0+sin_0_5 ) , p ) );
            f *= abs( distance( float3( -sin0_2*0.5 , sin1 , 2.0 ) , p ) );
            f *= cos(p.y)*cos(p.x) - 0.1 - cos( p.z*7.0 + time*7.0 ) *cos(p.x*3.0)*cos(p.y*4.0)*0.1;
            g = f;
            tt += g * 4.0;
        }
        float color = 0.0;
        float3 dtt = op + ( dp * tt);
        
        p = float3( dtt.x , dtt.y , dtt.z );
        f = 1.0;
        f *= distance( float3( cos1+sin0_2 , 0.3 , 2.0+cos0_5*0.5 ) , p );
        f *= distance( float3( -cos0_7 , 0.3 , 2.0+sin_0_5 ) , p );
            f *= distance( float3( -sin0_2*0.5 , sin1 , 2.0 ) , p );
        f *= cos(p.y)*cos(p.x)-0.1-cos(p.z*7.0+time*7.0)*cos(p.x*3.0)*cos(p.y*4.0)*0.1;
        float objd = f;
        
        float3 np = float3( 0.0,0.0,0.0 );
        
        p = float3( dtt.x + 0.01 , dtt.y , dtt.z );
        f = 1.0;
        f *= distance( float3( cos1+sin0_2 , 0.3 , 2.0+cos0_5*0.5 ) , p );
        f *= distance( float3( -cos0_7 , 0.3 , 2.0+sin_0_5 ) , p );
            f *= distance( float3( -sin0_2*0.5 , sin1 , 2.0 ) , p );
        f *= cos(p.y)*cos(p.x)-0.1-cos(p.z*7.0+time*7.0)*cos(p.x*3.0)*cos(p.y*4.0)*0.1;
        np.x = objd - f;
        
        p = float3( dtt.x , dtt.y + 0.01 , dtt.z );
        f = 1.0;
        f *= distance( float3( cos1+sin0_2 , 0.3 , 2.0+cos0_5*0.5 ) , p );
        f *= distance( float3( -cos0_7 , 0.3 , 2.0+sin_0_5 ) , p );
            f *= distance( float3( -sin0_2*0.5 , sin1 , 2.0 ) , p );
        f *= cos(p.y)*cos(p.x)-0.1-cos(p.z*7.0+time*7.0)*cos(p.x*3.0)*cos(p.y*4.0)*0.1;
        np.y = objd - f;
        
        p = float3( dtt.x , dtt.y , dtt.z + 0.01 );
        f = 1.0;
        f *= distance( float3( cos1+sin0_2 , 0.3 , 2.0+cos0_5*0.5 ) , p );
        f *= distance( float3( -cos0_7 , 0.3 , 2.0+sin_0_5 ) , p );
            f *= distance( float3( -sin0_2*0.5 , sin1 , 2.0 ) , p );
        f *= cos(p.y)*cos(p.x)-0.1-cos(p.z*7.0+time*7.0)*cos(p.x*3.0)*cos(p.y*4.0)*0.1;
        np.z = objd - f;
        
        float d = length( np );
        np.y /= d;
        np.z /= d;
        
        color = max( -0.5 * np.z , 0.0 ) + max( -0.5 *np.y + 0.5 * np.z , 0.0 ) * 0.5;
        float3 rgb = float3(color  + 0.1 * tt * 0.025 , color  + 0.2 * tt * 0.025  , color + 0.5 * tt * 0.025   );
        rgb.x = max( 0.0 , min( 1.0 , rgb.x ) );
        rgb.y = max( 0.0 , min( 1.0 , rgb.y ) );
        rgb.z = max( 0.0 , min( 1.0 , rgb.z ) );
        
        dst.rgb = rgb;
        
       
      }

    }
    
}</pre>

And here the Actionscript part:

<pre lang="actionscript">package
 {
    import flash.display.*;
    import flash.events.*;
    import flash.filters.*;
    import flash.net.*;
    import flash.utils.ByteArray;
    
    import net.hires.debug.Stats;
    // SWF Metadata 
    [SWF(width = "520", height = "128", backgroundColor = "#000000", framerate = "1")]
    public class MetaTunnelBender extends Sprite {

        [Embed("test/MetaTunnel-stupid.pbj", mimeType = "application/octet-stream")]
        private var TestFilter: Class;
        private var playing : Boolean;

        private var im: Bitmap;
        private var job:ShaderJob;
        private var shader: Shader;
        private var shaderfilter:ByteArray;
        private var time:Number = 0.0;
        private const SIZE:Number = 64;
        private const WHITE:BitmapData = new BitmapData( SIZE , SIZE , false , 0xffffff );
        
        public function MetaTunnelBender() : void {
        	stage.frameRate = 20;
            im = new Bitmap( WHITE.clone() );
            im.scaleX = im.scaleY = 2;
            addChild(im);
            
            // stat info
            var s:DisplayObject = new Stats();
            addChild( s );
            s.x = 128;
            
            //Pass the embedded filter to the Shader as a ByteArray 
            shaderfilter = new TestFilter() as ByteArray;
            shader = new Shader( shaderfilter );
            shader.data.size.value = [ SIZE ];

			//start shaderjob (async start won't work - bug?)            
            job = new ShaderJob( shader , im.bitmapData , im.width , im.height );
			job.start( true );
			
			// let's start/stop on click
			stage.addEventListener( MouseEvent.CLICK , click );
            
            // render first frame
			enterframe();
        }
        
        private function enterframe( e:Event = null ) : void {
        	time += 0.05;
			shader.data.time.value = [ time ];
			trace( job.progress );
            job = new ShaderJob( shader , im.bitmapData , im.width , im.height );
			job.start( true );
       }
       
        private function click( e:* = null ):void {
        	if( !playing ) {
	           addEventListener( Event.ENTER_FRAME , enterframe );
	        } else {
	           removeEventListener( Event.ENTER_FRAME , enterframe );
	        }
	        playing = !playing;
        }

    }

}</pre>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>252</wp:post_id>
		<wp:post_date>2009-04-17 22:37:31</wp:post_date>
		<wp:post_date_gmt>2009-04-17 21:37:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>metatunnel-with-pixel-bender</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="3d"><![CDATA[3d]]></category>
		<category domain="category" nicename="actionscript"><![CDATA[Actionscript]]></category>
		<category domain="post_tag" nicename="actionscript"><![CDATA[Actionscript]]></category>
		<category domain="post_tag" nicename="labs"><![CDATA[Labs]]></category>
		<category domain="post_tag" nicename="pixel-bender"><![CDATA[Pixel Bender]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>71</wp:comment_id>
			<wp:comment_author><![CDATA[Jackson Dunstan]]></wp:comment_author>
			<wp:comment_author_email>jackson@jacksondunstan.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.jacksondunstan.com</wp:comment_author_url>
			<wp:comment_author_IP>12.192.106.104</wp:comment_author_IP>
			<wp:comment_date>2009-10-01 02:25:31</wp:comment_date>
			<wp:comment_date_gmt>2009-10-01 01:25:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I get about 8 FPS on a 3.0 Ghz Intel Core 2 Duo on Windows XP. Your AS3 version is a ton faster, although there is no framerate counter so I can't quantify that.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>139</wp:comment_id>
			<wp:comment_author><![CDATA[Og2t]]></wp:comment_author>
			<wp:comment_author_email>tomek@blog2t.net</wp:comment_author_email>
			<wp:comment_author_url>http://play.blog2t.net</wp:comment_author_url>
			<wp:comment_author_IP>81.136.238.195</wp:comment_author_IP>
			<wp:comment_date>2010-09-21 09:57:10</wp:comment_date>
			<wp:comment_date_gmt>2010-09-21 08:57:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nice try though! The unrolled IFs might be a problem. Try http://www.simppa.fi/source/LoopMacros.pbk]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>140</wp:comment_id>
			<wp:comment_author><![CDATA[betabong]]></wp:comment_author>
			<wp:comment_author_email>sklaus@betabong.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.betabong.com</wp:comment_author_url>
			<wp:comment_author_IP>77.58.222.42</wp:comment_author_IP>
			<wp:comment_date>2010-09-21 16:39:41</wp:comment_date>
			<wp:comment_date_gmt>2010-09-21 15:39:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Like that macro. If I ever find time to play around with Pixel Bender, I'll give it a try. Cheers!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>139</wp:comment_parent>
			<wp:comment_user_id>3</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>744</wp:comment_id>
			<wp:comment_author><![CDATA[Christian]]></wp:comment_author>
			<wp:comment_author_email>XTREME104@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>71.212.82.125</wp:comment_author_IP>
			<wp:comment_date>2012-03-04 21:33:10</wp:comment_date>
			<wp:comment_date_gmt>2012-03-04 20:33:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm having no noticable CPU usage and I'm getting 13fps.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
				<title>links for 2009-04-18</title>
		<link>http://blog.betabong.com/2009/04/19/links-for-2009-04-18/</link>
		<pubDate>Sun, 19 Apr 2009 01:30:25 +0000</pubDate>
		<dc:creator><![CDATA[delicious]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/2009/04/19/links-for-2009-04-18/</guid>
		<description></description>
		<content:encoded><![CDATA[<ul class="delicious"><li>
                <div class="delicious-link"><a href="http://atelier.ie/">Atelier David Smith</a></div>
                <div class="delicious-extended">A simple but beautifully executed idea. You can resize, navigate by keyboard .. many details I like. Only thing: no mouse wheel support and not too nice aliased font in content section.</div>
                <div class="delicious-tags">(tags: <a href="http://delicious.com/sok/flash">flash</a> <a href="http://delicious.com/sok/inspiration">inspiration</a> <a href="http://delicious.com/sok/portfolio">portfolio</a> <a href="http://delicious.com/sok/typography">typography</a> <a href="http://delicious.com/sok/agency">agency</a>)</div>
            </li><li>
                <div class="delicious-link"><a href="http://www.arias.ca/">David Arias - Portfolio</a></div>
                <div class="delicious-extended">It&#39;s refreshing to see something so clean and simple, yet pretty. No effects, no animation. Clean and slick.</div>
                <div class="delicious-tags">(tags: <a href="http://delicious.com/sok/inspiration">inspiration</a> <a href="http://delicious.com/sok/portfolio">portfolio</a> <a href="http://delicious.com/sok/html">html</a>)</div>
            </li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>261</wp:post_id>
		<wp:post_date>2009-04-19 02:30:25</wp:post_date>
		<wp:post_date_gmt>2009-04-19 01:30:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>links-for-2009-04-18</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename=""><![CDATA[]]></category>
	</item>
	<item>
				<title>BBML Presentation at SFUG</title>
		<link>http://blog.betabong.com/2009/04/22/bbml-presentation/</link>
		<pubDate>Wed, 22 Apr 2009 08:02:14 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?p=262</guid>
		<description></description>
		<content:encoded><![CDATA[Yesterday I had a presentation at the <a href="http://www.sfug.ch/?p=123">SFUG meeting</a> covering some bits of my rewritten BBML framework (originated from the project laax.com). I've tried to share some insights into the technical concept and strategies for CSS parsing, <a href="http://en.wikipedia.org/wiki/CSS_selector">CSS selectors</a> and layout validation.

<img src="http://blog.betabong.com/wp-content/uploads/2009/04/sfug-pres.jpg" alt="Sev presenting..." title="Sev presenting..." width="520" height="390" class="alignnone size-full wp-image-266" />
<small>Picture by <a href="http://www.entropy.ch/about/welcome.html">Marc Liyanage</a></small>

It's been surprisingly fun (I give credits to the beer sponsored by <a href="http://www.nemos.ch/">Nemos</a>). People even managed to pretend they'd be interested in what I was prosing, so credit to them too!

<a href="http://www.flashatthelake.ch" style="float: right; display: block; margin-left: 10pt; margin-bottom: 10pt;"><img src="http://fatl.ch/banners/fatl_button3_120x60.gif" width="120" height="60" hspace="10" vspace="10" border="0" alt="Flash at the lake Swiss Flash User Group Conference." /></a> I'd also like to mention that there'll be <strong>the</strong> swiss flash event soon: Flash at the Lake will not only pamper you with appearances of <a href="http://fatl.ch/?page_id=16">great national and international Flash enthustiacs</a>, it will also give anybody attending the pleasure to enjoy one of Zurich's greatest locations with people who don't think of you as a storm lightning adorer when you sit in the sun twittering Flash into the clear lake. And all that to a fantastic price. Check it out at <a href="http://fatl.ch">fatl.ch</a>

So here we go with the presentation (<a href="http://www.apple.com/quicktime/download/">Quicktime</a> so you can enjoy the marvelous effects):

[quicktime]/wp-content/uploads/2009/04/sfug-presentation-bbml-hq.mov[/quicktime]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>262</wp:post_id>
		<wp:post_date>2009-04-22 09:02:14</wp:post_date>
		<wp:post_date_gmt>2009-04-22 08:02:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bbml-presentation</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="actionscript"><![CDATA[Actionscript]]></category>
		<category domain="post_tag" nicename="actionscript"><![CDATA[Actionscript]]></category>
		<category domain="post_tag" nicename="as3"><![CDATA[AS3]]></category>
		<category domain="post_tag" nicename="bbml"><![CDATA[bbml]]></category>
		<category domain="post_tag" nicename="css"><![CDATA[css]]></category>
		<category domain="post_tag" nicename="framework"><![CDATA[framework]]></category>
		<category domain="category" nicename="tech"><![CDATA[Frontend]]></category>
		<category domain="post_tag" nicename="parsing"><![CDATA[parsing]]></category>
		<category domain="post_tag" nicename="presentation"><![CDATA[presentation]]></category>
		<category domain="category" nicename="random"><![CDATA[Random]]></category>
		<category domain="post_tag" nicename="sfug"><![CDATA[sfug]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Switch Flash Browser Plugin on Mac OS X</title>
		<link>http://blog.betabong.com/2009/04/27/switch-flash-browser-plugin-mac/</link>
		<pubDate>Mon, 27 Apr 2009 13:12:35 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?p=273</guid>
		<description></description>
		<content:encoded><![CDATA[Sometimes you need to test your Flash stuff with different plugin versions. Even if you just want to run some <a href="/2009/04/05/flash-debug-speed/">performance tests</a>, it is very useful to switch to the release player (see below for another example).

For <a href="http://www.sephiroth.it/weblog/archives/2006/10/flash_switcher_for_firefox.php">windows there is a neat Firefox Plugin</a> that makes switching quite a snap. <a href="http://sephiroth.it/firefox/flash_switcher/">On Mac there is one too</a> – I haven't tested it, but it's supposed to work (though I'm not too sure about that when I read <a href="http://www.sephiroth.it/weblog/archives/2006/11/flash_switcher_for_osx.php#comments">these comments here</a>). Still I prefer to work with Safari and I kind of dislike the thought of starting Firefox to just switch Plugins.

<a href="http://code.google.com/p/wspluginswitcher/" style="float: left; display: block; margin-right: 10pt; margin-bottom: 10pt;"><img src="http://blog.betabong.com/wp-content/uploads/2009/04/wspluginswitcher-icon.jpg" alt="wspluginswitcher-icon" title="wspluginswitcher-icon" width="128" height="128" class="alignleft size-full wp-image-274" /></a>Fortunately I've found another solution: <a href="http://code.google.com/p/wspluginswitcher/">WSPluginSwitcher</a>. This one comes as a Cocoa app and once configured (you really should <a href="http://code.google.com/p/wspluginswitcher/wiki/Setup">read this wiki page</a>), it works real well for me. Also they have <a href="http://code.google.com/p/wspluginswitcher/downloads/list">prepared plugin versions for you to download</a> (though the <a href="http://www.adobe.com/support/flashplayer/downloads.html">most recents</a> are missing, but no big deal really).

As for the speed tests, let me just give you another example (impressing enough for me to wanna switch players for real world testing).

In Debug Player:
<pre>
method...................................................ttl ms...avg ms
tare [2]                                                      0     0.00
CSSFastParser                                               603   120.60
CSSRegExpParserFast                                         987   197.40
CSSRegExpParserFastAdvanced                                1457   291.40
––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––
</pre>

In Release Player:
<pre>
method...................................................ttl ms...avg ms
tare [2]                                                      0     0.00
CSSFastParser                                               354    70.80
CSSRegExpParserFast                                         972   194.40
CSSRegExpParserFastAdvanced                                1469   293.80
––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––
</pre>

Both 10.0.22.87, and exported as release swf. Oh, and by the way tested with another useful tool from Grant Skinner: <a href="http://www.gskinner.com/blog/archives/2009/04/as3_performance.html">AS3 Performance Testing Harness</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>273</wp:post_id>
		<wp:post_date>2009-04-27 14:12:35</wp:post_date>
		<wp:post_date_gmt>2009-04-27 13:12:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>switch-flash-browser-plugin-mac</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="browser"><![CDATA[Browser]]></category>
		<category domain="post_tag" nicename="debug"><![CDATA[Debug]]></category>
		<category domain="post_tag" nicename="flash-player"><![CDATA[Flash Player]]></category>
		<category domain="category" nicename="tech"><![CDATA[Frontend]]></category>
		<category domain="post_tag" nicename="speed"><![CDATA[speed]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Daily Live of Webdesigners</title>
		<link>http://blog.betabong.com/2009/08/03/daily-live-of-webdesigners/</link>
		<pubDate>Mon, 03 Aug 2009 16:28:03 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?p=278</guid>
		<description></description>
		<content:encoded><![CDATA[You may have seen this. If not, it's worth a watch:

<object width="520" height="400"><param name="movie" value="http://www.youtube.com/v/JI3Df7-KFtw&hl=en&fs=1&hd=1"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/JI3Df7-KFtw&hl=en&fs=1&hd=1" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="520" height="400"></embed></object>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>278</wp:post_id>
		<wp:post_date>2009-08-03 17:28:03</wp:post_date>
		<wp:post_date_gmt>2009-08-03 16:28:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>daily-live-of-webdesigners</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="random"><![CDATA[Random]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>541</wp:comment_id>
			<wp:comment_author><![CDATA[Nicholas Graf]]></wp:comment_author>
			<wp:comment_author_email>email@nicholasgraf.ch</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>93.184.27.187</wp:comment_author_IP>
			<wp:comment_date>2011-12-15 16:57:40</wp:comment_date>
			<wp:comment_date_gmt>2011-12-15 15:57:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Very funny. If I only have a dollar for each time I had to have a conversation like this.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
				<title>Garbage Collection, Dictionaries and Listeners</title>
		<link>http://blog.betabong.com/2009/09/09/garbage-collection-dictionary-listener/</link>
		<pubDate>Wed, 09 Sep 2009 17:06:03 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?p=286</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://blog.betabong.com/wp-content/uploads/2009/09/031609_garbage_can.jpg"><img src="http://blog.betabong.com/wp-content/uploads/2009/09/031609_garbage_can-211x300.jpg" alt="031609_garbage_can" title="031609_garbage_can" width="211" height="300" class="alignright size-medium wp-image-290" style="float:right; margin-left: 10px;" /></a>As we all know Flash's garbage collector is a hell of a beast. It tries to free memory from "unused" objects (aka objects not somehow cross-referenced by the root). <strong>So from time to time our garbage collector checks for those objects and kicks them out of memory.. at least some of them.</strong>

There are lots of articles written about the garbage collector and I'm not going into it any deeper. Let's just summarize that no developer likes that kind of behaviour -- it's totally <strong>unpredictable</strong>. System.gc() would help a little, but it's only available to debug players.

You may say: what do you care about memory handling! And I'd answer: not that much actually! :-) But what I really care about is false behaviour that can result.

Within Flash we have two ways to keep weak references to objects: Dictionary and weak listeners (weak method closures). We use weak references so that objects will be collected by the garbage collector. Now when it comes to Dictionaries, they behave as I'd expect. A "dead" object won't be listed in a for each loop. But events events events.... <strong>they'll be dispatched to each and every "dead" object residing in memory!! Which is such a pain in the ass really!</strong>

After a lot of testing I can give only the advice you've probably heard many times before:

<strong>Always remove listeners! Even the weak ones!</strong>

Otherwise you have to potentially deal with unexpected behaviour. I may gonna create some utility class for that that deals with this problem.

<!--more-->

Here my testing code:

<pre lang="actionscript">
package
{
	import flash.display.Sprite;
	import flash.events.Event;
	import flash.events.MouseEvent;
	import flash.events.TimerEvent;
	import flash.system.System;
	import flash.text.TextField;
	import flash.text.TextFieldAutoSize;
	import flash.text.TextFormat;
	import flash.utils.Dictionary;
	import flash.utils.Timer;
	
	import net.hires.debug.Stats;

	public class MemoryLeakTest extends Sprite
	{
		public static var counter : uint;
		public static var dict:Dictionary = new Dictionary( true );
		
		private var t:TextField;
		private var makeGC:Boolean;
		private var switcher:uint;
		
		public function MemoryLeakTest()
		{
			super();
			
			t = new TextField();
			t.defaultTextFormat = new TextFormat( null, 18 , 0x999999 , true );
			t.autoSize = TextFieldAutoSize.LEFT;
			addChild(t);
			
			var timer : Timer = new Timer( 100 );
			timer.addEventListener(TimerEvent.TIMER,handleTimer);
			timer.start();
			
			stage.addEventListener(MouseEvent.CLICK,handleClick);


			stage.addChild( new Stats() );
		}
		
		public function handleTimer( event : TimerEvent ) : void {
			counter = 0;
			if ( makeGC ) System.gc();
			dispatchEvent( new Event( Event.CHANGE ) );

			var i:uint;
			for each ( var obj:* in dict ) {
				i++;
			}

			t.text = ( "Still " + counter + " dead objects living... (GC " + (makeGC?'on':'off') + ')' );
			t.appendText( '\nIn dictionary: ' + i );
			t.appendText( '\nClick to switch manual Garbage Collection aka System.gc()' );
			
			if ( switcher++ % 2 ) {
				new TestSprite( this );
				t.appendText( '\nAdded new test object (should live for 10 msec)' );
			}
		}
		public function handleClick( event : Event ) : void {
			makeGC = !makeGC;
		}
	}	
}
import flash.display.Sprite;
import flash.display.InteractiveObject;
import flash.utils.Timer;
import flash.events.TimerEvent;
import flash.events.Event;
import flash.system.System;



class TestSprite extends Sprite {
	
	// the TestSprite instance should not live longer than 10 msec
	
	
	public function TestSprite( parent : Sprite ) : void {
		// add to weak dictionary
		//MemoryLeakTest.dict[ this ] = true;
		
		// temporarily add to parent
		parent.addChild( this );
		var timer : Timer = new Timer( 10 );
		timer.addEventListener(TimerEvent.TIMER,handleTimer);
		timer.start();
		
		// listen (weak!!) to parent event - this is just for control purposes
		parent.addEventListener( Event.CHANGE , handleChange , false , 0 , true );
		
		// let's have those sprites eat some memory while alive
		this.cacheAsBitmap = true;
		graphics.beginFill(0xff0000,0.1);
		graphics.drawRect(0,0,500,500);
		graphics.endFill();
	}
	public function handleTimer( event : TimerEvent ) : void {
		( event.target as Timer ).removeEventListener(TimerEvent.TIMER,handleTimer);
		parent.removeChild(this);
	}
	public function handleChange( event : Event ) : void {
		MemoryLeakTest.counter++;
	}
}</pre>

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>286</wp:post_id>
		<wp:post_date>2009-09-09 18:06:03</wp:post_date>
		<wp:post_date_gmt>2009-09-09 17:06:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>garbage-collection-dictionary-listener</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="actionscript"><![CDATA[Actionscript]]></category>
		<category domain="category" nicename="random"><![CDATA[Random]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[system-gc-manual-garbage-collection]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Binary Fun - Bits in Bed with Actionscript</title>
		<link>http://blog.betabong.com/2009/09/22/binary-fun-bits-in-bed-with-actionscript/</link>
		<pubDate>Mon, 21 Sep 2009 23:19:40 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?p=297</guid>
		<description></description>
		<content:encoded><![CDATA[<img src="http://blog.betabong.com/wp-content/uploads/2009/09/betabits.png" alt="betabits" title="betabits" width="503" height="191" class="alignright size-full wp-image-299" />

I went down a few algorithmic roads recently, digging into path finding and – for some obscure reasons – bit manipulations. Or byte. Whatever.

Along this way some utility methods (or functions) were born, and I thought: May be some day some of them may be in use to any of you ;)

For my dear non-geeky readers: A bit is the smallest part in software. It's either this or that, either 0 or 1, either false or true. With a group of 2 bits you already have 4 states: 00, 01, 10 and 11. With 8 it's 256 and so on (2^n).

As it would be too boring to just type 0 or 1, and because we have more than 2 fingers, man invented numbers to accumulate these bits: so 9 stands for 1001, and because 9 is shorter than 1001, we prefer 9. Some even write AB for 10101011, but that's where we come back to geeky world.

So after this highly informative introduction, let's get to some code. First, let's count bits:

<pre lang="actionscript">
static public function countBits( value : uint ) : uint {
	var count:uint = 0;
	while (value) {
		if ( value & 1 ) {
			count++;
		}
		value >>>= 1;
	}
	return count;
}
</pre>

Example: 
countBits( 0xAB ) -> 5

Now sometimes you might wanna know: Does this data contain no more than 1 bit? We could just ask countBits( value ) == 1. But that's not as speedy as it should be, right? So here we go:

<pre lang="actionscript">
static public function is_1_bit( value : uint ) : Boolean {
	var count:uint = 0;
	while (value) {
		if ( value & 1 ) {
			if (count == 1) return false;
			count++;
		}
		value >>>= 1;
	}
	return count == 1;
}
</pre>

Examples: 
is_1_bit( 0xAB ) -> false
is_1_bit( 0x400 ) -> true

uint are by the way 32bit data, so a maximum of 32 of these bits we're talking about can be turned on or off. That's a lot of data. 4'294'967'296 combinations (though not that high compared to the numbers we read every day in the newspapers recently). Anyway, sometimes we might wanna access and set only a group of bits (usually 4 or 8) within this quite large row of bits:

<pre lang="actionscript">
static public function getBitGroup( value : uint , group : uint , len : uint = 4 ) : uint {
	return ( value >> (group*len) ) % (1 << len);
}

static public function setBitGroup( value : uint , groupValue :uint , group : uint , len : uint = 4 ) : uint {
	var pos:uint = group * len;
	var mask:uint = n_bits(pos);
	var right_bits:uint = value & mask;
	value >>>= pos + len;
	value <<= len;
	value |= groupValue;
	value <<= pos;
	value |= right_bits;
	return value;
}
</pre>

Don't they look just groovy?! Yeah baby!

Anyway, that's all for now. Stay tuned for some crazy path finding. If I find time (sometimes I wonder how all those bloggers find their time to write so much..) Not to mention Twitter. Boohaa.

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>297</wp:post_id>
		<wp:post_date>2009-09-22 00:19:40</wp:post_date>
		<wp:post_date_gmt>2009-09-21 23:19:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>binary-fun-bits-in-bed-with-actionscript</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="actionscript"><![CDATA[Actionscript]]></category>
		<category domain="post_tag" nicename="actionscript"><![CDATA[Actionscript]]></category>
		<category domain="post_tag" nicename="speed"><![CDATA[speed]]></category>
		<category domain="post_tag" nicename="utility"><![CDATA[Utility]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>67</wp:comment_id>
			<wp:comment_author><![CDATA[peko]]></wp:comment_author>
			<wp:comment_author_email>peko@gasubasu.com</wp:comment_author_email>
			<wp:comment_author_url>http://gasubasu.com</wp:comment_author_url>
			<wp:comment_author_IP>195.91.129.66</wp:comment_author_IP>
			<wp:comment_date>2009-09-22 15:50:49</wp:comment_date>
			<wp:comment_date_gmt>2009-09-22 14:50:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[What about binary xor?
AS3 don`t have an default operator :(]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68</wp:comment_id>
			<wp:comment_author><![CDATA[betabong]]></wp:comment_author>
			<wp:comment_author_email>sklaus@betabong.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.betabong.com</wp:comment_author_url>
			<wp:comment_author_IP>84.72.60.30</wp:comment_author_IP>
			<wp:comment_date>2009-09-22 17:52:23</wp:comment_date>
			<wp:comment_date_gmt>2009-09-22 16:52:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[XOR is deadly easy :-)
<pre lang="actionscript">
function xor( v1:uint , v2:uint ) : uint {
	return v1 ^ v2;
}
</pre>]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>67</wp:comment_parent>
			<wp:comment_user_id>3</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>70</wp:comment_id>
			<wp:comment_author><![CDATA[Jackson Dunstan]]></wp:comment_author>
			<wp:comment_author_email>jackson@jacksondunstan.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.jacksondunstan.com</wp:comment_author_url>
			<wp:comment_author_IP>12.192.106.104</wp:comment_author_IP>
			<wp:comment_date>2009-10-01 02:19:53</wp:comment_date>
			<wp:comment_date_gmt>2009-10-01 01:19:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your function to check if an int has only a single one value is the same as a function that checks if an int is a power of two. You can do so without the loop for extra speed like this:

<pre lang="Actionscript">
function is_1_bit(value:uint): Boolean
{
	return value == 0x80000000 || (value & -value) == value;
}
</pre>

The formula won't work for (1&lt;&lt;31), hence the need for the explicit check.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>73</wp:comment_id>
			<wp:comment_author><![CDATA[betabong]]></wp:comment_author>
			<wp:comment_author_email>sklaus@betabong.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.betabong.com</wp:comment_author_url>
			<wp:comment_author_IP>84.72.60.30</wp:comment_author_IP>
			<wp:comment_date>2009-10-01 08:41:29</wp:comment_date>
			<wp:comment_date_gmt>2009-10-01 07:41:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Love that!! And it's about 40% faster too :) Allow me one tiny little correction though:

<pre lang="Actionscript">
function is_1_bit(value:uint): Boolean
{
	return value != 0 && ( value == 0x80000000 || (value & -value) == value );
}
</pre>]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>70</wp:comment_parent>
			<wp:comment_user_id>3</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>91</wp:comment_id>
			<wp:comment_author><![CDATA[Andy Stricker]]></wp:comment_author>
			<wp:comment_author_email>andy@knitter.ch</wp:comment_author_email>
			<wp:comment_author_url>http://www.knitter.ch/</wp:comment_author_url>
			<wp:comment_author_IP>87.245.101.92</wp:comment_author_IP>
			<wp:comment_date>2010-04-20 21:40:19</wp:comment_date>
			<wp:comment_date_gmt>2010-04-20 20:40:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[countBits is called population count or hamming weight in computer science. There is a good chapter about the optimization available for population count in the O'Reilly book "Beautiful Code" in chapter Chapter 10: "The Quest for an Accelerated Population Count" (http://oreilly.com/catalog/9780596510046). I'll like to see how those improvements apply for high level languages.

Following an optimized function for 32 bit unsigned int population count in Javascript (derived from http://en.wikipedia.org/wiki/Hamming_weight):

<pre lang="actionscript">
function pop(x) {
   x &= 0xFFFFFFFF;
   x -= (x >> 1) & 0x55555555;
   x = (x & 0x33333333) + ((x >> 2) & 0x33333333);
   x = (x + (x >> 4)) & 0x0f0f0f0f;
   return (x * 0x01010101) >> 24;
}
</pre>]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
				<title>links for 2009-11-18</title>
		<link>http://blog.betabong.com/2009/11/19/links-for-2009-11-18/</link>
		<pubDate>Thu, 19 Nov 2009 01:34:15 +0000</pubDate>
		<dc:creator><![CDATA[delicious]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/2009/11/19/links-for-2009-11-18/</guid>
		<description></description>
		<content:encoded><![CDATA[<ul class="delicious"><li>
                <div class="delicious-link"><a href="http://www.huntstudio.com.au/">Hunt. | Multi-disciplinary design studio | Melbourne</a></div>
                <div class="delicious-extended">Some nice simplistic branding stuff.</div>
                <div class="delicious-tags">(tags: <a href="http://delicious.com/sok/inspiration">inspiration</a> <a href="http://delicious.com/sok/design">design</a> <a href="http://delicious.com/sok/identity">identity</a> <a href="http://delicious.com/sok/branding">branding</a> <a href="http://delicious.com/sok/print">print</a> <a href="http://delicious.com/sok/web">web</a> <a href="http://delicious.com/sok/portfolio">portfolio</a>)</div>
            </li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>303</wp:post_id>
		<wp:post_date>2009-11-19 02:34:15</wp:post_date>
		<wp:post_date_gmt>2009-11-19 01:34:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>links-for-2009-11-18</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename=""><![CDATA[]]></category>
	</item>
	<item>
				<title>How to watch TV from abroad</title>
		<link>http://blog.betabong.com/2009/11/30/how-to-watch-tv-from-abroad/</link>
		<pubDate>Mon, 30 Nov 2009 15:12:17 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?p=304</guid>
		<description></description>
		<content:encoded><![CDATA[From time to time I spend a few weeks abroad. From time to time I'd like to watch swiss tv while I'm there. There are services like Zattoo or Wilmaa out there, that allow you to watch tv via internet, but they only allow IPs from within your home country, in my case Switzerland.

So we want them to believe that we're home, not 4000 miles away on some sunny island (dream on). The solution is kind of simple actually, once you know how to do it, but it took me far too long to find it out anyway – so I thought it might be worth sharing (which also prevents me forgetting it).

We just need to route all relevant internet traffice through a home computer. You need to have SSH access to this computer, and you need to have a decent internet upload speed for video stuff. Lucky me I have a loyal and faithful Mac Mini at home, acting as Media Center, SVN server and .. well, as a decent TV proxy :-) Here's how you do:
<ol>
	<li>Open Terminal, enter:
<strong>ssh -2 -C -D 2001 </strong><em><strong>username</strong></em><strong>@</strong><em><strong>yourserver.com</strong></em>
(<em>username</em> is your account on the remote machine – and <em>yourserver.com</em> could be an ip or whatever address your server has. I use <a href="http://www.dyndns.com/">Dynamic DNS</a> for mine.)</li>
	<li>Enter the password for <em>username</em></li>
	<li>Open «<strong>System Preferences</strong>» and go to «<strong>Network</strong>» (You can close the Terminal). Click the Button «<strong>Advanced...</strong>»
<a href="http://blog.betabong.com/wp-content/uploads/2009/11/Screen-shot-2009-11-30-at-15.41.17.png"><img class="size-medium wp-image-305" title="Screen shot 2009-11-30 at 15.41.17" src="http://blog.betabong.com/wp-content/uploads/2009/11/Screen-shot-2009-11-30-at-15.41.17-300x234.png" alt="Screen shot 2009-11-30 at 15.41.17" width="300" height="234" /></a></li>
	<li style="clear: both">Go to «<strong>Proxies</strong>» and activate SOCKS Proxy and enter
Socks Proxy Server: <strong>127.0.0.1</strong> : <strong>2001</strong> (see picture)</li>
	<li>Go to <a href="http://whatismyipaddress.com/">What Is My IP Address?</a> or this <a href="http://www.ip-adress.com/ip_tracer/">IP Tracer</a> to check if everything works. If the map shows you're at home, you're good to go!</li>
</ol>
Now for TV I recommand <a href="http://www.wilmaa.com/">Wilmaa</a>: worked perfectly for me. Surprisingly good quality, and it's for free! Great for football matches or Heidi in swiss german ;-)

<a href="http://blog.betabong.com/wp-content/uploads/2009/11/Screen-shot-2009-11-30-at-Mo.-30.11-16.24.56.png"><img class="alignnone size-large wp-image-313" title="Screen shot 2009-11-30 at Mo. 30.11  16.24.56" src="http://blog.betabong.com/wp-content/uploads/2009/11/Screen-shot-2009-11-30-at-Mo.-30.11-16.24.56-520x325.png" alt="Screen shot 2009-11-30 at Mo. 30.11  16.24.56" width="512" height="320" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>304</wp:post_id>
		<wp:post_date>2009-11-30 16:12:17</wp:post_date>
		<wp:post_date_gmt>2009-11-30 15:12:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>how-to-watch-tv-from-abroad</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="mac"><![CDATA[Mac]]></category>
		<category domain="post_tag" nicename="mac"><![CDATA[Mac]]></category>
		<category domain="post_tag" nicename="proxy"><![CDATA[proxy]]></category>
		<category domain="post_tag" nicename="tv"><![CDATA[tv]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>135</wp:comment_id>
			<wp:comment_author><![CDATA[Leo Iqbal]]></wp:comment_author>
			<wp:comment_author_email>info@watch-tv-abroad.com</wp:comment_author_email>
			<wp:comment_author_url>http://watch-tv-abroad.com</wp:comment_author_url>
			<wp:comment_author_IP>78.145.0.41</wp:comment_author_IP>
			<wp:comment_date>2010-09-02 16:30:07</wp:comment_date>
			<wp:comment_date_gmt>2010-09-02 15:30:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[http://watch-tv-abroad.com Click this link to get a website that gives full video instructions and the necessary software to set up a private VPN proxy. This simply means BBC iPlayer, ITV Player, Channel 4OD, SkyPlayer will think you are in the UK and grant you access. The streaming speeds are the same as if you were on your broadband at home. The website is Watch-TV-Abroad.com and you can watch a youtube demo video by clicking this link and skipping the first 2 1/2 minutes http://www.youtube.com/watch?v=r4Yy5uH4XyI]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
				<title>links for 2010-03-22</title>
		<link>http://blog.betabong.com/2010/03/23/links-for-2010-03-22/</link>
		<pubDate>Tue, 23 Mar 2010 01:35:57 +0000</pubDate>
		<dc:creator><![CDATA[delicious]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/2010/03/23/links-for-2010-03-22/</guid>
		<description></description>
		<content:encoded><![CDATA[<ul class="delicious"><li>
                <div class="delicious-link"><a href="http://www.insideria.com/2010/01/intellij-idea-9-for-flash-dev.html">IntelliJ Idea 9 For Flash</a></div>
                <div class="delicious-extended">A developers first impression. I really like IntelliJ.</div>
                <div class="delicious-tags">(tags: <a href="http://delicious.com/sok/flash">flash</a> <a href="http://delicious.com/sok/development">development</a> <a href="http://delicious.com/sok/actionscript">actionscript</a> <a href="http://delicious.com/sok/adobe">adobe</a> <a href="http://delicious.com/sok/intellij">intellij</a>)</div>
            </li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>315</wp:post_id>
		<wp:post_date>2010-03-23 02:35:57</wp:post_date>
		<wp:post_date_gmt>2010-03-23 01:35:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>links-for-2010-03-22</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename=""><![CDATA[]]></category>
	</item>
	<item>
				<title>Use GZip compression for your website</title>
		<link>http://blog.betabong.com/2010/03/25/use-gzip-compression-for-html-css-javascript-xml/</link>
		<pubDate>Thu, 25 Mar 2010 09:53:50 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?p=316</guid>
		<description></description>
		<content:encoded><![CDATA[Most of my Flash apps or websites use XML files, either for communication or initial data. They can get quite large, reaching about 100 kb or more is not seldom. You might say: so what?! 100 kb is like nothing for a bandwidth nowadays! Well, if you've every used iPhone tethering in an area where there is no 3g network, you start appreciating every single byte you won't have to suck from the net. (On a side note: That's when Opera really comes in handy.)
<h3>XML files compress really well</h3>
Because XML usually contains a lot of repetitive elements (noticably tags and attributes), they are like a compressor's darling. Just zip a few of your XML files and you'll see.

Now I kind of always thought that on nowadays webservers gzip compression is activated by default anyway. Which was wrong, at least for quite a bunch of servers I use.
<h3>Activate GZip compression</h3>
If your server installation contains the deflate module (which is the case for all of the ones I use), then you can simply add the following line to your .htaccess file:
<pre lang="text"># compress all html, plain text, xml, css and javascript:
AddOutputFilterByType DEFLATE text/html text/plain text/xml text/css application/x-javascript</pre>
AddOutputFilterByType DEFLATE text/html text/plain text/xml text/css application/x-javascript
<div>I've also tried more complex constructs found on the web, but they resulted in «Internal server errors» which is why I'll go along with this simple one for now.</div>
<div><strong><span style="font-weight: normal;">The effects are dramatic! I usually get about 70% – 80% of reduction for non-minimized files, </span></strong></div>
<div><h3>Examples</h3></div>
<div>
<table border="0" class="small">
<tbody>
<tr>
<th></th>
<th>Uncompressed</th>
<th>Compressed</th>
<th>Reduction</th>
</tr>
<tr>
<td><strong>Javascript minimized</strong>
<a href="http://ajax.googleapis.com/ajax/libs/mootools/1.2.4/mootools-yui-compressed.js">MooTools YUI compressed</a></td>
<td>66,867</td>
<td>20,964</td>
<td>68.6%</td>
</tr>
<tr>
<td><strong>Javascript minimized</strong>
<a href="http://ajax.googleapis.com/ajax/libs/mootools/1.2.4/mootools.jss">MooTools uncompressed</a></td>
<td>102,991</td>
<td>27,599</td>
<td>73.2%</td>
</tr>
<tr>
<td><strong>XML/CSS combined</strong>
<a href="http://www.ceylor.ch/pages/home.xml">A larger initial XML file for a Flash website of mine</a></td>
<td>84,316</td>
<td>18,229</td>
<td>78.4%</td>
</tr>
<tr>
<td><strong>XML/CSS combined</strong>
<a href="http://www.ceylor.ch/pages/home.xml">A larger initial XML file for a Flash website of mine</a></td>
<td>84,316</td>
<td>18,229</td>
<td>78.4%</td>
</tr>
<tr>
<td><strong>HTML</strong>
<a href="http://20min.ch">A swiss news website, 20 Minuten</a></td>
<td>148,587</td>
<td>29,385</td>
<td>80.2%</td>
</tr>
<tr>
<td><strong>HTML</strong>
<a href="http://blog.betabong.com">My blogs home page</a></td>
<td>51,638</td>
<td>12,991</td>
<td>74.8%</td>
</tr>
</tbody></table>
<h3>Tools</h3>
If you want to test your website, these pages are very informative (first one is faster, second one more informative):

<a href="http://www.whatsmyip.org/http_compression/">http://www.whatsmyip.org/http_compression/</a></div>
<a href="http://www.gidnetwork.com/tools/gzip-test.php">http://www.gidnetwork.com/tools/gzip-test.php</a>

I also like this one, although it only gives you little info on content-encoding. But very much on top of that :-)
<a href="http://www.wmtips.com/tools/info/">http://www.wmtips.com/tools/info/</a>

This little Firefox addon will tell you wether any site you visit has GZip activated:
<a href="https://addons.mozilla.org/en-US/firefox/addon/54647">https://addons.mozilla.org/en-US/firefox/addon/54647</a> (Content Encoding Detector)
<h3 style="font-size: 1.17em;">Conclusion</h3>
HTML websites will profit a lot from this compression, as well as Flash sites (if just for your swfobject.js) that use textual communication. And best of all: it won't need any kungfu effort on your side! And: practically all browsers support it. (I've only heard of problems with IE6, but then, you know, f*** IE6)

<h3>Update:</h3>

A more complete solution for your .htaccess file:

<pre lang="text">
<IfModule mod_deflate.c>
	AddOutputFilterByType DEFLATE text/html
	AddOutputFilterByType DEFLATE text/xml

	AddOutputFilterByType DEFLATE image/x-icon

	AddOutputFilterByType DEFLATE text/css

	AddOutputFilterByType DEFLATE text/javascript
	AddOutputFilterByType DEFLATE application/javascript
	AddOutputFilterByType DEFLATE application/x-javascript
	AddOutputFilterByType DEFLATE text/x-js
	AddOutputFilterByType DEFLATE text/ecmascript
	AddOutputFilterByType DEFLATE application/ecmascript
	AddOutputFilterByType DEFLATE text/vbscript
	AddOutputFilterByType DEFLATE text/fluffscript

	AddOutputFilterByType DEFLATE image/svg+xml
	AddOutputFilterByType DEFLATE application/x-font-ttf
	AddOutputFilterByType DEFLATE application/x-font
	AddOutputFilterByType DEFLATE font/opentype
	AddOutputFilterByType DEFLATE font/otf
	AddOutputFilterByType DEFLATE font/ttf
	AddOutputFilterByType DEFLATE application/x-font-truetype
	AddOutputFilterByType DEFLATE application/x-font-opentype
	AddOutputFilterByType DEFLATE application/vnd.ms-fontobject
	AddOutputFilterByType DEFLATE application/vnd.oasis.opendocument.formula-template
</IfModule>
</pre>
(<a href="http://www.speedingupwebsite.com/2010/01/08/use-the-gzip-power/">Source</a>)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>316</wp:post_id>
		<wp:post_date>2010-03-25 10:53:50</wp:post_date>
		<wp:post_date_gmt>2010-03-25 09:53:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>use-gzip-compression-for-html-css-javascript-xml</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="browser"><![CDATA[Browser]]></category>
		<category domain="post_tag" nicename="compression"><![CDATA[Compression]]></category>
		<category domain="post_tag" nicename="css"><![CDATA[css]]></category>
		<category domain="category" nicename="tech"><![CDATA[Frontend]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="speed"><![CDATA[speed]]></category>
		<category domain="post_tag" nicename="xml"><![CDATA[xml]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>links for 2010-04-01</title>
		<link>http://blog.betabong.com/2010/04/02/links-for-2010-04-01/</link>
		<pubDate>Fri, 02 Apr 2010 01:34:10 +0000</pubDate>
		<dc:creator><![CDATA[delicious]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/2010/04/02/links-for-2010-04-01/</guid>
		<description></description>
		<content:encoded><![CDATA[<ul class="delicious"><li>
                <div class="delicious-link"><a href="http://www.thejohnnycashproject.com/#/explore/TopRated">THE JOHNNY CASH PROJECT</a></div>
                <div class="delicious-extended">Fantastic idea, fantastic implementation!</div>
                <div class="delicious-tags">(tags: <a href="http://delicious.com/sok/flash">flash</a> <a href="http://delicious.com/sok/drawing">drawing</a> <a href="http://delicious.com/sok/painting">painting</a> <a href="http://delicious.com/sok/inspiration">inspiration</a> <a href="http://delicious.com/sok/movie">movie</a> <a href="http://delicious.com/sok/community">community</a> <a href="http://delicious.com/sok/collaboration">collaboration</a>)</div>
            </li></ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>325</wp:post_id>
		<wp:post_date>2010-04-02 02:34:10</wp:post_date>
		<wp:post_date_gmt>2010-04-02 01:34:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>links-for-2010-04-01</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename=""><![CDATA[]]></category>
	</item>
	<item>
				<title>jQuery Plugin: Round Text</title>
		<link>http://blog.betabong.com/2010/05/13/jquery-plugin-round-text/</link>
		<pubDate>Thu, 13 May 2010 09:49:40 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?p=326</guid>
		<description></description>
		<content:encoded><![CDATA[My very first jQuery plugin: warps the text along a circle. It's simple and certainly far from perfect – I needed it, so may be you'll need it too :-)

<h3>Usage:</h3>
<pre lang="javascript">$(elem).roundtext( {radius:150} );</pre>
Tested on latest Opera, Safari, Chrome and Firefox (I assume it won't work in bloody IE)

<h3>Download:</h3>
<a class="download" href="/showcase/jquery-roundtext/jquery.roundtext.js">jquery.roundtext.js</a>

<h3>Example:</h3>
<iframe src="/showcase/jquery-roundtext/jquery.roundtext.html" width="100%" height="550" frameborder="0"></iframe>

I used this function here: <a href="http://www.retro-fanshirt.com">www.retro-fanshirt.com</a> (Turn off plugins to see html version)

Sometimes I can see strange behaviour with Safari when it wouldn't consider space characters. Just so you know.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>326</wp:post_id>
		<wp:post_date>2010-05-13 10:49:40</wp:post_date>
		<wp:post_date_gmt>2010-05-13 09:49:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jquery-plugin-round-text</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="jquery"><![CDATA[jquery]]></category>
		<category domain="category" nicename="random"><![CDATA[Random]]></category>
		<category domain="post_tag" nicename="rotate"><![CDATA[rotate]]></category>
		<category domain="post_tag" nicename="transform"><![CDATA[transform]]></category>
		<category domain="post_tag" nicename="webkit"><![CDATA[webkit]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>149</wp:comment_id>
			<wp:comment_author><![CDATA[Jacob]]></wp:comment_author>
			<wp:comment_author_email>jacob@jacobdubail.com</wp:comment_author_email>
			<wp:comment_author_url>http://jacobdubail.com</wp:comment_author_url>
			<wp:comment_author_IP>108.1.210.179</wp:comment_author_IP>
			<wp:comment_date>2010-10-15 01:52:43</wp:comment_date>
			<wp:comment_date_gmt>2010-10-15 00:52:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This is great.  Love the idea. Thanks for sharing.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>387</wp:comment_id>
			<wp:comment_author><![CDATA[Pezhman]]></wp:comment_author>
			<wp:comment_author_email>pfkdesign@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>87.144.248.140</wp:comment_author_IP>
			<wp:comment_date>2011-09-30 16:06:10</wp:comment_date>
			<wp:comment_date_gmt>2011-09-30 15:06:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[great job, i found a way to get the same result in all  browser. check this website and use the code in your plug in to transform.
http://www.useragentman.com/blog/2010/03/09/cross-browser-css-transforms-even-in-ie/

hope this help you :-) 
have fun]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1063</wp:comment_id>
			<wp:comment_author><![CDATA[Siddharth Jhanji]]></wp:comment_author>
			<wp:comment_author_email>jhanji.siddharth@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.242.92.202</wp:comment_author_IP>
			<wp:comment_date>2012-06-27 15:24:24</wp:comment_date>
			<wp:comment_date_gmt>2012-06-27 14:24:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Awesome work!!really amazing:D:Dvery helpful:D:D:D]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1065</wp:comment_id>
			<wp:comment_author><![CDATA[JACOB]]></wp:comment_author>
			<wp:comment_author_email>gora.rohit@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.242.92.202</wp:comment_author_IP>
			<wp:comment_date>2012-06-28 08:51:36</wp:comment_date>
			<wp:comment_date_gmt>2012-06-28 07:51:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great job dude. Can you suggest the change in you code for half circle.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
				<title>Using CSSEdit with LESS</title>
		<link>http://blog.betabong.com/2011/05/15/using-cssedit-with-less/</link>
		<pubDate>Sun, 15 May 2011 13:56:00 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?p=351</guid>
		<description></description>
		<content:encoded><![CDATA[<img src="http://blog.betabong.com/wp-content/uploads/2011/05/cssedit-less.jpg" alt="" title="cssedit-less" width="512" height="512" class="aligncenter size-full wp-image-347" />

<a href="http://macrabbit.com/cssedit/">CSSEdit</a> is a great app I can't live (or at least work) without. I've recently discovered the <a href="http://lesscss.org/">LESS</a> language, which basically extends CSS with some very very useful functionality - mainly variables and something like functions (called mixins). (By the way, things Google is gonna support natively in their Chrome browser soon – using a slightly different syntax though. See <a href="http://goo.gl/gTWLt">here</a>)

Although CSSEdit hasn't been updated for much too long, it's IMHO still the best CSS editor out there (I've tried quite a few), and as much as I appreciate the bonus of LESS, I wouldn't wanna miss the comfort of CSSEdit.

My first approach to using LESS files with CSSEdit goes like this:

<pre lang="html"><link rel="stylesheet/less" href="css/styles.css">
<script src="js/dev/less.min.js"></script></pre>

styles.css is actually a LESS file and just named with the extension .css so CSSEdit will force an update of its Live Preview every time you modify it.

This works well with smaller html/css combos, but gets more difficult with every complexity level. Reason why is that the whole page will be refreshed with every change.

(I've tried to actually get around this by messing with the source less.js. Although I've nailed the refresh triggering down to the xhr.send() the actual reason stayed mysterious to my brain cells. May be if I'd knew the exact mechanism of how the CSSEdit Live Preview update works... but then, just read on:) 

<strong>There is though a fantastic solution.</strong> One that's also of big help if you work with other editors by the way. LESS has a very nice watch option. Whenever a linked LESS file gets updated, the resulting CSS will be generated and replaced. The great thing if you work with CSSEdit is that you won't have to save your file to see any changes. From a CSS designer (or developer) point of view the outcome is a near-instant live preview. (LESS actually checks for changes in a Timer interval of 1000ms).

That's how this looks in code:

<pre lang="html"><link rel="stylesheet/less" href="css/styles.less">
<script src="js/dev/less.min.js"></script>
<script>less.watch();</script></pre>

If you like to sometimes see a live preview and sometimes just css the hell out of you without any disturbances until the next save, you can also use the glorious Hash Override: just leave away the "less.watch()" part in your script and open your html in the live preview with an additional "#!watch" hash. Something like this:

<img src="http://blog.betabong.com/wp-content/uploads/2011/05/Screen-shot-2011-05-15-at-15.29.33.png" alt="" title="Screen shot 2011-05-15 at 15.29.33" width="330" height="26" class="aligncenter size-full wp-image-345" />

Wow, this will easen my life (ehm.. work) so much! Seriously, I really started to hate those page reloads.

Oh, and by the way, just in case I haven't noted so far: I'd really love to see a CSSEdit update anytime soon. I'm so much willing to drink my self made <a href="http://www.kochbuchfotos.de/14/espresso">Espresso</a> for that. ;-) In case the <a href="http://macrabbit.com/">Rabbit</a> listens.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>351</wp:post_id>
		<wp:post_date>2011-05-15 14:56:00</wp:post_date>
		<wp:post_date_gmt>2011-05-15 13:56:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>using-cssedit-with-less</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="css-tech"><![CDATA[CSS]]></category>
		<category domain="category" nicename="javascript-tech"><![CDATA[Javascript]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>358</wp:comment_id>
			<wp:comment_author><![CDATA[Stu]]></wp:comment_author>
			<wp:comment_author_email>webmaster@beanstalk.com.au</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>203.122.246.111</wp:comment_author_IP>
			<wp:comment_date>2011-08-24 09:08:12</wp:comment_date>
			<wp:comment_date_gmt>2011-08-24 08:08:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I am assuming this is all based on a local dev site and not a remote Dev site yes ? Trying to implement it using CSSEdits "override" option breaks all LESS tags, not surprisingly?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>361</wp:comment_id>
			<wp:comment_author><![CDATA[Philipp]]></wp:comment_author>
			<wp:comment_author_email>philipp.kruft@novacore.de</wp:comment_author_email>
			<wp:comment_author_url>http://www.novacore.de</wp:comment_author_url>
			<wp:comment_author_IP>94.139.57.79</wp:comment_author_IP>
			<wp:comment_date>2011-08-31 21:06:32</wp:comment_date>
			<wp:comment_date_gmt>2011-08-31 20:06:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I found this post more or less by coincidence, then I got really really excited, when I got, that you are saying, that it is possible to use LESS with CSSEdit with its Live Preview. 

Now I tried it in Espresso, and it actually works easier than you are promising here. It just needs the LESS File as .css and the less.js - maybe the watch part is now activated by default.

From now on i will learn and use LESS, thank you very much. 

Cheers, Phil]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>530</wp:comment_id>
			<wp:comment_author><![CDATA[Rob]]></wp:comment_author>
			<wp:comment_author_email>info@evokeartdesign.com</wp:comment_author_email>
			<wp:comment_author_url>http://twitter.com/badlydrawnrob</wp:comment_author_url>
			<wp:comment_author_IP>86.174.125.196</wp:comment_author_IP>
			<wp:comment_date>2011-12-12 03:29:22</wp:comment_date>
			<wp:comment_date_gmt>2011-12-12 02:29:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nice one, I've been trying to @import media queries, which LESS.js can't seem to handle at the moment.

I tried out both the links, auto_update_stylesheet was being too slow for practical use, css_auto_reload's bookmark is brilliant, but can't seem to get the js file version to work. A shame as I'd like to use Espresso's browser with one of these.

So for now at least, using Espresso, Chrome and Codekit (LESS.app's big brother) with the auto-reload bookmark might just be the way forward! Seems more software than should be needed, but hopefully that will change.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>369</wp:comment_id>
			<wp:comment_author><![CDATA[betabong]]></wp:comment_author>
			<wp:comment_author_email>sklaus@betabong.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.betabong.com</wp:comment_author_url>
			<wp:comment_author_IP>178.83.163.134</wp:comment_author_IP>
			<wp:comment_date>2011-09-14 10:10:42</wp:comment_date>
			<wp:comment_date_gmt>2011-09-14 09:10:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The setup I've described here seems to only work with Safari. Chrome won't permit loading of scripts other than from http, so also not from file://.

You can get around that limitation by running the page inside your local webserver (http://localhost)

My current approach is not too use the LESS javascript inside the page, but instead use LESS.app to watch the less files and convert them on save to CSS. Then I may use something like http://nv.github.com/css_auto-reload/ or https://github.com/adamlogic/auto_update_stylesheets

This uses less computing power on the client side and seems to be the cleaner approach to me.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>3</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>279</wp:comment_id>
			<wp:comment_author><![CDATA[Rob]]></wp:comment_author>
			<wp:comment_author_email>rob@evokeartdesign.com</wp:comment_author_email>
			<wp:comment_author_url>http://evokeartdesign.com</wp:comment_author_url>
			<wp:comment_author_IP>86.130.113.178</wp:comment_author_IP>
			<wp:comment_date>2011-05-31 19:40:32</wp:comment_date>
			<wp:comment_date_gmt>2011-05-31 18:40:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm a newcomer to LESS so only just discovering it's benefits — early indications are looking good.

For some reason I hadn't thought of using it like this, I was more worried about getting the <a href="http://forrst.com/posts/Making_Espresso_syntax_highlight_SASS_SCSS-gxI" rel="nofollow">syntax working</a> on Espresso, as far as I can tell, there's no way of doing that on CSS Edit. So until MacRabbit pull their finger out, I'll have to put up with Espresso's limited grouping and CSS functionality.

Thankfully this works on Espresso too, really helped me out — the #!Watch feature is brilliant!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>368</wp:comment_id>
			<wp:comment_author><![CDATA[Lukree]]></wp:comment_author>
			<wp:comment_author_email>lukree@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>83.150.82.217</wp:comment_author_IP>
			<wp:comment_date>2011-09-14 09:56:07</wp:comment_date>
			<wp:comment_date_gmt>2011-09-14 08:56:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Unfortunately I simply cannot get your approach to work...

Only way I get some results is to use less.app to watch changes and generate actual css file and include that file in html header. This way I can use CSSEdit inspector to select elements.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>531</wp:comment_id>
			<wp:comment_author><![CDATA[betabong]]></wp:comment_author>
			<wp:comment_author_email>sklaus@betabong.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.betabong.com</wp:comment_author_url>
			<wp:comment_author_IP>178.83.163.134</wp:comment_author_IP>
			<wp:comment_date>2011-12-12 14:22:37</wp:comment_date>
			<wp:comment_date_gmt>2011-12-12 13:22:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[There's currently so much development going on that the words I write right now might be outdated tomorrow. Anyway, my setup quite changed since then:

I got used to not have an instant preview, but still want to see changes I make whenever I save the file. Today I use LiveReload http://livereload.com/ to do that. It comes with a nice Chrome/Safari/FF plugin that reloads any kind of source on change. (and of course compiles all kind of coffee and less).

CodeKit seems promising, but right now I don't like it too much for its lack of collaboration. I might look into it, because I might just have missed its abilities to handle with subversion, git and co.

In the end I still have the feeling that there will be much better tools to come, and I'm looking forward to improving my production and emotional computer time :-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>3</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>705</wp:comment_id>
			<wp:comment_author><![CDATA[Jay]]></wp:comment_author>
			<wp:comment_author_email>contact@jaygeorge.co.uk</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>78.105.134.83</wp:comment_author_IP>
			<wp:comment_date>2012-02-17 00:44:32</wp:comment_date>
			<wp:comment_date_gmt>2012-02-16 23:44:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Has anyone been able to get this working with Espresso and WordPress? I'm dying to use LESS but not willing to give up the instant preview.

I can get this to work on a static installation, but not WordPress - http://f.cl.ly/items/0y2G351r3O3T3j1b401u/Live-LESS-previewing-in-Espresso.html]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
				<title>Fluid Ratio Height</title>
		<link>http://blog.betabong.com/2012/02/02/fluid-ratio-height/</link>
		<pubDate>Thu, 02 Feb 2012 10:39:57 +0000</pubDate>
		<dc:creator><![CDATA[betabong]]></dc:creator>
		<guid isPermaLink="false">http://blog.betabong.com/?p=494</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.nirazul.ch/">Rouven</a>, a co-worker of mine, found a very neat CSS trick on how to create proportional container. Let's say you want to embed a video in your fluid layout (content adjusts to page width). What you'd want is something like:
<pre lang="css">
.video {
   height: 0.5625x;
}
</pre>
Which means that your height should be 56.25% of your width (which is 100% by default with block elements). Why 56.25%? Because our video has the ratio of 16/9 and 9 divided by 16 is 0.5625.

Well, obviously, this won't work, because CSS doesn't provide a possibility to directly define height as a percentage of width. What Rouven found was a really nice work-around:

<pre lang="html">
<style>
   .video {
      position: relative;
   }
   .video > .height {
      margin-top: 56.25%;
   }
   .video > iframe {
      position: absolute;
      top: 0px; left: 0px;
      width: 100%; height: 100%;
   }
</style>
<div class="video">
    <div class="height"></div>
    <iframe …></iframe>
</div>
</pre>

Why does this work? Because all percentage values of margin <a href="http://http://www.w3.org/TR/CSS2/box.html#margin-properties">relate to width</a>, even top and bottom. Surprised? I was!

What I don't like about that solution is this semantically worthless div as a placeholder for the div. But guess what, there's an even simpler solution: <a href="http://www.w3.org/TR/CSS2/box.html#padding-properties">padding percentages</a> work the exactly same way.

The final solution:

<pre lang="html">
<style>
   .video {
      position: relative;
      padding-top: 56.25%;
   }
   .video > iframe {
      position: absolute;
      top: 0px; left: 0px;
      width: 100%; height: 100%;
   }
</style>
<div class="video">
    <iframe …></iframe>
</div>
</pre>

<a class="download" href="/showcase/fluid-proportion.html">Demo</a></span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>494</wp:post_id>
		<wp:post_date>2012-02-02 11:39:57</wp:post_date>
		<wp:post_date_gmt>2012-02-02 10:39:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>fluid-ratio-height</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="random"><![CDATA[Random]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
	</item>
</channel>
</rss>
